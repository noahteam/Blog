{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","path":"assets/js/tranquilpeak.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/script.min.js","path":"assets/js/script.min.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/script.js","path":"assets/js/script.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","path":"assets/js/jquery.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","path":"assets/js/jquery.fancybox.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox-thumbs.js","path":"assets/js/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/titanavatar.png","path":"assets/images/titanavatar.png","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite@2x.png","path":"assets/images/fancybox_sprite@2x.png","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite.png","path":"assets/images/fancybox_sprite.png","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_overlay.png","path":"assets/images/fancybox_overlay.png","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading@2x.gif","path":"assets/images/fancybox_loading@2x.gif","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading.gif","path":"assets/images/fancybox_loading.gif","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","path":"assets/images/cover.jpg","modified":0},{"_id":"themes/tranquilpeak/source/assets/images/blank.gif","path":"assets/images/blank.gif","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff2","path":"assets/fonts/fontawesome-webfont.woff2","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff","path":"assets/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.ttf","path":"assets/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.svg","path":"assets/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.eot","path":"assets/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/tranquilpeak/source/assets/fonts/FontAwesome.otf","path":"assets/fonts/FontAwesome.otf","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","path":"assets/css/tranquilpeak.css","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/style.min.css","path":"assets/css/style.min.css","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/style.css","path":"assets/css/style.css","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","path":"assets/css/jquery.fancybox.css","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox-thumbs.css","path":"assets/css/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/tranquilpeak/source/assets/css/font-awesome.css","path":"assets/css/font-awesome.css","modified":0}],"Cache":[{"_id":"source/CNAME","shasum":"d88ba2522de41b8f83301dc025cab1976e7fd02f","modified":1437561147753},{"_id":"source/_posts/Continuos-Improvement-and-Respect-for-People.md","shasum":"8d706573f78a2a32429ba3bdef5342e1393c78ca","modified":1437561147755},{"_id":"source/_posts/Map.md","shasum":"b4eed3c5706a35f3883048b3218e1c3cefcee9ac","modified":1437561147761},{"_id":"source/_posts/connection-timeout-issue-for-mssql.md","shasum":"6c2c4c52b88abe879174b1ba6b8fa68111527889","modified":1437561147762},{"_id":"source/_posts/css @media query.md","shasum":"81524c46a19cd74b468a690fc3b49fd5dd561a30","modified":1437561147763},{"_id":"source/_posts/first-blog.md","shasum":"e61b74b9613a9581035996c950211b2a5c9f9799","modified":1437561147766},{"_id":"source/_posts/filter-ip-in-a-ip-range.md","shasum":"cc99306f47c173d7f75878545a21cb5b804e7cad","modified":1437561147765},{"_id":"source/_posts/Binding Event on Datatables.md","shasum":"149e78d53ff8eb2336ab4ad671fc63faf0487a94","modified":1437561147754},{"_id":"source/_posts/implement-permission-control-for-mvc5-project.md","shasum":"4f6dd2756009863e19248d64843fdd22f5ab5336","modified":1437561147767},{"_id":"source/_posts/mvc5-complex-object-model-binding.md","shasum":"a6219b85c9bc44f80f23d487785adf84721cd370","modified":1437561147770},{"_id":"source/_posts/reading-response-dialogue.md","shasum":"2347637284a3e8df2440d01630816a69ca78414e","modified":1437561147771},{"_id":"source/_posts/javascript-unit-test-with-jasmine-karma.md","shasum":"e1a3f3163c0ce8a2519393272c3c134d96850f51","modified":1437561147768},{"_id":"source/_posts/reading-response-peter-drucker.md","shasum":"636c2d1c93d7b3aadb4cf28e47daa931bc5d58fc","modified":1437561147772},{"_id":"source/_posts/use-jenkins-and-msdeploy-for-website-deployment.md","shasum":"a16965eb9725b4420958fae0975b79710df95804","modified":1437561147774},{"_id":"source/_posts/use-testdata-repository-to-simplify-integration-test.md","shasum":"dff0d0cf42c798612e9dba59cf6cf6ac2cb13033","modified":1437561147776},{"_id":"source/_posts/some-guideline-on-writing-better-query.md","shasum":"7ea8fac42fe102e6cea78f698236311219679c15","modified":1437561147773},{"_id":"source/_posts/Introduction-to-Zen-Coding.md","shasum":"d56ae11b9a6ca46a47e8c19f3096e201e897883a","modified":1437561147757},{"_id":"source/all-categories/index.md","shasum":"dd6875c186863c0489268a58b8104bc81c235048","modified":1437561147780},{"_id":"source/all-tags/index.md","shasum":"d9ee4792e60d301fcdf5ce4f39a02470f2674cd7","modified":1437561147781},{"_id":"source/_posts/user-story-mapping.md","shasum":"96b56b9a4d5baace965cc25f816b47097aa23619","modified":1437561147777},{"_id":"source/_posts/Jmeter-step-by-step.md","shasum":"01acab461e2226d4bf74b5fb0b7ca9d0c53bb363","modified":1437561147758},{"_id":"source/all-archives/index.md","shasum":"15169813898aece3dfcd6d3b24f3cfc84616ed1e","modified":1437561147779},{"_id":"themes/tranquilpeak/Gruntfile.js","shasum":"118617102c8cfadc55c4110e55257b582e5a31ad","modified":1437561147873},{"_id":"themes/tranquilpeak/README.md","shasum":"0c341f896ed62a8ccccee8e46da1ce087a2148c7","modified":1437561147878},{"_id":"themes/tranquilpeak/_config.yml","shasum":"a3ffa0994b64f4d87a9052033dfd4522fac5985d","modified":1437561147880},{"_id":"themes/tranquilpeak/SHOWCASE.md","shasum":"283155e9bcab073c1e58639e1553bd3ddc915d8f","modified":1437561147879},{"_id":"themes/tranquilpeak/docs/user.md","shasum":"4c4092b78bf7e5be4ab363cd334f1ebc626e58c1","modified":1437561147886},{"_id":"themes/tranquilpeak/layout/_partial/archive-post.ejs","shasum":"13bceb7b50d203d1b6d8a1757cf4c6e210016fe1","modified":1437561147889},{"_id":"themes/tranquilpeak/bower.json","shasum":"43b709b1745ce9287349f7b866dd84925f35ae9f","modified":1437561147882},{"_id":"themes/tranquilpeak/layout/_partial/cover.ejs","shasum":"ae8dbffdddfc350ff9b98c298e1b59e386d9d6da","modified":1437561147891},{"_id":"themes/tranquilpeak/LICENSE","shasum":"b93ea24b0ab23d669a5d2ad5f43e5a59189ead78","modified":1437561147875},{"_id":"themes/tranquilpeak/layout/_partial/google-analytics.ejs","shasum":"ee794cab12005eb7afec5cdf2a919ac885d2fda4","modified":1437561147895},{"_id":"themes/tranquilpeak/layout/_partial/footer.ejs","shasum":"ee47c57a9c682212e1a5a367fa83e9b5dc54919f","modified":1437561147893},{"_id":"themes/tranquilpeak/docs/developer.md","shasum":"df7225a0ca6be63cd9ab670ae2368d44aad2c7ce","modified":1437561147883},{"_id":"themes/tranquilpeak/layout/_partial/about.ejs","shasum":"4e7460d8234307350b1e2a38a8532dac49787669","modified":1437561147888},{"_id":"themes/tranquilpeak/layout/_partial/head.ejs","shasum":"bc615b53ced06188f8c7981ac5d9d4383e4bf9ed","modified":1437561147896},{"_id":"themes/tranquilpeak/layout/_partial/index.ejs","shasum":"b4735023c82280466a1dd32301469ec3847c7f90","modified":1437561147898},{"_id":"themes/tranquilpeak/layout/_partial/archive.ejs","shasum":"bfba8f72c46c54582ba58722ccde8e55801f29f2","modified":1437561147890},{"_id":"themes/tranquilpeak/layout/_partial/post/actions.ejs","shasum":"44ab2ab92377dd283c9f26b32292fd56df1a68e8","modified":1437561147903},{"_id":"themes/tranquilpeak/layout/_partial/post/disqus.ejs","shasum":"c72be41780f9c65cab2f278cc23b22b6dbb5bac1","modified":1437561147905},{"_id":"themes/tranquilpeak/layout/_partial/post/category.ejs","shasum":"5eb3b1f246568724c766163541355d27d4eb8cc5","modified":1437561147904},{"_id":"themes/tranquilpeak/layout/_partial/post/gallery.ejs","shasum":"4daf295e00dab9179fe14f4d64af5bbcbb2cf01f","modified":1437561147906},{"_id":"themes/tranquilpeak/layout/_partial/post/meta.ejs","shasum":"37bb1afe801d4b9e243f60d83e6fbd9c688c8476","modified":1437561147908},{"_id":"themes/tranquilpeak/layout/_partial/post/header.ejs","shasum":"8e56941179ce2285666355df08419486722da324","modified":1437561147907},{"_id":"themes/tranquilpeak/layout/_partial/pagination.ejs","shasum":"ac27f247cca1ccdd9d49b9f04b06bf1aead7640b","modified":1437561147900},{"_id":"themes/tranquilpeak/layout/_partial/post.ejs","shasum":"79cae9a997c0c88147f7ef29539dbe2dcf469e2b","modified":1437561147901},{"_id":"themes/tranquilpeak/layout/_partial/post/tag.ejs","shasum":"602f51f0b83dd6e06d4988425c2d0b27448d8c94","modified":1437561147909},{"_id":"themes/tranquilpeak/layout/_partial/sidebar.ejs","shasum":"c74334fb3d0eaea556a313f0c036410d11c5e0d2","modified":1437561147911},{"_id":"themes/tranquilpeak/layout/_partial/script.ejs","shasum":"20208f7c78bf1e780718cd10e9cc5f5e49a9dad3","modified":1437561147910},{"_id":"themes/tranquilpeak/layout/all-categories.ejs","shasum":"6d3d9887edb2c18086ee6c7df9fdf80990256031","modified":1437561147914},{"_id":"themes/tranquilpeak/layout/all-tags.ejs","shasum":"502e54222dc0fd53da09d64e9643d7279deb3cad","modified":1437561147915},{"_id":"themes/tranquilpeak/layout/archive.ejs","shasum":"eaf8d7e5595daa728199434dc7fe5b50c2f7ee80","modified":1437561147916},{"_id":"themes/tranquilpeak/layout/all-archives.ejs","shasum":"89ad1ebc25c8502ab98e82abc0d495e222e794d4","modified":1437561147912},{"_id":"themes/tranquilpeak/layout/category.ejs","shasum":"1590069ffd66497ee1e9f854fab8ea9eeae47333","modified":1437561147917},{"_id":"themes/tranquilpeak/layout/index.ejs","shasum":"3486384a86ad4fcc1b192f57cdb1d78d751ed93d","modified":1437561147918},{"_id":"themes/tranquilpeak/layout/_partial/header.ejs","shasum":"ce07d1d454f8940148f0b47ea5d7ba90332b39a7","modified":1437561147897},{"_id":"themes/tranquilpeak/layout/layout.ejs","shasum":"62f4d3d3568f43c47ebaf13aa1a927679aa66942","modified":1437561147919},{"_id":"themes/tranquilpeak/layout/page.ejs","shasum":"aacb3c66f4e8a6d49c77fe821b14ed5fc8fbacfe","modified":1437561147920},{"_id":"themes/tranquilpeak/layout/post.ejs","shasum":"aacb3c66f4e8a6d49c77fe821b14ed5fc8fbacfe","modified":1437561147921},{"_id":"themes/tranquilpeak/scripts/fancybox.js","shasum":"e72cc1f7696af893c39e2d583b66049cc9a262bf","modified":1437561147924},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/CHANGELOG.md","shasum":"130f62371cc5c1394fa3bdaffb0065a572150118","modified":1437561147927},{"_id":"themes/tranquilpeak/layout/tag.ejs","shasum":"72bff1ae241fbe2ddca0537e8ed77c791a7d1766","modified":1437561147921},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/1_s.jpg","shasum":"7331d8f057362dd1010309893d81d9fdb5519d30","modified":1437561147932},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/2_b.jpg","shasum":"d374396009087680112482ffcfaef4a3e85838a1","modified":1437561147934},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/2_s.jpg","shasum":"8d895d7597c81d513e02090da4d646d1b6946e14","modified":1437561147935},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/README.md","shasum":"ebaefb8b334a84dad30b8ef46ec968416aad0194","modified":1437561147929},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/3_s.jpg","shasum":"335e622f0253ab09cbf3fd6577a629367aa9ad47","modified":1437561147937},{"_id":"themes/tranquilpeak/package.json","shasum":"a9c6c4e7e2fe88bdc54fa6d8c763cf8d60e05c7e","modified":1437561147922},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/3_b.jpg","shasum":"08059c8d631ee0c1429e81e61ee15f899ee1471f","modified":1437561147936},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/4_s.jpg","shasum":"f7ecbbd24aa0fde9fe70b86d2148f753229cb6ed","modified":1437561147939},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/index.html","shasum":"874cb0a173ababacd37aa726fdbf93cd07117f3c","modified":1437561147944},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/5_s.jpg","shasum":"a0517fde348e6539420b3c4a6c80551d76730c2b","modified":1437561147941},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/lib/jquery.mousewheel-3.0.6.pack.js","shasum":"5d6f224e3080fd4066f8ef5c63d3f467e9d29e66","modified":1437561147972},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/ajax.txt","shasum":"c893575c5f1a1afdbb812193bd8c72d217c3991f","modified":1437561147942},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1437561147973},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/iframe.html","shasum":"9d15443ffe82cfa83bf0e4f70f3e20bf305080e1","modified":1437561147943},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1437561147974},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1437561147976},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1437561147975},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1437561147978},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1437561147979},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1437561147979},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1437561147981},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1437561147977},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1437561147983},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/jquery.fancybox.js","shasum":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1437561147990},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1437561147985},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1437561147986},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/jquery.fancybox.pack.js","shasum":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1437561147991},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/bower.json","shasum":"a971faba757a707cb390190f0d9d16edd3999f96","modified":1437561148000},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/css/font-awesome.css.map","shasum":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1437561148005},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/css/font-awesome.css","shasum":"247b6f3b2b0e73d2a4a071a1d2d8415a9bede833","modified":1437561148001},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/css/font-awesome.min.css","shasum":"3e435d5167460aaf367836e1973e90a47039faea","modified":1437561148006},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/fontawesome-webfont.eot","shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1437561148011},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/source/jquery.fancybox.css","shasum":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1437561147988},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/fontawesome-webfont.woff2","shasum":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1437561148018},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/animated.less","shasum":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1437561148019},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/core.less","shasum":"f22a10452005d89f3d0725cb4ef07c1e6ba6f553","modified":1437561148021},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/fixed-width.less","shasum":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1437561148022},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/font-awesome.less","shasum":"9f7ea031ef3adc050a5c9f576c29fc40404d0cc6","modified":1437561148023},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/icons.less","shasum":"a2781555df6ee7035fd113fe7a2874ecdb01405f","modified":1437561148024},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/bordered-pulled.less","shasum":"5bfdf58050202b4ee496c36f260335576d209437","modified":1437561148020},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/list.less","shasum":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1437561148028},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/larger.less","shasum":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1437561148027},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/rotated-flipped.less","shasum":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1437561148030},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/stacked.less","shasum":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1437561148032},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/path.less","shasum":"dce2ee8b14b3ded7583c474a4291a892d0430a4c","modified":1437561148029},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/variables.less","shasum":"b5a1f8761aec6a8d3bbf1041eafef68662d7b321","modified":1437561148033},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_animated.scss","shasum":"c3d081abee1076d36a289afc6488e676bc59f023","modified":1437561148035},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_bordered-pulled.scss","shasum":"9a1704661c59a71226fcc8884a4b3a204cb4fec9","modified":1437561148036},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_core.scss","shasum":"dabd7809af3ba1e08d0874601a8ac4d144c1566c","modified":1437561148037},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_larger.scss","shasum":"c5cf379c23025aa001f850bd560a87a92e4f711d","modified":1437561148042},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_icons.scss","shasum":"0faf35a62eb7af904f3cac308955dad36f345e79","modified":1437561148039},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_mixins.scss","shasum":"4d044510b2a643032d75d30d6adb19a2e0da3d32","modified":1437561148044},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_path.scss","shasum":"011339ce07bb12a5736edd7fdbed0b7f3c63bf72","modified":1437561148044},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/less/mixins.less","shasum":"35b0901de30180934afba212f1216e6bf782b0ac","modified":1437561148028},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_rotated-flipped.scss","shasum":"fd48d098af52ffff6f829e7f5a2250a9c3cfc87f","modified":1437561148045},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_stacked.scss","shasum":"c4fe90e7781e8b229bf2657312ba61ecf1026cab","modified":1437561148047},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_fixed-width.scss","shasum":"f4af333866ff3c0da59493fc7077965c6e9d46ac","modified":1437561148038},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_variables.scss","shasum":"ee1260d8b623c825f8608a55fe0e876e9448fa22","modified":1437561148047},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/font-awesome.scss","shasum":"da37674e1df5382be525b11391d2b02e404e0712","modified":1437561148050},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/MIT-LICENSE.txt","shasum":"c0f6b68a190d726442b194e43064aeb2749535c2","modified":1437561148052},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/bower.json","shasum":"d27612b19a46229ab96a051aeab8021521b51edc","modified":1437561148053},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/jsonp.js","shasum":"7ab0037bb7d6f6fbd4957704737a11858264ef5f","modified":1437561148077},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/load.js","shasum":"f69e0052d5296834e07d4f923cf5268307786b48","modified":1437561148079},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/parseXML.js","shasum":"900bc8be286cd2d028554ac6deb3968b9b5662f0","modified":1437561148081},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/var/nonce.js","shasum":"0582cadfcfcc8074bbfb59c75ed946ad6507a26f","modified":1437561148085},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/script.js","shasum":"9ec7804776c17dd4f9c9fa50090befe590b95205","modified":1437561148083},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/var/rquery.js","shasum":"5691a1a1d830f3ac6b321928520e65f6ac997f1d","modified":1437561148086},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/xhr.js","shasum":"c8338776f922bcc0e2ccf4792249bb7b46a38bd3","modified":1437561148087},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax.js","shasum":"33d752c7a4dadbcc6c0e02d17be3ed61ce9b7d7f","modified":1437561148073},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes/attr.js","shasum":"c4fe30b1be8499f43c488589534f871d621aa747","modified":1437561148090},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/ajax/parseJSON.js","shasum":"12f8a459b4057a273eb7869dcdf32b2e598003ca","modified":1437561148080},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/scss/_list.scss","shasum":"8e9c5708bd91364a749f93555ba65af3c49ff1a6","modified":1437561148043},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes/classes.js","shasum":"4a61fcd0bf8b872b8934db30a7e7eca33cd7613f","modified":1437561148091},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes/prop.js","shasum":"b5eb62962d177c1ba371ddb04b1c01462c24d9dd","modified":1437561148093},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes/support.js","shasum":"d531ae51ee82c1ef26588e5309ab37620bc3723a","modified":1437561148094},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes.js","shasum":"ab845d59f00cc2fc70c53cc7e45efe5bf9dd36b9","modified":1437561148088},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/attributes/val.js","shasum":"457e26d7d6819e7445a4c002f4cc9091a67a7bde","modified":1437561148096},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/callbacks.js","shasum":"f83272fc4f681280c9eca77103d79dd778385d74","modified":1437561148098},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core/access.js","shasum":"c5184a11fef444f6e005695ba35237bbc2e1fa3f","modified":1437561148103},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core/parseHTML.js","shasum":"920fe52f2f3ceedfcdef88a35972033ac1859a2f","modified":1437561148106},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core/ready.js","shasum":"88d4878aec9c6abd27b3c08966775942d009d7bc","modified":1437561148108},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core/var/rsingleTag.js","shasum":"49fcdd0ef88542427b106d0d03062b00fae8734c","modified":1437561148109},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core.js","shasum":"49964ae93f30a8b1e52a1ca8c0db02b002f4ef2b","modified":1437561148100},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/core/init.js","shasum":"0da0553f7c4eded7785e49abda3ab348f8e4ce5a","modified":1437561148105},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/curCSS.js","shasum":"38042ef66247ad213c1376d8fc9967c16dde8001","modified":1437561148115},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/addGetHookIf.js","shasum":"67188d76a193df3e082d4b845bb80843d0e3db4e","modified":1437561148114},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/defaultDisplay.js","shasum":"98fa1fa2a060fbeac7e66441f169bd6e78071f6b","modified":1437561148117},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/support.js","shasum":"173f0f71522d2abc6aaaa374a3424bec70b2dc80","modified":1437561148119},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/hiddenVisibleSelectors.js","shasum":"deb1af01abd6f9a90383a0ed4aff2896cb716410","modified":1437561148118},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/swap.js","shasum":"6bbd807c91b30cdf222da4d3b62660d1f80b916f","modified":1437561148121},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/var/cssExpand.js","shasum":"4cbe5502244ccae4e807991b02d2473dec468bcb","modified":1437561148122},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/var/rmargin.js","shasum":"0c85c19f69ea89489f334e2134806f244d50e2d9","modified":1437561148126},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/var/rnumnonpx.js","shasum":"ab979794ccffd9f6ddb6a4f14c47cbf3758e658d","modified":1437561148127},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/var/getStyles.js","shasum":"b8efaa2dd4f2fa230216e852c5e1468edc139b0d","modified":1437561148123},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css.js","shasum":"43faf5961c0226364e6731c41f585bf40be906ea","modified":1437561148111},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/data/Data.js","shasum":"b91bf299bf2b3d710c553be3fcd59557736543c7","modified":1437561148131},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/data/accepts.js","shasum":"f65001ed6b9e090f103c09a6c297b925c69079c0","modified":1437561148133},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/data/var/data_priv.js","shasum":"8744f7344b3c92ff8e2f9b3bdd7e958ab7a2eeb6","modified":1437561148134},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/data.js","shasum":"c2586686e2b9f82568b3f74b9744c0b50a763657","modified":1437561148128},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/data/var/data_user.js","shasum":"8744f7344b3c92ff8e2f9b3bdd7e958ab7a2eeb6","modified":1437561148135},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/deferred.js","shasum":"9e11d635ce252b4332741da5de7e01f78a29f746","modified":1437561148136},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/deprecated.js","shasum":"a8e57b388a760bbe44543321435e76867a87b668","modified":1437561148138},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/css/var/isHidden.js","shasum":"91e174e094d2c7dbd4778589f5f8f8cbf53f6d82","modified":1437561148124},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/dimensions.js","shasum":"435715978992df268308ceb3ebb38ce378a37679","modified":1437561148139},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/effects/animatedSelector.js","shasum":"800899e0c5a3c03972b4dcfcd27251f3694b4f2d","modified":1437561148146},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/effects/Tween.js","shasum":"787afdf2af328ccada536532b58e31ce009c0702","modified":1437561148145},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/effects.js","shasum":"c93ca60e2213a5b56e76cd9364c86c2079b35997","modified":1437561148141},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/event/alias.js","shasum":"2cf25d98ba31935125b66597e905f5c15bad30e0","modified":1437561148154},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/event.js","shasum":"5a0f0d7f4fc91e9bdcf9d4ee02c820935ad964dc","modified":1437561148148},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/event/support.js","shasum":"089b5d06b9e5bfaa09eefa126ad84c3b40026a82","modified":1437561148155},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/exports/amd.js","shasum":"700127b7f23ae8fc9a1b240c7a69e5d0383808bf","modified":1437561148156},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/intro.js","shasum":"047fdf887f9c64142f2323d2abfa2ef346ff6e07","modified":1437561148159},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/event/ajax.js","shasum":"7597d2a0facb6520f69e1c48c2c37f9f992f8bf6","modified":1437561148153},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/manipulation/_evalUrl.js","shasum":"e92a34f07d18d53d2749baccca80f040c85317e4","modified":1437561148164},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/jquery.js","shasum":"4380a53de1ae0c7f7eea928b27c09020455d8383","modified":1437561148160},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/manipulation/support.js","shasum":"d96403a3faa10de7b9b31768bd6be9b34f7d9d82","modified":1437561148166},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/offset.js","shasum":"99ee40fad8d0d36d32a36889d9b3261f074ae088","modified":1437561148168},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/exports/global.js","shasum":"ddcaae89063a74542b2b549e37e3cc82cc3e2212","modified":1437561148158},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/outro.js","shasum":"007147bf334717aab8a6c606b1fc79e3e5f51ff1","modified":1437561148170},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/queue/delay.js","shasum":"5b2b5e0ecd023ce0ee182567bbc5a15890a73041","modified":1437561148173},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/manipulation/var/rcheckableType.js","shasum":"c2eeaf8de0fd1c4fa64c3cae8d5351a9d6953e62","modified":1437561148167},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/selector-native.js","shasum":"d7d7d295b6e663afcfc289b93af00523193c134e","modified":1437561148174},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/selector-sizzle.js","shasum":"6afd91714c968d2e97d1961fe045ee080d41816f","modified":1437561148176},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/serialize.js","shasum":"f19f297908b97d6784a773fd7633a6fa702b91f6","modified":1437561148178},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/selector.js","shasum":"53ee22e94d78bd3c57ec5cdb21ea968888b8d908","modified":1437561148177},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/sizzle/dist/sizzle.min.js","shasum":"f981497de772bd38ac1cd89a1b2ee20734d065d0","modified":1437561148190},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/sizzle/dist/sizzle.min.map","shasum":"2cc5d5da23d445ff44a391185ba59118f0a21977","modified":1437561148194},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/traversing/findFilter.js","shasum":"3ab4324707636986a628fdf8c26567916b8b4bdd","modified":1437561148198},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/traversing.js","shasum":"f21d8a0f6ad116a4c7de7659a6d26a36d2c75ed5","modified":1437561148196},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/manipulation.js","shasum":"54ac1af5f46a61a93173d401c486a3fdd9a3e6e8","modified":1437561148161},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/traversing/var/rneedsContext.js","shasum":"b282e7964e8c93647cd0d490aa517e416952c574","modified":1437561148200},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/concat.js","shasum":"08e5a2e3d56642e6dbe5fd9cd6d7168358672023","modified":1437561148203},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/hasOwn.js","shasum":"8ca62ec08edf8ebd74965083bb85083600b985c2","modified":1437561148205},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/indexOf.js","shasum":"feb7ee1d5f0e7767018f5c97a4fe387999f2f346","modified":1437561148206},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/pnum.js","shasum":"f90bc22883e494745fdff93d33f741949edb8ee1","modified":1437561148208},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/push.js","shasum":"64d89fe296c0a38edfd24bea48fad2b5901b5f4d","modified":1437561148209},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/rnotwhite.js","shasum":"d8185020d81056ba5eacc825afdc0310c1804a05","modified":1437561148210},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/arr.js","shasum":"b2532f845b32905d0b583b79872dc709d3a78d61","modified":1437561148201},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/class2type.js","shasum":"856e53a51d49c649fab3c6032ccf9652ee8307c0","modified":1437561148202},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/slice.js","shasum":"4439e3fba2c7b1b568b07bff0eed473a0c3a3aa9","modified":1437561148211},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/strundefined.js","shasum":"996d9bfddda2f70a986203fabcd278b8727e9ff2","modified":1437561148212},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/support.js","shasum":"c620d0887d493c6d240a6be28220eab5d6f54a78","modified":1437561148213},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/var/toString.js","shasum":"5a24e087ea5f40883946bb8e67dcf5ec6afd4fd9","modified":1437561148214},{"_id":"themes/tranquilpeak/source/_css/components/_archive.scss","shasum":"255187c41e772b5344be9c5e2bb0e4bf44cc33ce","modified":1437561148219},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/wrap.js","shasum":"796e33e4fd017c1cea136267504001f122390a77","modified":1437561148215},{"_id":"themes/tranquilpeak/source/_css/base/_base.scss","shasum":"7eb313f9db700f11b73ef91e318ce65f2e19e41c","modified":1437561148217},{"_id":"themes/tranquilpeak/source/_css/components/_box.scss","shasum":"806359baf70199bfb930b7bcd46598e982e11e7c","modified":1437561148220},{"_id":"themes/tranquilpeak/source/_css/components/_caption.scss","shasum":"b68d4681786aab0e0bf092d586670b4b356a4480","modified":1437561148222},{"_id":"themes/tranquilpeak/source/_css/components/_hide.scss","shasum":"f93b0b0db6f9612e0d48d213e006263cad4ab14e","modified":1437561148224},{"_id":"themes/tranquilpeak/source/_css/components/_button.scss","shasum":"899e5796853b31e4bdd98d96eef2ed85a926ac0c","modified":1437561148221},{"_id":"themes/tranquilpeak/source/_css/components/_form.scss","shasum":"51d1ef363bb6b47328619c783c23efbaf085cc0b","modified":1437561148223},{"_id":"themes/tranquilpeak/source/_css/components/_category.scss","shasum":"c798e33741ce8384332f7b72690697761d5d4548","modified":1437561148222},{"_id":"themes/tranquilpeak/source/_css/components/_highlight.scss","shasum":"a2df6182138876a2f30746edf23e8a9e22673422","modified":1437561148225},{"_id":"themes/tranquilpeak/source/_css/components/_icon.scss","shasum":"20e0698a8f0963cbad5beb78bfb5d01257622ced","modified":1437561148226},{"_id":"themes/tranquilpeak/source/_css/components/_image-gallery.scss","shasum":"a63c89fcade419d887df75e9603289158b2cb34c","modified":1437561148228},{"_id":"themes/tranquilpeak/source/_css/components/_link.scss","shasum":"ac7c71ebb5a5553cb5b15754d86e850b28930bdd","modified":1437561148228},{"_id":"themes/tranquilpeak/source/_css/components/_main-content.scss","shasum":"30a5577a001d7af4ee9acb10561939d54284b70b","modified":1437561148229},{"_id":"themes/tranquilpeak/source/_css/components/_markdown.scss","shasum":"d90de4c61310037c8414cfec4f8b0b97acfe9426","modified":1437561148230},{"_id":"themes/tranquilpeak/source/_css/components/_pagination.scss","shasum":"a49541c6bdc0d0f8b21ea7babe8ea84eb5f2cc44","modified":1437561148231},{"_id":"themes/tranquilpeak/source/_css/components/_post-actions.scss","shasum":"254db79e96b0a82e875c508dbe342e4264d358f5","modified":1437561148232},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/sizzle/dist/sizzle.js","shasum":"92f1b5b23404cce0986fbc8abaddb0e9244e10c4","modified":1437561148181},{"_id":"themes/tranquilpeak/source/_css/components/_tag.scss","shasum":"17cf385de30a1c2468db05697b1d7d7e64374f1b","modified":1437561148236},{"_id":"themes/tranquilpeak/source/_css/components/_text.scss","shasum":"a82607f95af78fd16d0417a8ea0a5d2075830ece","modified":1437561148237},{"_id":"themes/tranquilpeak/source/_css/components/_pullquote.scss","shasum":"7332d0ea7128aacaf1ea6e56ca279c58e5584c81","modified":1437561148235},{"_id":"themes/tranquilpeak/source/_css/components/_tooltip.scss","shasum":"54745301f0c3d1c46b6822ad7140e3a175e8a426","modified":1437561148238},{"_id":"themes/tranquilpeak/source/_css/components/_post.scss","shasum":"ff4bb623b8ad2ab2f92e9f9cdf98359f87f4f977","modified":1437561148234},{"_id":"themes/tranquilpeak/source/_css/layout/_bottom-bar.scss","shasum":"8351fb2764020495e36977c8959ee80d3eb49972","modified":1437561148242},{"_id":"themes/tranquilpeak/source/_css/components/_video.scss","shasum":"2d65fe9ed477c6680cc7cc0f31584c72d76beb58","modified":1437561148238},{"_id":"themes/tranquilpeak/source/_css/layout/_footer.scss","shasum":"06634b57a3b8a736b3c011411887eaf7fe554fca","modified":1437561148244},{"_id":"themes/tranquilpeak/source/_css/layout/_header.scss","shasum":"fb045b4d7c66e6175bd7cf4d61b7964ed8bc1bb0","modified":1437561148246},{"_id":"themes/tranquilpeak/source/_css/layout/_blog.scss","shasum":"e390770731ab5b0fea5cbb1866e4efb93e6079c0","modified":1437561148241},{"_id":"themes/tranquilpeak/source/_css/layout/_cover.scss","shasum":"2095f2c726f324757efffe25a01fe40b48fdb714","modified":1437561148243},{"_id":"themes/tranquilpeak/source/_css/layout/_about.scss","shasum":"8d57565b82ac8f1348d70041e933b81fa7da294e","modified":1437561148239},{"_id":"themes/tranquilpeak/source/_css/tranquilpeak.scss","shasum":"22c48e498f852a2c5ef72cee02e1a03a05ec1aa0","modified":1437561148249},{"_id":"themes/tranquilpeak/source/_css/layout/_sidebar.scss","shasum":"ef3769cf1206ea75b93a0b626a5f2e64ee32f4c4","modified":1437561148248},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_bottom-bar.scss","shasum":"26fb111f740cbe6c47807aa3f164e959371342cd","modified":1437561148254},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_button.scss","shasum":"aa8f36e0e6e8691251c9468e119f5b27d4a5abc0","modified":1437561148255},{"_id":"themes/tranquilpeak/source/_css/utils/_fonts.scss","shasum":"0a69c42b812a30cb362539c252783c03311106c0","modified":1437561148251},{"_id":"themes/tranquilpeak/source/_css/utils/_variables.scss","shasum":"e1aa9180adc5a9ecdef702d59c76a7cff7633e52","modified":1437561148252},{"_id":"themes/tranquilpeak/source/_css/layout/_main.scss","shasum":"193aa7498c86a3455c6cc4f2bf05846b34663c8d","modified":1437561148247},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_form.scss","shasum":"a73ebe20494dd8b3718276ad9810d615f8995f5f","modified":1437561148257},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_header.scss","shasum":"e3fbb12f547fc6a07d92e91c98177bcbce51a69a","modified":1437561148258},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_opacity.scss","shasum":"38e03eaf1afc7a5a601479e556ca4c8f9abfb464","modified":1437561148259},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_main.scss","shasum":"6cef69a93a68f8a8d26faad9385e205effa68723","modified":1437561148258},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_category.scss","shasum":"a058a31159ef24846b108bc87516fe889ff4805d","modified":1437561148256},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_sidebar.scss","shasum":"cdd280daf9b9a240299bd1f4a682260c95826df2","modified":1437561148261},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_tag.scss","shasum":"1f989247cd8fb95c02f1a12871455f13d01d4678","modified":1437561148262},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_prefix.scss","shasum":"ee511753fc6537f2719fe39142e28cc280ec5223","modified":1437561148260},{"_id":"themes/tranquilpeak/source/_js/about.js","shasum":"fa543546b48bfcd4f72814c72da3a72dc7d8edda","modified":1437561148269},{"_id":"themes/tranquilpeak/source/_js/fancybox.js","shasum":"13e2621a3152d4841b6bf3d10de572ef77003f71","modified":1437561148275},{"_id":"themes/tranquilpeak/source/_js/categories-filter.js","shasum":"fdd243c80763546b4189d37d8ed7e2956fde71a7","modified":1437561148273},{"_id":"themes/tranquilpeak/source/_images/titanavatar.png","shasum":"d34eccf7fa13bc1481bc7dd733f3baac3a6edc99","modified":1437561148268},{"_id":"themes/tranquilpeak/source/_js/header.js","shasum":"3348badc6604562d88bfc9beb06d5dc3ed7bc644","modified":1437561148276},{"_id":"themes/tranquilpeak/source/_js/archives-filter.js","shasum":"0339da83bcd28468e6bacaaa83f40d8d589a00b8","modified":1437561148271},{"_id":"themes/tranquilpeak/source/_js/post-bottom-bar.js","shasum":"b1ac1f279d47dd260e33867a92f843d521bc33ab","modified":1437561148279},{"_id":"themes/tranquilpeak/source/_js/image-gallery.js","shasum":"e110ecf28811ae82842c32f3b7008dc5ec98d86f","modified":1437561148278},{"_id":"themes/tranquilpeak/source/assets/css/font-awesome.css","shasum":"247b6f3b2b0e73d2a4a071a1d2d8415a9bede833","modified":1437561148287},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1437561148290},{"_id":"themes/tranquilpeak/source/_js/smartresize.js","shasum":"bd32ccef165bfe5fb9e360d4f26f3a5749d8ff74","modified":1437561148283},{"_id":"themes/tranquilpeak/source/_js/sidebar.js","shasum":"1345acbc5da9ba09c9758fff842d7c09315460be","modified":1437561148281},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","shasum":"efe0e220a706a556885f93e381763ecd7c052026","modified":1437561148292},{"_id":"themes/tranquilpeak/source/_js/tags-filter.js","shasum":"b79af526f3fa76ad279cbc4ed0598fd146fec576","modified":1437561148284},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","shasum":"591ed00d49bb902136ec08aa5eb97451af4d9c33","modified":1437561148296},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/src/queue.js","shasum":"fe55ca5c78a876709b6ec8c5f4075a176e5a16e1","modified":1437561148171},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.eot","shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1437561148300},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff2","shasum":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1437561148307},{"_id":"themes/tranquilpeak/source/assets/images/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1437561148308},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1437561148313},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1437561148314},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1437561148316},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox-thumbs.js","shasum":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1437561148319},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","shasum":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1437561148322},{"_id":"themes/tranquilpeak/source/assets/images/titanavatar.png","shasum":"d34eccf7fa13bc1481bc7dd733f3baac3a6edc99","modified":1437561148318},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1437561148315},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1437561148317},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","shasum":"209f9e9764a2ff666c93b79710e06edd47809491","modified":1437561148331},{"_id":"themes/tranquilpeak/tasks/config/bower.js","shasum":"ebfe7282fd20d8014f37ee43eed754331d221310","modified":1437561148337},{"_id":"themes/tranquilpeak/tasks/config/clean.js","shasum":"55179222f434563e05f348021662296b852f5c50","modified":1437561148338},{"_id":"themes/tranquilpeak/tasks/config/cssmin.js","shasum":"c6bb693d6658c2214db90d053fa65114b8395a68","modified":1437561148341},{"_id":"themes/tranquilpeak/tasks/config/sails-linker.js","shasum":"9f754c3c09a0f36c4b29c30bc76ae3c3d3742acc","modified":1437561148343},{"_id":"themes/tranquilpeak/tasks/config/concat.js","shasum":"940db8a6f8532f94abee5c071097c926ec69ae75","modified":1437561148339},{"_id":"themes/tranquilpeak/tasks/config/sync.js","shasum":"735274ffd66a9dba14923a4d618d60f0e7719273","modified":1437561148346},{"_id":"themes/tranquilpeak/tasks/config/replace.js","shasum":"f51b5d2e86e499b6dfff72664c0c901fa3a1b4b9","modified":1437561148342},{"_id":"themes/tranquilpeak/tasks/pipeline.js","shasum":"e95370013292453fbf9bbb3544514c39ae3a7014","modified":1437561148349},{"_id":"themes/tranquilpeak/tasks/config/sass.js","shasum":"b561c6a2f6fb30ca35892b35838c12e210dd60fb","modified":1437561148344},{"_id":"themes/tranquilpeak/tasks/config/uglify.js","shasum":"a8396d32e5af950a5117c5d2488fa0daeba6f06d","modified":1437561148347},{"_id":"themes/tranquilpeak/tasks/register/compileAssets.js","shasum":"854cab7e5e4239eee706c503f567b1b482cc1acf","modified":1437561148353},{"_id":"themes/tranquilpeak/tasks/register/default.js","shasum":"a8ca77bed7cfcc08a7f475c8ec126e30ba5fd1d1","modified":1437561148354},{"_id":"themes/tranquilpeak/tasks/config/watch.js","shasum":"d91f929d3dbdcd6a6f868d37da192c4ca950c48d","modified":1437561148348},{"_id":"themes/tranquilpeak/tasks/register/linkAssets.js","shasum":"1669a00eeb5aca8ebc1198fa665a485c7aaab9e6","modified":1437561148355},{"_id":"themes/tranquilpeak/tasks/register/build.js","shasum":"01f3d1092976a9e91e603ab98de0f64775d47ab6","modified":1437561148351},{"_id":"themes/tranquilpeak/tasks/register/buildProd.js","shasum":"7a4831f7666154001592d496702fb3024cff8e23","modified":1437561148352},{"_id":"themes/tranquilpeak/tasks/register/linkAssetsProd.js","shasum":"7d8f8b079ab39a1dbc49b50bde6aa58d2794c5e8","modified":1437561148356},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/1_b.jpg","shasum":"f7953162f526e3fc1f37602b0aca0f544d96b095","modified":1437561147931},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/4_b.jpg","shasum":"9855aed7b58d5662229427c946801460f5664ffd","modified":1437561147938},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/demo/5_b.jpg","shasum":"d6fdf06b8058a0ff5ce339313996b9ef220431bc","modified":1437561147940},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/lib/jquery-1.10.1.min.js","shasum":"fb861e670de71f54acb0b96361bfcdb21414df45","modified":1437561147947},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/FontAwesome.otf","shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1437561148010},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/fontawesome-webfont.ttf","shasum":"9088143b19979779b2116cef38b661f72d982e19","modified":1437561148016},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/fontawesome-webfont.woff","shasum":"56ce13e71c2150d81bc972940584915181bd6081","modified":1437561148017},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/dist/jquery.min.js","shasum":"6b4fb754d29b297b539bf62ba9b4eaf0f33f314a","modified":1437561148059},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/dist/jquery.min.map","shasum":"3d1b666f80699301e2beb47939fa854a82b7fd22","modified":1437561148070},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/lib/jquery-1.9.0.min.js","shasum":"677b5f392aa1f9de26617953bc6104553a5a9043","modified":1437561147960},{"_id":"themes/tranquilpeak/source/assets/css/style.min.css","shasum":"bc40be13f4b7cb8f8a427c06fcd5e3bc31f78eb9","modified":1437561148295},{"_id":"themes/tranquilpeak/source/assets/fonts/FontAwesome.otf","shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1437561148299},{"_id":"themes/tranquilpeak/source/assets/css/style.css","shasum":"98938dcb49d9a3a16213abc4abdc2c81ed85127b","modified":1437561148294},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.ttf","shasum":"9088143b19979779b2116cef38b661f72d982e19","modified":1437561148304},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff","shasum":"56ce13e71c2150d81bc972940584915181bd6081","modified":1437561148306},{"_id":"themes/tranquilpeak/tasks/register/syncAssets.js","shasum":"4e5bfa297739ebdf7176bbccba04949cece8ab9f","modified":1437561148358},{"_id":"themes/tranquilpeak/source/assets/js/script.min.js","shasum":"9abb3bb8b405325b98bf03e6810037922a070a5a","modified":1437561148330},{"_id":"themes/tranquilpeak/source/_bower_components/fancybox/sprite.psd","shasum":"2669feac27b2d221bdb133acecf0a39f50d9ec27","modified":1437561147996},{"_id":"themes/tranquilpeak/source/_bower_components/jquery/dist/jquery.js","shasum":"b645a8e3d9c87c37a590c10a689e952ef1146aa0","modified":1437561148057},{"_id":"themes/tranquilpeak/source/_images/cover.jpg","shasum":"e300bf91f910d56eb21f75c237dded507898dd94","modified":1437561148267},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","shasum":"e300bf91f910d56eb21f75c237dded507898dd94","modified":1437561148312},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","shasum":"b645a8e3d9c87c37a590c10a689e952ef1146aa0","modified":1437561148325},{"_id":"themes/tranquilpeak/source/_bower_components/fontawesome/fonts/fontawesome-webfont.svg","shasum":"0b42e5ee7daafb72b1237b9d5b7f5ab0775fffc7","modified":1437561148014},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.svg","shasum":"0b42e5ee7daafb72b1237b9d5b7f5ab0775fffc7","modified":1437561148302},{"_id":"themes/tranquilpeak/source/assets/js/script.js","shasum":"47ef7e15e7918ea55257edcee187de3809ca8088","modified":1437561148328},{"_id":"public/CNAME","modified":1437561168707,"shasum":"d88ba2522de41b8f83301dc025cab1976e7fd02f"},{"_id":"public/assets/js/tranquilpeak.js","modified":1437561168713,"shasum":"2e9a3778965df75a09199091b20469c4eea01e9b"},{"_id":"public/assets/js/script.min.js","modified":1437561168717,"shasum":"d562fd5f267af50bb863815e3d298251ce9788a5"},{"_id":"public/assets/js/script.js","modified":1437561168722,"shasum":"fda3640cc8a1067bb36b8eaaf92329ed9d789183"},{"_id":"public/assets/js/jquery.js","modified":1437561168761,"shasum":"0fed45ad7a48ace869bc725ca474ad86a1ef1562"},{"_id":"public/assets/js/jquery.fancybox.js","modified":1437561168766,"shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4"},{"_id":"public/assets/js/jquery.fancybox-thumbs.js","modified":1437561168769,"shasum":"53e194f4a72e649c04fb586dd57762b8c022800b"},{"_id":"public/assets/images/titanavatar.png","modified":1437561168775,"shasum":"d34eccf7fa13bc1481bc7dd733f3baac3a6edc99"},{"_id":"public/assets/images/fancybox_sprite@2x.png","modified":1437561168777,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/assets/images/fancybox_sprite.png","modified":1437561168781,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/assets/images/fancybox_overlay.png","modified":1437561168784,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/assets/images/fancybox_loading@2x.gif","modified":1437561168787,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/assets/images/fancybox_loading.gif","modified":1437561168791,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/assets/images/cover.jpg","modified":1437561168794,"shasum":"e300bf91f910d56eb21f75c237dded507898dd94"},{"_id":"public/assets/images/blank.gif","modified":1437561168799,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/assets/fonts/fontawesome-webfont.woff2","modified":1437561168816,"shasum":"1075231650f579955905bb2f6527148a8e2b4b16"},{"_id":"public/assets/fonts/fontawesome-webfont.woff","modified":1437561168821,"shasum":"56ce13e71c2150d81bc972940584915181bd6081"},{"_id":"public/assets/fonts/fontawesome-webfont.ttf","modified":1437561168825,"shasum":"9088143b19979779b2116cef38b661f72d982e19"},{"_id":"public/assets/fonts/fontawesome-webfont.svg","modified":1437561168830,"shasum":"0b42e5ee7daafb72b1237b9d5b7f5ab0775fffc7"},{"_id":"public/assets/fonts/fontawesome-webfont.eot","modified":1437561168834,"shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167"},{"_id":"public/assets/fonts/FontAwesome.otf","modified":1437561168838,"shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4"},{"_id":"public/assets/css/tranquilpeak.css","modified":1437561168845,"shasum":"64f04b13815d7d36e5960f7d7f01bda724b2df28"},{"_id":"public/assets/css/style.min.css","modified":1437561168849,"shasum":"2c11be49699d58a55abb378b5592c5ed5fc6351b"},{"_id":"public/assets/css/style.css","modified":1437561168853,"shasum":"2b53933280c134952dea104c327cf138f0741402"},{"_id":"public/assets/css/jquery.fancybox.css","modified":1437561168858,"shasum":"2cc67cd8606545e140f20a72c0f583dce154fb36"},{"_id":"public/assets/css/jquery.fancybox-thumbs.css","modified":1437561168861,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/assets/css/font-awesome.css","modified":1437561168864,"shasum":"2148b3dddca54f413e8ba50aa48b53b400bd99b8"},{"_id":"public/all-tags/index.html","modified":1437561193456,"shasum":"134d1937b23c9c7bcac6c0b5293ae72305478e68"},{"_id":"public/all-categories/index.html","modified":1437561168914,"shasum":"0a69bafc553c452058e6d0ebb71a9bc7b5261ce4"},{"_id":"public/all-archives/index.html","modified":1437561193471,"shasum":"021086bd1953e6063f76bb940d8eeee228da6921"},{"_id":"public/2015/07/22/mvc5-complex-object-model-binding/index.html","modified":1437561168939,"shasum":"9900849b80762128a4a923419c598497f6b4681d"},{"_id":"public/2015/07/22/javascript-unit-test-with-jasmine-karma/index.html","modified":1437561168951,"shasum":"5cb64ad16a6b7b57808614a63472a87480b952c8"},{"_id":"public/2015/07/22/connection-timeout-issue-for-mssql/index.html","modified":1437561168960,"shasum":"841f56190e045d9a9182d21ff0004489e375400a"},{"_id":"public/2015/07/22/Jmeter-step-by-step/index.html","modified":1437561168970,"shasum":"50aae3b4dfc985c2e5c4e8118332ed622d7c84bb"},{"_id":"public/2015/07/22/Binding Event on Datatables/index.html","modified":1437561168983,"shasum":"e5f68e3a3c4177aa127b477f700157534709525c"},{"_id":"public/2015/07/21/implement-permission-control-for-mvc5-project/index.html","modified":1437561193520,"shasum":"7f929f214b1aecdf9bf1242d5fbe26e49d36e52a"},{"_id":"public/2015/07/19/Map/index.html","modified":1437561193551,"shasum":"ba4182024a86beb1520deea52456c8750c54d196"},{"_id":"public/2015/07/07/reading-response-dialogue/index.html","modified":1437561169019,"shasum":"a84381ac38c4d67042fa818ae97887af994f0bca"},{"_id":"public/2015/07/07/some-guideline-on-writing-better-query/index.html","modified":1437561169030,"shasum":"7559bb6f0a1b60870d79d1c56be15086fae8c291"},{"_id":"public/2015/07/06/Introduction-to-Zen-Coding/index.html","modified":1437561169038,"shasum":"1bb642e7e5760036a7a8a9dee1060634d27ac74b"},{"_id":"public/2015/07/03/use-testdata-repository-to-simplify-integration-test/index.html","modified":1437561169048,"shasum":"4cbf34b93bf73c9429e56d39a2c9c71a1827879d"},{"_id":"public/2015/06/29/Continuos-Improvement-and-Respect-for-People/index.html","modified":1437561169058,"shasum":"47cff37df976dd9b96172d9a9a487e2bd8ad25d9"},{"_id":"public/2015/06/29/css @media query/index.html","modified":1437561169067,"shasum":"a3329b6dd331fbe3e4adf993fc4ef85cdfcc0383"},{"_id":"public/2015/06/29/use-jenkins-and-msdeploy-for-website-deployment/index.html","modified":1437561169076,"shasum":"d8fdcf2efcc961906a48c5a2db27f1abf6a09b46"},{"_id":"public/2015/06/29/filter-ip-in-a-ip-range/index.html","modified":1437561169086,"shasum":"95d96369f45c260296b2505935b5553489ff6bef"},{"_id":"public/2015/06/28/reading-response-peter-drucker/index.html","modified":1437561169095,"shasum":"69ce934ee2497fca07b96ce2aeac7d1278501d8c"},{"_id":"public/2015/06/24/user-story-mapping/index.html","modified":1437561169104,"shasum":"1cd8c4c7f89cfb7bbaa0b238ed9ff45f060fc01c"},{"_id":"public/2015/06/19/first-blog/index.html","modified":1437561169117,"shasum":"1a4d04a0b8fa212ba35f06804f626829bd70a187"},{"_id":"public/archives/index.html","modified":1437561193677,"shasum":"7ad8d91b5e0e9c8b2e20a674ee1942fe2029e58a"},{"_id":"public/archives/page/2/index.html","modified":1437561193692,"shasum":"003f11066035a93a15fe5505f5392024332424ab"},{"_id":"public/archives/2015/index.html","modified":1437561193706,"shasum":"fdc591769b7622637e90062cccbcd6604a07af09"},{"_id":"public/archives/2015/page/2/index.html","modified":1437561193719,"shasum":"e6c358a9cf4dcbeddcaaf5d9158fc0a9540f3b23"},{"_id":"public/archives/2015/06/index.html","modified":1437561169185,"shasum":"1930ccad87380658a478e7c5c6138b78f92b6819"},{"_id":"public/archives/2015/07/index.html","modified":1437561193743,"shasum":"4a4af14cf9008b9373fee835e2426014cb5f6b0e"},{"_id":"public/archives/2015/07/page/2/index.html","modified":1437561193752,"shasum":"8e9e156f0dce2f59a54cd251bb55829be8af1a3a"},{"_id":"public/index.html","modified":1437561193774,"shasum":"ede02c4093b7d412b76dde194919254acbf94e91"},{"_id":"public/page/2/index.html","modified":1437561193787,"shasum":"83446e3d5dcad834d183c104029969ce006302dd"},{"_id":"public/sitemap.xml","modified":1437561193756,"shasum":"808861fe05d58ae3918b138c90d49d63042d6528"},{"_id":"public/tags/Agile-User-Story-Mapping/index.html","modified":1437561169251,"shasum":"f38d57a36b78dae78199d481d77f74ed3e1a8ac5"},{"_id":"public/tags/csharp/index.html","modified":1437561169260,"shasum":"9d37e2dcf40d7e37fb0ca897d666abb91b9b6044"},{"_id":"public/tags/Net/index.html","modified":1437561169268,"shasum":"f50ab6ad96ca6a0a93afc405eede58318f7fa603"},{"_id":"public/tags/Test/index.html","modified":1437561169275,"shasum":"f68dd074c2d5ad7f1bf7d571e58d240f107c7377"},{"_id":"public/tags/Jenkins/index.html","modified":1437561169281,"shasum":"9c4ae00cbffb75eb07fba31116575deeec246084"},{"_id":"public/tags/msdeploy/index.html","modified":1437561169287,"shasum":"002fd61c10c3a60a6e6f03631fd3bffbacd414ce"},{"_id":"public/tags/CI/index.html","modified":1437561169293,"shasum":"6a01cb2b2aa3e0c853b52379656f66ab7e76fac7"},{"_id":"public/tags/sql/index.html","modified":1437561193852,"shasum":"c562f45bf4a0efb3fc38b58695fa0e3c37183c00"},{"_id":"public/tags/query/index.html","modified":1437561169312,"shasum":"519704f6ee90f8f2016cb6b69a7f2689c9e1a400"},{"_id":"public/tags/Management/index.html","modified":1437561169318,"shasum":"f90c2fb29b04b3ef5b049df133853fa3464fe31d"},{"_id":"public/tags/team/index.html","modified":1437561169325,"shasum":"9bb73df36d92d6a440f89f13fdf9a1c925c1dbe2"},{"_id":"public/tags/Scrum-Master/index.html","modified":1437561169333,"shasum":"a6dfc5923c0de97f17cb31307d1d7f7786d659f1"},{"_id":"public/tags/mvc5/index.html","modified":1437561169340,"shasum":"5e3435e5e2634e1b1fbddf13c1cd0c10fa6bddc9"},{"_id":"public/tags/asp-net/index.html","modified":1437561169346,"shasum":"0001dc46608c947f6616e756bb3016163494c3be"},{"_id":"public/tags/javascript/index.html","modified":1437561169353,"shasum":"6f4a693c266b6e661d55b5e29f08e75c42aba33e"},{"_id":"public/tags/unit-test/index.html","modified":1437561169360,"shasum":"81bd4661253c3e918c5deed4fbf9853c8ecd35d6"},{"_id":"public/tags/jasmine/index.html","modified":1437561169368,"shasum":"43921539540359cf44fd7872e3102a7f91b312dd"},{"_id":"public/tags/karma/index.html","modified":1437561169375,"shasum":"95972873ccd939c7b13cdea858a332705c72de4b"},{"_id":"public/tags/C/index.html","modified":1437561169381,"shasum":"dc1ca07e46af350a4b07f49e8caafa29cf9ce925"},{"_id":"public/tags/MVC/index.html","modified":1437561169389,"shasum":"eb8ef92a1e0acd1b73026cd17bafda6c1abd9518"},{"_id":"public/tags/git/index.html","modified":1437561169396,"shasum":"717a962f25b7fce2853e959ebaff2986fe73a4a5"},{"_id":"public/tags/hexo/index.html","modified":1437561169405,"shasum":"126df9cca5aae407d05c90b0590b6dd2aa0e3f17"},{"_id":"public/tags/tsql/index.html","modified":1437561169411,"shasum":"ff7f957318863be4bd2d2abc830c928ab3160f9f"},{"_id":"public/tags/css/index.html","modified":1437561169418,"shasum":"2c46b4d79a4a165a96e12fe9c4849ab040b160dc"},{"_id":"public/tags/mssql/index.html","modified":1437561169424,"shasum":"975d5c51eb00576d1564714b433a8f0381f57447"},{"_id":"public/tags/Remote-usability-testing-tool/index.html","modified":1437561169431,"shasum":"d87c95e64daac953802210d5158434b95a0b9c60"},{"_id":"public/tags/Heat-Map/index.html","modified":1437561169437,"shasum":"78c2677ee3a2dc919bbadedcd26cb0de81a07f9e"},{"_id":"public/tags/JMeter/index.html","modified":1437561169443,"shasum":"f0678b60122a8ac4c371f51b84a8cc1336cd073e"},{"_id":"public/tags/Load-testing/index.html","modified":1437561169452,"shasum":"8d3b01de9da516293803d9d5a0d55e4e6f5dbfa1"},{"_id":"public/tags/html-css/index.html","modified":1437561169474,"shasum":"c3c98b0e5aed5a1ca5f989b048b193c0691f80ab"},{"_id":"public/tags/lean/index.html","modified":1437561169480,"shasum":"23c4ffcd33d5b5ddcaf67e582c455fe826ca62bb"},{"_id":"public/tags/scrum/index.html","modified":1437561169486,"shasum":"9409bcd2dd0a8bb9bce0fd2d9792ba794b217b3d"},{"_id":"public/tags/agile/index.html","modified":1437561169493,"shasum":"218897d8de62879f0ed73305ec4e955c94223a6f"},{"_id":"source/_posts/how-to-store-performance-monitor-data-in-sql-server.md","shasum":"d43727ee4f6ebd785e11897e46dda682dc89d6f2","modified":1437495035582},{"_id":"public/2015/07/21/how-to-store-performance-monitor-data-in-sql-server/index.html","modified":1437561193538,"shasum":"b585e6563a3adfb407722511277144ab0dcbaa25"},{"_id":"public/tags/performance-monitor/index.html","modified":1437561193973,"shasum":"1fed64faf5ed6603c1fb65f2d760494e81bf1ae6"},{"_id":"public/tags/database/index.html","modified":1437561193982,"shasum":"1b8b53a51cdeb3861f634f56458741cbc5f07491"}],"Category":[],"Data":[],"Page":[{"title":"all-tags","layout":"all-tags","_content":"","source":"all-tags/index.md","raw":"title: \"all-tags\"\nlayout: \"all-tags\"\n---","date":"2015-07-22T10:32:27.781Z","updated":"2015-07-22T10:32:27.781Z","path":"all-tags/index.html","comments":1,"_id":"cicemsvij0000xcf6598a0yhs"},{"title":"all-categories","layout":"all-categories","_content":"","source":"all-categories/index.md","raw":"title: \"all-categories\"\nlayout: \"all-categories\"\n---","date":"2015-07-22T10:32:27.780Z","updated":"2015-07-22T10:32:27.780Z","path":"all-categories/index.html","comments":1,"_id":"cicemsvkw0001xcf6b54xo4w7"},{"title":"all-archives","layout":"all-archives","_content":"","source":"all-archives/index.md","raw":"title: \"all-archives\"\nlayout: \"all-archives\"\n---","date":"2015-07-22T10:32:27.779Z","updated":"2015-07-22T10:32:27.779Z","path":"all-archives/index.html","comments":1,"_id":"cicemsvn00002xcf61r56gz2u"}],"Post":[{"title":"User Story Mapping","subtitle":"By Janet Teo","date":"2015-06-23T16:39:15.000Z","_content":"\n##About\nIntroduction of User Story and User Story Mapping\n\n## What is User Story?\nIt is a description of a business requirement from end to end in a system. It is used to facilitate discussion on under\nUsually written in a index card in the format:\n1. *In order to (benefit) As a (role) I want to (action)*\n\tor\n2. *As a (role) I want to (action) so that I can (benefit)*\n\nThere are scrum teams prefer the 1st format as they will focus more on user's goal/issue that want to resolve than the action/solution being taken.\n\nUser stories can be generated by stakeholder, team member or product owner.\nThose user stories will be generated and grouped as a backlog.\n\n### Drawbacks of a flat product backlog\n1. Many user stories that cannot be correlated to each other. No big picture.\n2. It is not easy to making decision on priority as there is no direction on product development.\n3. Making Release plan may be difficult.\n\n\n## What is User Story Mapping?\nIt is a way to organise and prioritise user stories. It is useful to determine release roadmap and provide a big picture of a product.\n\n![alt text](http://3.bp.blogspot.com/-Qmue5-IotbA/VTZsZUsecxI/AAAAAAAAAO0/J34ZMd_WdJE/s1600/UserStoryMapDefinitions.png \"User Story Map\")\nBig stories are called user activities. Then those activities make up a horizontal backbone.\n\n###Create story map\n1. Frame the problem\n  * What problem is the website going to resolve. \n  * Who are the users. Persona can be used to identify users.\n2. Map the big picture\n  * Brainstorm to list out all the tasks. \n  * Group the task into activities\n3. Explore\n  * Arrange left to right, examine any missing/alternative/exception tasks\n  * Find out walking skeleton: the software built of the least number of necessary tasks\n4. Slice out a release strategy\n  * Must-have -> one-dimensional (The more I get the better) -> delighters (I love the element of the product)\n5. Slide out a learning strategy\n  * After slide out must-have, also identify the outcome which want to achieve on solving the problem frame in the first step. \n6. Slide out a development strategy\n  * Opening Game: Bare Necessity \n  * Mid-Game: Capability & Flexibility -> Safety \n  * End Game: Usability, Performance\n\n\n\nreference:\nhttp://www.agileproductdesign.com/presentations/user_story_mapping/\nhttp://www.agilemodeling.com/artifacts/personas.htm\nhttp://winnipegagilist.blogspot.tw/2012/03/how-to-create-user-story-map.html\n","source":"_posts/user-story-mapping.md","raw":"title: User Story Mapping\nsubtitle: By Janet Teo\ndate: 2015-06-24 00:39:15\ntags: Agile, User Story Mapping\n---\n\n##About\nIntroduction of User Story and User Story Mapping\n\n## What is User Story?\nIt is a description of a business requirement from end to end in a system. It is used to facilitate discussion on under\nUsually written in a index card in the format:\n1. *In order to (benefit) As a (role) I want to (action)*\n\tor\n2. *As a (role) I want to (action) so that I can (benefit)*\n\nThere are scrum teams prefer the 1st format as they will focus more on user's goal/issue that want to resolve than the action/solution being taken.\n\nUser stories can be generated by stakeholder, team member or product owner.\nThose user stories will be generated and grouped as a backlog.\n\n### Drawbacks of a flat product backlog\n1. Many user stories that cannot be correlated to each other. No big picture.\n2. It is not easy to making decision on priority as there is no direction on product development.\n3. Making Release plan may be difficult.\n\n\n## What is User Story Mapping?\nIt is a way to organise and prioritise user stories. It is useful to determine release roadmap and provide a big picture of a product.\n\n![alt text](http://3.bp.blogspot.com/-Qmue5-IotbA/VTZsZUsecxI/AAAAAAAAAO0/J34ZMd_WdJE/s1600/UserStoryMapDefinitions.png \"User Story Map\")\nBig stories are called user activities. Then those activities make up a horizontal backbone.\n\n###Create story map\n1. Frame the problem\n  * What problem is the website going to resolve. \n  * Who are the users. Persona can be used to identify users.\n2. Map the big picture\n  * Brainstorm to list out all the tasks. \n  * Group the task into activities\n3. Explore\n  * Arrange left to right, examine any missing/alternative/exception tasks\n  * Find out walking skeleton: the software built of the least number of necessary tasks\n4. Slice out a release strategy\n  * Must-have -> one-dimensional (The more I get the better) -> delighters (I love the element of the product)\n5. Slide out a learning strategy\n  * After slide out must-have, also identify the outcome which want to achieve on solving the problem frame in the first step. \n6. Slide out a development strategy\n  * Opening Game: Bare Necessity \n  * Mid-Game: Capability & Flexibility -> Safety \n  * End Game: Usability, Performance\n\n\n\nreference:\nhttp://www.agileproductdesign.com/presentations/user_story_mapping/\nhttp://www.agilemodeling.com/artifacts/personas.htm\nhttp://winnipegagilist.blogspot.tw/2012/03/how-to-create-user-story-map.html\n","slug":"user-story-mapping","published":1,"updated":"2015-07-22T10:32:27.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvnd0003xcf6o55bfty8"},{"title":"Use TestData Repository to simplify your Integration Test","Author":"Ji Zhoubo","date":"2015-07-03T08:11:56.000Z","_content":"## About\nIt has always been a boring and tough thing to manually insert data to DB for Integration Test, especially when the number of records is huge.  \n\nThe old and bad solution is: Maintain a lot of SQL scripts in Test Project. We have gone through the suffering, and finally come up a solution  **TestData Repository** to easily maintain test cases.\n\nIn this post, we will share this solution and how it simplifies Integration Test.\n\n## Problems and Solution\n\n### Map TestData Repository to DB Table\n To apply to all entities (tables) we want to create tests for, we create a generic TestDataRepository class, which inherits a base Repository class, so that it can access DB\n\n```csharp\npublic class TestDataRepository<T> : ReadOnlyRepositoryBase<T> where T : class\n{\n}\n\n```\n\n### Generate Insert and Delete script dynamically\nTo generate Insert and Delete script, we need to know if insert, what columns need to be inserted; if delete, what is the WHERE condition.\n\n#### For insert:\n\n 1. loop through all properties of the entity (which is mapped to DB table)\n\n ```csharp\nvar properties = PropertyInfoCache.GetPropertyInfos(typeof (T));\nforeach (var propertyInfo in properties.Where(propertyInfo => propertyInfo.Name != IdentityColumn))\n{\n}\n```\n 2. check if the property is a table column, if yes then use **Reflection** to get the property Name and Value, and add Name and Value to dynamic SQL script\n\n```csharp\nvar propertyType = propertyInfo.PropertyType;\nif (propertyInfo.GetCustomAttributes(typeof(NonDbProperty),true).Length != 0) continue;\nif (!propertyInfo.CanWrite) \n    continue;\nif (!propertyType.IsPublic) \n    continue;\nvar value = propertyInfo.GetValue(data);\nif (value == null) \n    continue;\nif (propertyType == typeof(DateTime) && (DateTime)value == DateTime.MinValue)\n    continue;\ncolumns.AppendFormat(\"[{0}],\", propertyInfo.Name);\nif (propertyType.IsEnum){values.AppendFormat(\"{0},\", Convert.ChangeType(value, typeof(int)));}\nelse if (IsNumericType(propertyType))\n    values.AppendFormat(\"{0},\", value);\nelse if (propertyType == typeof(DateTime))\n    values.AppendFormat(\"'{0}',\", ((DateTime)value).ToString(\"yyyy-MM-dd HH:mm:ss\"));\nelse\n    values.AppendFormat(\"'{0}',\", value);\nparamList.AppendFormat(\"@{0},\", propertyInfo.Name);\n```\n\n 3. build up SQL script based on columns and values\n```csharp\nstring sql = string.Empty;\nsql += string.Format(\"INSERT INTO {0} ({1}) Values({2});\", TableName,\n                                        columns.ToString().TrimEnd(','),\n                                        values.ToString().TrimEnd(','));\n```\n\n#### For delete:\n 1. get all key columns which will be used in WHERE condition\n\n```csharp\nvar properties = PropertyInfoCache.GetPropertyInfos(typeof (T));\nStringBuilder conditions = new StringBuilder();\nforeach (var propertyInfo in properties.Where(propertyInfo => KeyColumns.Contains(propertyInfo.Name)))\n{\n\n}\n ```\n 2. build up WHERE condition by using property Name and Value\n\n```csharp\nvar value = propertyInfo.GetValue(data);\nif (value == null) continue;\nif (conditions.Length > 0) conditions.Append(\" and \");\nvar propertyType = propertyInfo.PropertyType;\nif (propertyType.IsEnum)\n    conditions.AppendFormat(\"[{0}] = {1}\", propertyInfo.Name, (int) value);\nelse if (IsNumericType(propertyType))\n    conditions.AppendFormat(\"[{0}] = {1}\", propertyInfo.Name, value);\nelse if (propertyType == typeof (DateTime))\n    conditions.AppendFormat(\"[{0}] = '{1}'\", propertyInfo.Name,\n                            ((DateTime) value).ToString(\"yyyy-MM-dd HH:mm:ss\"));\nelse\n    conditions.AppendFormat(\"[{0}] = '{1}'\", propertyInfo.Name, value);\n```\n\n 3. build up delete SQL script\n\n```csharp\nvar sql = string.Format(\"delete from {0} where {1}\", TableName, conditions);\n```\n\n\n### Base Class for storing Test Data\n \n Now we have our TestData Repository ready, which can help us create / delete test data in DB. Next thing we are interested in is where to store predefined test cases, and pass these test cases to TestData Repository.\n\n\n```csharp\npublic abstract class TestData<T> where T : class\n{\n    abstract public string TableName { get; }\n    abstract public string KeyColumn { get; }\n    abstract public string DbRole { get; }\n             \n    public TestDataRepository<T> TestDataRepo { get; set; }\n \n    public void AddTestData(List<T> testDataList)\n    {\n        TestDataRepo = new TestDataRepository<T>(DbContextFactory.GetDbConfig (DbRole))\n         {\n             DataList = testDataList,\n             TableName = TableName,\n             KeyColumns = new[] { KeyColumn }\n         };\n    }\n \n    public void InsertAllTestData()\n    {\n        TestDataRepo.InsertTestDataList();\n    }\n \n    public void DeleteAllTestData()\n    {\n        TestDataRepo.DeleteTestDataList();\n    }\n}\n```\n\n This class is abstract and generic, thus subclasses are forced to override properties.  All test cases are stored in subclasses\n\n```csharp\npublic class TestEntity : TestData<TestEntity>\n{\n    private string _TableName = \"TestTableName\";\n    private string _KeyColumn = \"TestKeyColumn\";\n    private string _DbRole = Factories.DbRole.TestDb;\n \n    public override string TableName\n    {\n        get { return _TableName; }\n    }\n \n    public override string KeyColumn\n    {\n        get { return _KeyColumn; }\n    }\n \n    public override string DbRole\n    {\n        get { return _DbRole; }\n    }\n \n    public int Prop1 { get; set; }\n    public int Prop2 { get; set; }\n    public bool Prop3 { get; set; }    \n \n    public static TestEntity TestEntityDataI\n    {\n        get\n        {\n            return new TestEntity()\n            {\n                Prop1 = Something1,\n                Prop2 = Something2,\n                Prop3 = Something3\n            };\n        }\n    }\n}\n```","source":"_posts/use-testdata-repository-to-simplify-integration-test.md","raw":"title: Use TestData Repository to simplify your Integration Test\nAuthor: Ji Zhoubo\ndate: 2015-07-03 16:11:56\ntags: [csharp, .Net, Test]\n---\n## About\nIt has always been a boring and tough thing to manually insert data to DB for Integration Test, especially when the number of records is huge.  \n\nThe old and bad solution is: Maintain a lot of SQL scripts in Test Project. We have gone through the suffering, and finally come up a solution  **TestData Repository** to easily maintain test cases.\n\nIn this post, we will share this solution and how it simplifies Integration Test.\n\n## Problems and Solution\n\n### Map TestData Repository to DB Table\n To apply to all entities (tables) we want to create tests for, we create a generic TestDataRepository class, which inherits a base Repository class, so that it can access DB\n\n```csharp\npublic class TestDataRepository<T> : ReadOnlyRepositoryBase<T> where T : class\n{\n}\n\n```\n\n### Generate Insert and Delete script dynamically\nTo generate Insert and Delete script, we need to know if insert, what columns need to be inserted; if delete, what is the WHERE condition.\n\n#### For insert:\n\n 1. loop through all properties of the entity (which is mapped to DB table)\n\n ```csharp\nvar properties = PropertyInfoCache.GetPropertyInfos(typeof (T));\nforeach (var propertyInfo in properties.Where(propertyInfo => propertyInfo.Name != IdentityColumn))\n{\n}\n```\n 2. check if the property is a table column, if yes then use **Reflection** to get the property Name and Value, and add Name and Value to dynamic SQL script\n\n```csharp\nvar propertyType = propertyInfo.PropertyType;\nif (propertyInfo.GetCustomAttributes(typeof(NonDbProperty),true).Length != 0) continue;\nif (!propertyInfo.CanWrite) \n    continue;\nif (!propertyType.IsPublic) \n    continue;\nvar value = propertyInfo.GetValue(data);\nif (value == null) \n    continue;\nif (propertyType == typeof(DateTime) && (DateTime)value == DateTime.MinValue)\n    continue;\ncolumns.AppendFormat(\"[{0}],\", propertyInfo.Name);\nif (propertyType.IsEnum){values.AppendFormat(\"{0},\", Convert.ChangeType(value, typeof(int)));}\nelse if (IsNumericType(propertyType))\n    values.AppendFormat(\"{0},\", value);\nelse if (propertyType == typeof(DateTime))\n    values.AppendFormat(\"'{0}',\", ((DateTime)value).ToString(\"yyyy-MM-dd HH:mm:ss\"));\nelse\n    values.AppendFormat(\"'{0}',\", value);\nparamList.AppendFormat(\"@{0},\", propertyInfo.Name);\n```\n\n 3. build up SQL script based on columns and values\n```csharp\nstring sql = string.Empty;\nsql += string.Format(\"INSERT INTO {0} ({1}) Values({2});\", TableName,\n                                        columns.ToString().TrimEnd(','),\n                                        values.ToString().TrimEnd(','));\n```\n\n#### For delete:\n 1. get all key columns which will be used in WHERE condition\n\n```csharp\nvar properties = PropertyInfoCache.GetPropertyInfos(typeof (T));\nStringBuilder conditions = new StringBuilder();\nforeach (var propertyInfo in properties.Where(propertyInfo => KeyColumns.Contains(propertyInfo.Name)))\n{\n\n}\n ```\n 2. build up WHERE condition by using property Name and Value\n\n```csharp\nvar value = propertyInfo.GetValue(data);\nif (value == null) continue;\nif (conditions.Length > 0) conditions.Append(\" and \");\nvar propertyType = propertyInfo.PropertyType;\nif (propertyType.IsEnum)\n    conditions.AppendFormat(\"[{0}] = {1}\", propertyInfo.Name, (int) value);\nelse if (IsNumericType(propertyType))\n    conditions.AppendFormat(\"[{0}] = {1}\", propertyInfo.Name, value);\nelse if (propertyType == typeof (DateTime))\n    conditions.AppendFormat(\"[{0}] = '{1}'\", propertyInfo.Name,\n                            ((DateTime) value).ToString(\"yyyy-MM-dd HH:mm:ss\"));\nelse\n    conditions.AppendFormat(\"[{0}] = '{1}'\", propertyInfo.Name, value);\n```\n\n 3. build up delete SQL script\n\n```csharp\nvar sql = string.Format(\"delete from {0} where {1}\", TableName, conditions);\n```\n\n\n### Base Class for storing Test Data\n \n Now we have our TestData Repository ready, which can help us create / delete test data in DB. Next thing we are interested in is where to store predefined test cases, and pass these test cases to TestData Repository.\n\n\n```csharp\npublic abstract class TestData<T> where T : class\n{\n    abstract public string TableName { get; }\n    abstract public string KeyColumn { get; }\n    abstract public string DbRole { get; }\n             \n    public TestDataRepository<T> TestDataRepo { get; set; }\n \n    public void AddTestData(List<T> testDataList)\n    {\n        TestDataRepo = new TestDataRepository<T>(DbContextFactory.GetDbConfig (DbRole))\n         {\n             DataList = testDataList,\n             TableName = TableName,\n             KeyColumns = new[] { KeyColumn }\n         };\n    }\n \n    public void InsertAllTestData()\n    {\n        TestDataRepo.InsertTestDataList();\n    }\n \n    public void DeleteAllTestData()\n    {\n        TestDataRepo.DeleteTestDataList();\n    }\n}\n```\n\n This class is abstract and generic, thus subclasses are forced to override properties.  All test cases are stored in subclasses\n\n```csharp\npublic class TestEntity : TestData<TestEntity>\n{\n    private string _TableName = \"TestTableName\";\n    private string _KeyColumn = \"TestKeyColumn\";\n    private string _DbRole = Factories.DbRole.TestDb;\n \n    public override string TableName\n    {\n        get { return _TableName; }\n    }\n \n    public override string KeyColumn\n    {\n        get { return _KeyColumn; }\n    }\n \n    public override string DbRole\n    {\n        get { return _DbRole; }\n    }\n \n    public int Prop1 { get; set; }\n    public int Prop2 { get; set; }\n    public bool Prop3 { get; set; }    \n \n    public static TestEntity TestEntityDataI\n    {\n        get\n        {\n            return new TestEntity()\n            {\n                Prop1 = Something1,\n                Prop2 = Something2,\n                Prop3 = Something3\n            };\n        }\n    }\n}\n```","slug":"use-testdata-repository-to-simplify-integration-test","published":1,"updated":"2015-07-22T10:32:27.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvnm0006xcf6fpuxbnvd"},{"title":"Use Jenkins and MsDeploy for website continuous delivery and deployment","Author":"Ji Zhoubo","date":"2015-06-29T13:45:15.000Z","_content":"## About\nNormally for software development, we will have at least 2 environments: local development and production environment.  It will be a tough task for developer or server administrators to do manual release if there are too many projects or the release is too frequent.\n\nIn this post, I will show how to config Jenkins and set up MsDeploy to do continuous delivery and automatic website deployment .\n\n## Prerequiste\nThis post will assume you have already set up your Jenkins, you are using TFS for source control (of course it is just small modification if you are using Git or SVN), and you are using IIS (version >= 7.0) as your web server.\n\n## Steps\n- **Set up Jenkins job for pull latest and build**\n This step is similar as what we did for other projects which are running on our Jenkins for continuous integration and testing.\n \n Use Jenkins TFS plug-in to get latest periodically\n\n ![alt text](http://7qn89w.com1.z0.glb.clouddn.com/use-jenkins-and-msdeploy-for-website-deployment-1.jpg)\n \n Use Jenkins MSBuild plug-in or use powershell to build solution\n\n ![alt text](http://7qn89w.com1.z0.glb.clouddn.com/use-jenkins-and-msdeploy-for-website-deployment-2.jpg)\n\n\n- **Set up msdeploy**\n 1. [Download](http://www.iis.net/downloads/microsoft/web-deploy) and install msdeploy on your both source and target server\n 2. Ensure **Web Management Service** and **Web Deployment Agent Service** are running on your target server, they are necessary for remote deployment\n\n\n- **Prepare domain administrator account**\n To use msdeploy to deploy website to target server's IIS root path, the account must be a **domain administrator account**.\n Sounds weird right? Since it only needs to be that server's admin to have full permission for folders. Someone believe this is a bug.\n\n\n- **Powershell to run msdeploy**\n ```ps1\n msdeploy.exe -allowUntrusted=true -verb:sync -source:contentpath='D:\\WS\\ExampleProject' -dest:contentpath=F:\\webfolder,computerName=exampleproject.example.com,Username='yourdomain\\username',Password='password' -skip:objectName=dirPath,absolutePath=\"config\" -skip:objectName=filePath,absolutePath=\"web.config\"\n ```\n\n - **-verb:sync**, execute operation which synchronizes data between source and destination\n - **source:contentpath**, specifies we are using contentpath as provider, and will sync everything from that directory to target\n - **dest:contentpath**, specifies the folder that content will be synced to\n - **computerName=exampleproject.example.com,Username='yourdomain\\username',Password='password'**, the target server with IIS\n - **skip**, to ignore folders or files, e.g. we don't want local config files by synced to production environment, which may break the website\n\n\n We have set up another job on Jenkins to auto deploy website to production environment\n\n When run the script, will get output like this:\n ```ps1\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Main.aspx).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Main.aspx.cs).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Menu.aspx).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\M\n\n http://santexgroup.com/blog/continuous-delivery-using-asp-net-mvc4-web-api/\n\n http://blog.winhost.com/using-msdeploy-to-publish-your-site/enu.aspx.cs).\n Info: Updating file (F:\\exampleproject\\web_root\\public\\access-forbidden.html).\n Total changes: 259 (0 added, 0 deleted, 259 updated, 0 parameters changed, 21623463 bytes copied)\n ```\n\n\n## Trouble Shooting\nDuring the set up, I have met some issues, and I found this page is very useful for understanding those issues and trouble shooting\n> For certain common error cases, Web Deploy will show an error code. This table explains why the error occurs and steps the user can take to avoid the error. Note that the error message may be different depending on how Web Deploy is invoked e.g. Microsoft WebMatrix chooses to show custom error messages. The error messages listed below show up on the msdeploy.exe command line and API:\nhttp://www.iis.net/learn/publish/troubleshooting-web-deploy/web-deploy-error-codes\n\n\n## More\nIf you have interest to know more about msdeploy and its advanced usage, below are some good references:\n\n https://technet.microsoft.com/en-us/library/dd568996(v=ws.10).aspx\n\n http://santexgroup.com/blog/continuous-delivery-using-asp-net-mvc4-web-api/\n\n http://blog.winhost.com/using-msdeploy-to-publish-your-site/\n","source":"_posts/use-jenkins-and-msdeploy-for-website-deployment.md","raw":"title: Use Jenkins and MsDeploy for website continuous delivery and deployment\nAuthor: Ji Zhoubo\ndate: 2015-06-29 21:45:15\ntags: [Jenkins, msdeploy, CI]\n---\n## About\nNormally for software development, we will have at least 2 environments: local development and production environment.  It will be a tough task for developer or server administrators to do manual release if there are too many projects or the release is too frequent.\n\nIn this post, I will show how to config Jenkins and set up MsDeploy to do continuous delivery and automatic website deployment .\n\n## Prerequiste\nThis post will assume you have already set up your Jenkins, you are using TFS for source control (of course it is just small modification if you are using Git or SVN), and you are using IIS (version >= 7.0) as your web server.\n\n## Steps\n- **Set up Jenkins job for pull latest and build**\n This step is similar as what we did for other projects which are running on our Jenkins for continuous integration and testing.\n \n Use Jenkins TFS plug-in to get latest periodically\n\n ![alt text](http://7qn89w.com1.z0.glb.clouddn.com/use-jenkins-and-msdeploy-for-website-deployment-1.jpg)\n \n Use Jenkins MSBuild plug-in or use powershell to build solution\n\n ![alt text](http://7qn89w.com1.z0.glb.clouddn.com/use-jenkins-and-msdeploy-for-website-deployment-2.jpg)\n\n\n- **Set up msdeploy**\n 1. [Download](http://www.iis.net/downloads/microsoft/web-deploy) and install msdeploy on your both source and target server\n 2. Ensure **Web Management Service** and **Web Deployment Agent Service** are running on your target server, they are necessary for remote deployment\n\n\n- **Prepare domain administrator account**\n To use msdeploy to deploy website to target server's IIS root path, the account must be a **domain administrator account**.\n Sounds weird right? Since it only needs to be that server's admin to have full permission for folders. Someone believe this is a bug.\n\n\n- **Powershell to run msdeploy**\n ```ps1\n msdeploy.exe -allowUntrusted=true -verb:sync -source:contentpath='D:\\WS\\ExampleProject' -dest:contentpath=F:\\webfolder,computerName=exampleproject.example.com,Username='yourdomain\\username',Password='password' -skip:objectName=dirPath,absolutePath=\"config\" -skip:objectName=filePath,absolutePath=\"web.config\"\n ```\n\n - **-verb:sync**, execute operation which synchronizes data between source and destination\n - **source:contentpath**, specifies we are using contentpath as provider, and will sync everything from that directory to target\n - **dest:contentpath**, specifies the folder that content will be synced to\n - **computerName=exampleproject.example.com,Username='yourdomain\\username',Password='password'**, the target server with IIS\n - **skip**, to ignore folders or files, e.g. we don't want local config files by synced to production environment, which may break the website\n\n\n We have set up another job on Jenkins to auto deploy website to production environment\n\n When run the script, will get output like this:\n ```ps1\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Main.aspx).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Main.aspx.cs).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\Menu.aspx).\n Info: Updating file (F:\\exampleproject\\web_root\\menu\\M\n\n http://santexgroup.com/blog/continuous-delivery-using-asp-net-mvc4-web-api/\n\n http://blog.winhost.com/using-msdeploy-to-publish-your-site/enu.aspx.cs).\n Info: Updating file (F:\\exampleproject\\web_root\\public\\access-forbidden.html).\n Total changes: 259 (0 added, 0 deleted, 259 updated, 0 parameters changed, 21623463 bytes copied)\n ```\n\n\n## Trouble Shooting\nDuring the set up, I have met some issues, and I found this page is very useful for understanding those issues and trouble shooting\n> For certain common error cases, Web Deploy will show an error code. This table explains why the error occurs and steps the user can take to avoid the error. Note that the error message may be different depending on how Web Deploy is invoked e.g. Microsoft WebMatrix chooses to show custom error messages. The error messages listed below show up on the msdeploy.exe command line and API:\nhttp://www.iis.net/learn/publish/troubleshooting-web-deploy/web-deploy-error-codes\n\n\n## More\nIf you have interest to know more about msdeploy and its advanced usage, below are some good references:\n\n https://technet.microsoft.com/en-us/library/dd568996(v=ws.10).aspx\n\n http://santexgroup.com/blog/continuous-delivery-using-asp-net-mvc4-web-api/\n\n http://blog.winhost.com/using-msdeploy-to-publish-your-site/\n","slug":"use-jenkins-and-msdeploy-for-website-deployment","published":1,"updated":"2015-07-22T10:32:27.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvns000dxcf60bk3udtm"},{"title":"Some guidelines on writing a better SQL query","date":"2015-07-06T16:37:17.000Z","author":"Toh Leng Wee","_content":"\n## About\nThere are many ways on writing a SQL query. However, there are some guidelines that could help us to improve our query performance. Efficient query is important especially when we use store procudure in our system. In this post, we will show you some of the guidelines.\n\n## Limit selected list\nWe shall always specify the columns we need in **SELECT**. Avoid to use ** * ** in our select list to return some unused columns in our system.\n\n```sql\n--Bad example\nSELECT *\nFROM [Customer] \nWHERE [CustomerId] = @CustomerId \n\n--Better example\nSELECT [FirstName], [LastName], [DateOfBirth]\nFROM [dbo].[Customer]\nWHERE [CustomerId] = @CustomerId\n```\n\n## Use Search Argument (SARG)\nAlways try to change Non-Search Argument to [Search Argument](http://www.sqlconsulting.com/news1109.htm) for Index Column in **WHERE** clause.\n\n**Search Arguement**: \n-operators include **=**, **>**, **<**, **>=**, **<=**, **IN**, **BETWEEN**\n-Like 'literal%''\n\n**Non-Search Argument**:\n-Exclusion conditions E.g  **<>**, **!=**, **!>**, **NOT EXISTS**\n-Like '%literal'\n-Arithmetic operations, E.g  orderid*2 = 3400\n-Function, E.g subsring(username,1,1) = 'x'\n\n```sql\n--Bad example\nSELECT [FirstName], [LastName], [DateOfBirth]\nFROM [dbo].[Customer]\nWHERE CASE @DateFilter\n      WHEN 'Year' THEN [Year]\n      WHEN 'Month' THEN [Month]\n      ELSE [Day] END = @Date\n\n--Better example\nIF @DateFilter = 'Year'\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Year] = @Date\nELSE IF @DateFilter = 'Month'\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Month] = @Date\nELSE\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Day] = @Date\n```\n## Avoid unnecessary data conversion\n-Define store procedure parameters data type to be the same as table schema data type.\n-Don't join tables with different data type\n\n```sql\n--Bad example\nCREATE PROCEDURE [dbo].[GetLoginName]\n    @CustomerId varchar(10)\nAS\n    SELECT [LoginName]\n    FROM [Customer]\n    WHERE [CustomerId] = @CustomerId --[CustomerId] is int in table schema\n\n--Better example\nCREATE PROCEDURE [dbo].[GetLoginName]\n    @CustomerId int\nAS\n    SELECT [LoginName]\n    FROM [Customer]\n    WHERE [CustomerId] = @CustomerId --[CustomerId] is int in table schema\n```\n\n## Use EXISTS over COUNT(1) if you want to verify data existence\nSometimes when we want to verify data existence, we will use COUNT(1) to achieve it. But COUNT(1) will actuall scan the who table even the record was found. So EXISTS would be a better way in this case.\n\n```sql\n--Bad example\nDECLARE @isExists as int\nSELECT @isExists = COUNT(1)\nFROM [dbo].[Customer]\nWHERE CustomerId = 123\n\n--Better example\nIF EXISTS(SELECT TOP 1 1 FROM [dbo].[Customer] WHERE CustomerId = 123)\n```\n\n## Use UNION ALL over UNION\nUNION removes duplicate records (where all columns in the results are the same)and UNION ALL does not.\nThere is a performance hit when using UNION vs UNION ALL, since the database server need to do additional work to remove the duplicate rows, but usually you do not want the duplicates (especially when developing reports). Therefore, you have to deal with the duplicated data in your application.\n\n```sql\n--Bad example\nSELECT [CustomerId] FROM [Customer]\nUNION\nSELECT [CustomerId] FROM [DeleteCustomer]\n\n--Better example\nSELECT [CustomerId] FROM [Customer]\nUNION ALL\nSELECT [CustomerId] FROM [DeleteCustomer]\n```\n\n## Use sp_executesql over exec on dynamic query\nSQL Server will cache a query plan when the first time of a query run, and the cache could be reuse in order to save the time on *compiling* the query again.\nHowever, the cache is a space- and case-sensitive. Therefore, dynamic query is not able to be cached by using **exec**.\n**sp_executesql** is a SQL Server built-in stored procedure that takes two pre-defined parameters and any number of user-defined parameters. If you run your dynamic query with parameters, since the parameter values are not part of the query text, the same query plan could be reused even when the input changes.\nIf you want to know more about the difference between **sp_executesql** and **exec**, please refer to [The Curse and Blessings of Dynamic SQL](http://www.sommarskog.se/dynamic_sql.html)\n\n## Summary\nWe could always try to refine our query to do less work but still achieve the same outcome.\nAlways try to use index in your WHERE clause, you could use **sp_helpindex** to know the table indexes.\n```sql\nsp_helpindex '[TableName]'\n```\nKeep data table size as small as possible, purge history records or unused records.","source":"_posts/some-guideline-on-writing-better-query.md","raw":"title: Some guidelines on writing a better SQL query\ndate: 2015-07-07 00:37:17\nauthor: Toh Leng Wee\ntags: [sql, query]\n---\n\n## About\nThere are many ways on writing a SQL query. However, there are some guidelines that could help us to improve our query performance. Efficient query is important especially when we use store procudure in our system. In this post, we will show you some of the guidelines.\n\n## Limit selected list\nWe shall always specify the columns we need in **SELECT**. Avoid to use ** * ** in our select list to return some unused columns in our system.\n\n```sql\n--Bad example\nSELECT *\nFROM [Customer] \nWHERE [CustomerId] = @CustomerId \n\n--Better example\nSELECT [FirstName], [LastName], [DateOfBirth]\nFROM [dbo].[Customer]\nWHERE [CustomerId] = @CustomerId\n```\n\n## Use Search Argument (SARG)\nAlways try to change Non-Search Argument to [Search Argument](http://www.sqlconsulting.com/news1109.htm) for Index Column in **WHERE** clause.\n\n**Search Arguement**: \n-operators include **=**, **>**, **<**, **>=**, **<=**, **IN**, **BETWEEN**\n-Like 'literal%''\n\n**Non-Search Argument**:\n-Exclusion conditions E.g  **<>**, **!=**, **!>**, **NOT EXISTS**\n-Like '%literal'\n-Arithmetic operations, E.g  orderid*2 = 3400\n-Function, E.g subsring(username,1,1) = 'x'\n\n```sql\n--Bad example\nSELECT [FirstName], [LastName], [DateOfBirth]\nFROM [dbo].[Customer]\nWHERE CASE @DateFilter\n      WHEN 'Year' THEN [Year]\n      WHEN 'Month' THEN [Month]\n      ELSE [Day] END = @Date\n\n--Better example\nIF @DateFilter = 'Year'\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Year] = @Date\nELSE IF @DateFilter = 'Month'\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Month] = @Date\nELSE\n    SELECT [FirstName], [LastName], [DateOfBirth]\n    FROM [dbo].[Customer]\n    WHERE [Day] = @Date\n```\n## Avoid unnecessary data conversion\n-Define store procedure parameters data type to be the same as table schema data type.\n-Don't join tables with different data type\n\n```sql\n--Bad example\nCREATE PROCEDURE [dbo].[GetLoginName]\n    @CustomerId varchar(10)\nAS\n    SELECT [LoginName]\n    FROM [Customer]\n    WHERE [CustomerId] = @CustomerId --[CustomerId] is int in table schema\n\n--Better example\nCREATE PROCEDURE [dbo].[GetLoginName]\n    @CustomerId int\nAS\n    SELECT [LoginName]\n    FROM [Customer]\n    WHERE [CustomerId] = @CustomerId --[CustomerId] is int in table schema\n```\n\n## Use EXISTS over COUNT(1) if you want to verify data existence\nSometimes when we want to verify data existence, we will use COUNT(1) to achieve it. But COUNT(1) will actuall scan the who table even the record was found. So EXISTS would be a better way in this case.\n\n```sql\n--Bad example\nDECLARE @isExists as int\nSELECT @isExists = COUNT(1)\nFROM [dbo].[Customer]\nWHERE CustomerId = 123\n\n--Better example\nIF EXISTS(SELECT TOP 1 1 FROM [dbo].[Customer] WHERE CustomerId = 123)\n```\n\n## Use UNION ALL over UNION\nUNION removes duplicate records (where all columns in the results are the same)and UNION ALL does not.\nThere is a performance hit when using UNION vs UNION ALL, since the database server need to do additional work to remove the duplicate rows, but usually you do not want the duplicates (especially when developing reports). Therefore, you have to deal with the duplicated data in your application.\n\n```sql\n--Bad example\nSELECT [CustomerId] FROM [Customer]\nUNION\nSELECT [CustomerId] FROM [DeleteCustomer]\n\n--Better example\nSELECT [CustomerId] FROM [Customer]\nUNION ALL\nSELECT [CustomerId] FROM [DeleteCustomer]\n```\n\n## Use sp_executesql over exec on dynamic query\nSQL Server will cache a query plan when the first time of a query run, and the cache could be reuse in order to save the time on *compiling* the query again.\nHowever, the cache is a space- and case-sensitive. Therefore, dynamic query is not able to be cached by using **exec**.\n**sp_executesql** is a SQL Server built-in stored procedure that takes two pre-defined parameters and any number of user-defined parameters. If you run your dynamic query with parameters, since the parameter values are not part of the query text, the same query plan could be reused even when the input changes.\nIf you want to know more about the difference between **sp_executesql** and **exec**, please refer to [The Curse and Blessings of Dynamic SQL](http://www.sommarskog.se/dynamic_sql.html)\n\n## Summary\nWe could always try to refine our query to do less work but still achieve the same outcome.\nAlways try to use index in your WHERE clause, you could use **sp_helpindex** to know the table indexes.\n```sql\nsp_helpindex '[TableName]'\n```\nKeep data table size as small as possible, purge history records or unused records.","slug":"some-guideline-on-writing-better-query","published":1,"updated":"2015-07-22T10:32:27.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvo2000kxcf6p6phafk2"},{"title":"課後心得，學通彼得.杜拉克-成功管理者要先問【必要貢獻價值】","subtitle":"By Eason Lin","date":"2015-06-28T14:08:51.000Z","_content":"##About\n在一次偶然的機會，讓我能夠有幸參加陳宗賢教授的管理課程-「學通彼得.杜拉克-成功管理者要先問【必要貢獻價值】」。得到了許多重要的觀念與做法，想在這裡分享一下。\n\n##Why do we need to learn management ?\n有些人在工作上表現非常突出，但一升上管理職，就完全不懂該怎麼做？\n在管理學上，有個名為「彼得」的原理，就是在說這個現象。\nhttps://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86\n\n其實就是「揠苗助長」，這也是我想為什麼去上這門課的原因吧。\n一方面是培訓，另一方面也能讓員工跟管理者有相互的了解。\n\n\n##How to Be a Good Manager ?\n\n- **犧牲奉獻**\n 時間，原來之前有一個功課，是要提早30分鐘到公司。這個用意，我想有二個主要的原因，首先，必須成為部屬的表率，其次，是投入更多的時間在工作上，無論是工作前的準備或工作相關的學習。所以，時間的犧牲是必不可少。\n\n 金錢，當成為一個管理者時，跟員工的互動不應僅只於工作上，也應在生活上互相了解，說得白一點，應該就是交際，我的理解是「搏感情」，如果能讓整個團隊一條心，那再困難的任務，也不會是個問題了。\n\t\t\n- **培育的精神**\n 在職場上，有些人往往為了維持自己的獨特與不可取代，而選擇將一些做事的方法與技巧隱藏起來，如果是一位獨立工作者，那你可以保留自己的技術，但如果是在一個團隊內工作，這個心態將會讓自己變得封閉，久而久之將變得孤立無援，團隊也因此分崩離析、無法同心。\n\n 當一個好的管理者，應該要了解培育的重要，如果團隊內個個都是高手，那所創造出來的能量，則不言而喻。\n\n 學無止境，是培育帶出的另一個精神。知識是永遠學不完的，永遠有新的技術、新的觀念、新的做事方法，培養持續學習的心態，才能讓自己在這競爭激烈的環境下，站穩腳跟。\n\n 若能持續地學習與培育，團隊中的每個人會散發出一種特別的氣味、磁性，將能吸引更多相同氣味、磁場的人加入，進而產生一個正向且持續成長能量。\n\t\t\n- **沒有抱怨的權力**\n\n 不批評、不責備、不抱怨！\t\t我相信幾乎所有人，都曾經抱怨過工作上的種種，但是，要想成為一個成功的管理者，你就不能抱怨，一點抱怨的想法都不能有。而是要去思考問題、解決問題，這是一個轉念的過程，讓那些沒用的能量，轉變為成長進步的動力。\n 我相信抱怨會製造一種氛圍，讓人害怕、讓人逃避，如果持續的抱怨，只會漸漸地讓人遠離。\n\n 在這裡，其實讓我想到了另一個問題，如果管理者面對部屬的抱怨，讓怎麼做呢？\n 當發現部屬的抱怨，就表示有團隊中有問題正在發生，這問題必定影響團隊工作進而影響與團隊相關的所有事情，應要立即思考問題該如何解決，把問題解決。\n\n 解決問題，團隊將會因此而進步、成長。\n 忽視問題，團隊將持續受到問題的困擾，直至病入膏肓。\n\n 最後，很重要的一點，就是要實踐、實踐、實踐。(Practice, Practice, Practice)\n\t\t\n##To Be Continue...\n\t\t\n\t\t\n","source":"_posts/reading-response-peter-drucker.md","raw":"title: 課後心得，學通彼得.杜拉克-成功管理者要先問【必要貢獻價值】\nsubtitle: By Eason Lin\ndate: 2015-06-28 22:08:51\ntags: Management\n---\n##About\n在一次偶然的機會，讓我能夠有幸參加陳宗賢教授的管理課程-「學通彼得.杜拉克-成功管理者要先問【必要貢獻價值】」。得到了許多重要的觀念與做法，想在這裡分享一下。\n\n##Why do we need to learn management ?\n有些人在工作上表現非常突出，但一升上管理職，就完全不懂該怎麼做？\n在管理學上，有個名為「彼得」的原理，就是在說這個現象。\nhttps://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%E5%8E%9F%E7%90%86\n\n其實就是「揠苗助長」，這也是我想為什麼去上這門課的原因吧。\n一方面是培訓，另一方面也能讓員工跟管理者有相互的了解。\n\n\n##How to Be a Good Manager ?\n\n- **犧牲奉獻**\n 時間，原來之前有一個功課，是要提早30分鐘到公司。這個用意，我想有二個主要的原因，首先，必須成為部屬的表率，其次，是投入更多的時間在工作上，無論是工作前的準備或工作相關的學習。所以，時間的犧牲是必不可少。\n\n 金錢，當成為一個管理者時，跟員工的互動不應僅只於工作上，也應在生活上互相了解，說得白一點，應該就是交際，我的理解是「搏感情」，如果能讓整個團隊一條心，那再困難的任務，也不會是個問題了。\n\t\t\n- **培育的精神**\n 在職場上，有些人往往為了維持自己的獨特與不可取代，而選擇將一些做事的方法與技巧隱藏起來，如果是一位獨立工作者，那你可以保留自己的技術，但如果是在一個團隊內工作，這個心態將會讓自己變得封閉，久而久之將變得孤立無援，團隊也因此分崩離析、無法同心。\n\n 當一個好的管理者，應該要了解培育的重要，如果團隊內個個都是高手，那所創造出來的能量，則不言而喻。\n\n 學無止境，是培育帶出的另一個精神。知識是永遠學不完的，永遠有新的技術、新的觀念、新的做事方法，培養持續學習的心態，才能讓自己在這競爭激烈的環境下，站穩腳跟。\n\n 若能持續地學習與培育，團隊中的每個人會散發出一種特別的氣味、磁性，將能吸引更多相同氣味、磁場的人加入，進而產生一個正向且持續成長能量。\n\t\t\n- **沒有抱怨的權力**\n\n 不批評、不責備、不抱怨！\t\t我相信幾乎所有人，都曾經抱怨過工作上的種種，但是，要想成為一個成功的管理者，你就不能抱怨，一點抱怨的想法都不能有。而是要去思考問題、解決問題，這是一個轉念的過程，讓那些沒用的能量，轉變為成長進步的動力。\n 我相信抱怨會製造一種氛圍，讓人害怕、讓人逃避，如果持續的抱怨，只會漸漸地讓人遠離。\n\n 在這裡，其實讓我想到了另一個問題，如果管理者面對部屬的抱怨，讓怎麼做呢？\n 當發現部屬的抱怨，就表示有團隊中有問題正在發生，這問題必定影響團隊工作進而影響與團隊相關的所有事情，應要立即思考問題該如何解決，把問題解決。\n\n 解決問題，團隊將會因此而進步、成長。\n 忽視問題，團隊將持續受到問題的困擾，直至病入膏肓。\n\n 最後，很重要的一點，就是要實踐、實踐、實踐。(Practice, Practice, Practice)\n\t\t\n##To Be Continue...\n\t\t\n\t\t\n","slug":"reading-response-peter-drucker","published":1,"updated":"2015-07-22T10:32:27.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvob000pxcf6p06x3gp9"},{"title":"Reading Response - 深度匯談 (Dialogue) from 第五項修煉 (The Fifth Discipline)","date":"2015-07-07T13:05:48.000Z","author":"Eason Lin","_content":"\n##About\n《第五項修煉》by Peter M. Senge，這是一本關於學習型組織的書，其內容主要說明學習型組織的藝術與價值，以及如何實踐的技巧。\n而最近看了其中一項修煉「團隊學習」的一小部份，叫做「深度匯談」。\n\n##團隊學習？\n「為何每個成員智商皆高於120，何以集體的智商只有63？」這是書上的一段話，在聽完這句話後，心裡有了一些感觸...\n舉個實際的例子，在NBA，常常有球隊花大把大把的銀子，簽下了很多明星球員，組成黃金陣容，以為球隊因此而大大提高了戰力，但最後往往令人大失所望。\n一個球隊，如果球員不懂得如何溝通協調，思考找出合作的方法與默契，是沒有辦法打出好成績的！\n\n##討論？深度匯談？\n在球場上如此，在工作中亦然，如何在團隊中有效的溝通、建立默契？我想討論應該是一個很重要的過程。\n\n對於討論，書上有一個很有趣也發人省思的說明：\n「討論」(discusion)與「碰擊」(percussion)和「震盪」(concussion)有相同的字根，其義近似於一種來回交手，欲求勝利的比賽。\n\n曾幾何時，覺得討論結果合於己意，而感到開心雀躍，而又曾幾何時，因結果不如預期，而感到失望。這個比喻或許不甚貼切，但主要是想要表達那種交手的感覺，而這其實是一種「習慣性防衛」的感覺，為了免受威脅與窘困的習慣性的互動方式。\n\n若我們能夠了解在討論時的防衛，並不時提醒自己，便可以更客觀的角度來討論問題，而這便是書上所說的「深度匯談」(dialogue)，以下是書中的說法：\n\n「深度匯談」源自希臘的「dialogos」，「dia」意指「透過」，「logos」意指「文字」或「意義」。意指：「在人們之間自由流動的意義。」\n在深度匯談時，大家以多樣的觀點探討複雜的難題，每個人攤出心中的假設，並自由交換他們的想法。在一種無拘無束的探索中，將深藏的經驗與想法完全浮現，而超過各自的想法。\n\n##反思\n希望能時時提醒自己，了解與避免習慣性的防衛。\n\n而，對於「客觀」也有一個感想：在「討論」的過程中，「客觀」其實是非常重要的「規則」，但是往往在「討論」的過程漸漸深入，「主觀」就會在不知不覺間進入。由於參與「討論」的都是關係人，除非有非常高超的智慧來辨識「主觀」，否則很容易因此而產生阻力。但此時，如果有一個中立的第三者，來觀看整個「討論」的過程，他往往能夠很容易的找出盲點，若能適時的點破，則「討論」的阻力就能消失，甚至因找出阻力的癥結，而轉化為助力。\n這不就是一個團隊中，Scrum Master存在的珍貴之處嗎？\n\n","source":"_posts/reading-response-dialogue.md","raw":"title: Reading Response - 深度匯談 (Dialogue) from 第五項修煉 (The Fifth Discipline)\ndate: 2015-07-07 21:05:48\nauthor: Eason Lin\ntags: [team, Scrum Master]\n---\n\n##About\n《第五項修煉》by Peter M. Senge，這是一本關於學習型組織的書，其內容主要說明學習型組織的藝術與價值，以及如何實踐的技巧。\n而最近看了其中一項修煉「團隊學習」的一小部份，叫做「深度匯談」。\n\n##團隊學習？\n「為何每個成員智商皆高於120，何以集體的智商只有63？」這是書上的一段話，在聽完這句話後，心裡有了一些感觸...\n舉個實際的例子，在NBA，常常有球隊花大把大把的銀子，簽下了很多明星球員，組成黃金陣容，以為球隊因此而大大提高了戰力，但最後往往令人大失所望。\n一個球隊，如果球員不懂得如何溝通協調，思考找出合作的方法與默契，是沒有辦法打出好成績的！\n\n##討論？深度匯談？\n在球場上如此，在工作中亦然，如何在團隊中有效的溝通、建立默契？我想討論應該是一個很重要的過程。\n\n對於討論，書上有一個很有趣也發人省思的說明：\n「討論」(discusion)與「碰擊」(percussion)和「震盪」(concussion)有相同的字根，其義近似於一種來回交手，欲求勝利的比賽。\n\n曾幾何時，覺得討論結果合於己意，而感到開心雀躍，而又曾幾何時，因結果不如預期，而感到失望。這個比喻或許不甚貼切，但主要是想要表達那種交手的感覺，而這其實是一種「習慣性防衛」的感覺，為了免受威脅與窘困的習慣性的互動方式。\n\n若我們能夠了解在討論時的防衛，並不時提醒自己，便可以更客觀的角度來討論問題，而這便是書上所說的「深度匯談」(dialogue)，以下是書中的說法：\n\n「深度匯談」源自希臘的「dialogos」，「dia」意指「透過」，「logos」意指「文字」或「意義」。意指：「在人們之間自由流動的意義。」\n在深度匯談時，大家以多樣的觀點探討複雜的難題，每個人攤出心中的假設，並自由交換他們的想法。在一種無拘無束的探索中，將深藏的經驗與想法完全浮現，而超過各自的想法。\n\n##反思\n希望能時時提醒自己，了解與避免習慣性的防衛。\n\n而，對於「客觀」也有一個感想：在「討論」的過程中，「客觀」其實是非常重要的「規則」，但是往往在「討論」的過程漸漸深入，「主觀」就會在不知不覺間進入。由於參與「討論」的都是關係人，除非有非常高超的智慧來辨識「主觀」，否則很容易因此而產生阻力。但此時，如果有一個中立的第三者，來觀看整個「討論」的過程，他往往能夠很容易的找出盲點，若能適時的點破，則「討論」的阻力就能消失，甚至因找出阻力的癥結，而轉化為助力。\n這不就是一個團隊中，Scrum Master存在的珍貴之處嗎？\n\n","slug":"reading-response-dialogue","published":1,"updated":"2015-07-22T10:32:27.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvoi000sxcf69w5gjv3n"},{"title":"MVC 5 Complex Object Model Binding","author":"chen chao","_content":"\n#About \n\nASP.NET MVC5 can auto bind to model when receive HTTP request. However, if the model is a complex object, you need to make a little bid trick when sending request parameter. This post shows how to do that.\n\n\n#Model\n\nSuppose we have a complex model as following:\n\n```csharp\npublic class Person\n{\n    public string Id { get; set; }\n    public string Name { get; set; }\n    public Address HomeAddress { get; set; }\n\n}\n\npublic class Address\n{\n    public string Country { get; set; }\n    public string City { get; set; }\n    public string Street { get; set; }\n    public string Block { get; set; }\n    public string Unit { get; set; }\n}\n\n```\n\n#Controller\n\nThere is an action in controller which is supposed to update Person object passed by HTTP Post request. The code looks like following\n\n```csharp\n[HttpPost]\npublic ActionResult Update(Person person)\n{\n    if (ModelState.IsValid)\n    {\n        return View();\n    }\n}\n```\n\n\n#View\n\nIn order to automatically bind HTTP Post parameter to a Person object in action, we should send the paramter of inner object properties in the format of \n``` \n{property name of parent class}.{property name of nested class} \n```\n\nSo the view may look like following\n\n``` html\n<form method=\"POST\">\n    <input type=\"hidden\" name=\"Id\" value=\"some-id\"/>\n    <input type=\"text\" name=\"Name\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Country\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Street\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Block\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Unit\" value=\"\" />\n    <input type=\"submit\" value=\"Update\" />\n</form>\n```\n\n\n\n","source":"_posts/mvc5-complex-object-model-binding.md","raw":"title: MVC 5 Complex Object Model Binding\nauthor: chen chao\ntags: [mvc5, asp.net]\n---\n\n#About \n\nASP.NET MVC5 can auto bind to model when receive HTTP request. However, if the model is a complex object, you need to make a little bid trick when sending request parameter. This post shows how to do that.\n\n\n#Model\n\nSuppose we have a complex model as following:\n\n```csharp\npublic class Person\n{\n    public string Id { get; set; }\n    public string Name { get; set; }\n    public Address HomeAddress { get; set; }\n\n}\n\npublic class Address\n{\n    public string Country { get; set; }\n    public string City { get; set; }\n    public string Street { get; set; }\n    public string Block { get; set; }\n    public string Unit { get; set; }\n}\n\n```\n\n#Controller\n\nThere is an action in controller which is supposed to update Person object passed by HTTP Post request. The code looks like following\n\n```csharp\n[HttpPost]\npublic ActionResult Update(Person person)\n{\n    if (ModelState.IsValid)\n    {\n        return View();\n    }\n}\n```\n\n\n#View\n\nIn order to automatically bind HTTP Post parameter to a Person object in action, we should send the paramter of inner object properties in the format of \n``` \n{property name of parent class}.{property name of nested class} \n```\n\nSo the view may look like following\n\n``` html\n<form method=\"POST\">\n    <input type=\"hidden\" name=\"Id\" value=\"some-id\"/>\n    <input type=\"text\" name=\"Name\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Country\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Street\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Block\" value=\"\" />\n    <input type=\"text\" name=\"HomeAddress.Unit\" value=\"\" />\n    <input type=\"submit\" value=\"Update\" />\n</form>\n```\n\n\n\n","slug":"mvc5-complex-object-model-binding","published":1,"date":"2015-07-22T10:32:27.770Z","updated":"2015-07-22T10:32:27.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvoo000xxcf6hectavgm"},{"title":"Simple example of Javascript unit test by Jasmine + Karma","author":"chen chao","_content":"\n#About\n\nJasmine is an excellent framework for Javascript unit test. However, there are many test runners avaiable. This post guides to setup karma test runner environment. \n\n# Example\n\n## Jasmine\nplease refer to its [official site] (http://jasmine.github.io/) if you are not familiar with Jasmine framework.\n\nSuppose we have a javascript function to be tested in file 'example.src.js'\n\n```javascript\nfunction validateConfirmPassword(password, confirmPassword) {\n    password = $.trim(password);\n    confirmPassword = $.trim(confirmPassword);\n    return password === confirmPassword;\n}\n```\nThe testing code 'example.spec.js' is as following \n\n```javascript\ndescribe('Sample Test', function () {\n    it(\"enter confirm password same as password\", function () {\n        result = ValidateConfirmPassword(\"123456\", \"123456\");\n        expect(result).toEqual(true);\n    });\n});\n```\n\n## Karma\n\nKarma is a test runner which has similiar functions provided by resharper. It is running on [node.js](https://nodejs.org/) and available as a node module via [NPM] (https://www.npmjs.com/).\n\nHere is a [guide](http://karma-runner.github.io/0.8/intro/installation.html) to install Karma. You are required to type following commands : \n```\nnpm install karma\n```\nIn order for karma to start, we need to do create configuration file for karma. To create configuration file, simply typing \n```\nkarma init\n```\nThis will ask you many questions and if you answered them all correct you will be allowed to use Karma. For more information on the configuration options see [Configuration File Overview](https://github.com/karma-runner/karma). \n```\n$>karma init\n\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> jasmine\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n>\n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n> lib/jquery-1.11.3.js\n> *.src.js\n> *.spec.js\n>\n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n>\n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n\n\nConfig file generated at \"karma.conf.js\".\n\n```\nHere is configuration file generated\n\n```\n// Karma configuration\n// Generated on Fri Jul 03 2015 11:13:31 GMT+0800 (Malay Peninsula Standard Time)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['jasmine'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n        'lib/jquery-1.11.3.js',\n        '*.src.js',\n        '*.spec.js'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: false\n  });\n};\n\n```\n\n\nNow that you have your configuration all that is left to do is to start Karma: \n```\nkarma start\n```\nYou are supposed to see some output in your command prompt and a browser is popup\n![karma browser image](https://goo.gl/photos/HMUUuxbKHAhRhiJt7 \"karma browser\"). \n\nWhile after karma browser started, it will load all the files specified in configuration. And it will detect jasmine test cases, automatically execute test cases, and shows out the test result in console.\n```\n$>karma start\nINFO [karma]: Karma v0.12.36 server started at http://localhost:9876/\nINFO [launcher]: Starting browser Chrome\nWARN [web-server]: 404: /favicon.ico\nINFO [Chrome 40.0.2214 (Windows 7 0.0.0)]: Connected on socket yGdW4usRG36DmTiLMLKG with id 42325643\nChrome 40.0.2214 (Windows 7 0.0.0): Executed 1 of 1 SUCCESS (0.006 secs / 0.002 secs)\n```\n\n## Debug\nIf you see any error in console output, you could try to click [Debug] button in top right corner. A new tab will be opened. By viewing the source code, you could see any .js file you missed to included. And you also could using [F12] to debug in this seperated browser.\n\n\n\n\n\n\n\n","source":"_posts/javascript-unit-test-with-jasmine-karma.md","raw":"title: Simple example of Javascript unit test by Jasmine + Karma\nauthor: chen chao\ntags: [javascript, unit test, jasmine, karma]\n---\n\n#About\n\nJasmine is an excellent framework for Javascript unit test. However, there are many test runners avaiable. This post guides to setup karma test runner environment. \n\n# Example\n\n## Jasmine\nplease refer to its [official site] (http://jasmine.github.io/) if you are not familiar with Jasmine framework.\n\nSuppose we have a javascript function to be tested in file 'example.src.js'\n\n```javascript\nfunction validateConfirmPassword(password, confirmPassword) {\n    password = $.trim(password);\n    confirmPassword = $.trim(confirmPassword);\n    return password === confirmPassword;\n}\n```\nThe testing code 'example.spec.js' is as following \n\n```javascript\ndescribe('Sample Test', function () {\n    it(\"enter confirm password same as password\", function () {\n        result = ValidateConfirmPassword(\"123456\", \"123456\");\n        expect(result).toEqual(true);\n    });\n});\n```\n\n## Karma\n\nKarma is a test runner which has similiar functions provided by resharper. It is running on [node.js](https://nodejs.org/) and available as a node module via [NPM] (https://www.npmjs.com/).\n\nHere is a [guide](http://karma-runner.github.io/0.8/intro/installation.html) to install Karma. You are required to type following commands : \n```\nnpm install karma\n```\nIn order for karma to start, we need to do create configuration file for karma. To create configuration file, simply typing \n```\nkarma init\n```\nThis will ask you many questions and if you answered them all correct you will be allowed to use Karma. For more information on the configuration options see [Configuration File Overview](https://github.com/karma-runner/karma). \n```\n$>karma init\n\nWhich testing framework do you want to use ?\nPress tab to list possible options. Enter to move to the next question.\n> jasmine\n\nDo you want to use Require.js ?\nThis will add Require.js plugin.\nPress tab to list possible options. Enter to move to the next question.\n> no\n\nDo you want to capture any browsers automatically ?\nPress tab to list possible options. Enter empty string to move to the next question.\n> Chrome\n>\n\nWhat is the location of your source and test files ?\nYou can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".\nEnter empty string to move to the next question.\n> lib/jquery-1.11.3.js\n> *.src.js\n> *.spec.js\n>\n\nShould any of the files included by the previous patterns be excluded ?\nYou can use glob patterns, eg. \"**/*.swp\".\nEnter empty string to move to the next question.\n>\n\nDo you want Karma to watch all the files and run the tests on change ?\nPress tab to list possible options.\n> yes\n\n\nConfig file generated at \"karma.conf.js\".\n\n```\nHere is configuration file generated\n\n```\n// Karma configuration\n// Generated on Fri Jul 03 2015 11:13:31 GMT+0800 (Malay Peninsula Standard Time)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['jasmine'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n        'lib/jquery-1.11.3.js',\n        '*.src.js',\n        '*.spec.js'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: false\n  });\n};\n\n```\n\n\nNow that you have your configuration all that is left to do is to start Karma: \n```\nkarma start\n```\nYou are supposed to see some output in your command prompt and a browser is popup\n![karma browser image](https://goo.gl/photos/HMUUuxbKHAhRhiJt7 \"karma browser\"). \n\nWhile after karma browser started, it will load all the files specified in configuration. And it will detect jasmine test cases, automatically execute test cases, and shows out the test result in console.\n```\n$>karma start\nINFO [karma]: Karma v0.12.36 server started at http://localhost:9876/\nINFO [launcher]: Starting browser Chrome\nWARN [web-server]: 404: /favicon.ico\nINFO [Chrome 40.0.2214 (Windows 7 0.0.0)]: Connected on socket yGdW4usRG36DmTiLMLKG with id 42325643\nChrome 40.0.2214 (Windows 7 0.0.0): Executed 1 of 1 SUCCESS (0.006 secs / 0.002 secs)\n```\n\n## Debug\nIf you see any error in console output, you could try to click [Debug] button in top right corner. A new tab will be opened. By viewing the source code, you could see any .js file you missed to included. And you also could using [F12] to debug in this seperated browser.\n\n\n\n\n\n\n\n","slug":"javascript-unit-test-with-jasmine-karma","published":1,"date":"2015-07-22T10:32:27.768Z","updated":"2015-07-22T10:32:27.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvos0012xcf62nhjeg4b"},{"title":"Implement Permission Control for MVC5 Project","date":"2015-07-21T15:55:00.000Z","author":"Ji Zhoubo","_content":"\nWhen building backend system for a website, like member management system or accounting system, permission control has always been a must-have feature, so that different staffs or operators can be assigned just enough permissions to perform tasks.\n\nFor example, in an accouting system, some operators may only focus on doing money transfer, while some operators only handle reports. There will be information leakage and risks if just grant all permissions for all operators blindly.\n\n\n# 1. Requirements\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-21_013438.jpg)\n\nWe start from requirement analysis first.  Assume we have following requirements need to fulfill:\n- When an operator log in to system, render menu for him based on his permissions. \n    + for example, if he has permission to view member list, but no permission to view report, then only show member list menu for him\n\n- As long as an operator has permission to view the page, he should has permissions to perform any action available on the page\n    + for example, if he has permission to view member list, he can use the update status function provided on the page\n\n- If he try to access pages which he doesn't have permission, should be blocked\n\n- Boss can easily assign permission to an operator, or a group of operators\n\n# 2. General Design\n\n## 2.1 Resource Permission on Controller -> Action\nTo have control over all pages, we use permission control over all `Actions`.\n\nWhy? Because in MVC framework, all requests are passed to `Controller` and processed by `Action`, it makes sense to consider each action as a resource that an unique permission is assigned to.\n\n```SQL\nCREATE TABLE [dbo].[Resource]\n(\n    [ResourceId] INT NOT NULL IDENTITY(1, 1), \n    [ResourceName] VARCHAR(200) NOT NULL,   -- e.g. CreateMember\n    [ResourceType] TINYINT NOT NULL, \n    [ParentId] INT NULL, \n    [IsDefault] BIT NULL\n    CONSTRAINT [PK_Resource] PRIMARY KEY CLUSTERED\n    (\n        ResourceId ASC\n    )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],\n)\n```\n\nIn application, since every action need to have a permission checking, to generalize it, we can put it in `BaseController` (base controller inherits MVC `Controller`):\n\n```csharp\nprotected override void OnActionExecuting(ActionExecutingContext context)\n{\n    if (!IsAllowedAction(context))\n        {\n            context.Result = new HttpUnauthorizedResult();\n        }\n    \n    base.OnActionExecuting(context);\n}\n\nprivate bool IsAllowedAction(ActionExecutingContext context)\n{\n    var controller = context.RouteData.Values[\"controller\"].ToString();\n    var action = context.RouteData.Values[\"action\"].ToString();\n    if (AppSession.HasPermission(controller, action))\n    {\n        return true;\n    }\n    return false;\n}\n```\n\n## 2.2 Process flow\n\nThe process for display menu by permission is as below\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-21_020525.jpg)\n\n\n# 3. Technical Details\n\n## 3.1 Map Menu with Resource\n\nEach leaf menu node correspond to an `Action`. So we need to have a mapping of Menu with Resource\n\n```sql\nCREATE TABLE [dbo].[MenuConfig]\n(\n    [Key] VARCHAR(200) NOT NULL, \n    [ParentKey] VARCHAR(200) NULL, \n    [ResourceId] INT NULL,\n    [IsPageButton] BIT\n)\n\n```\nAfter user log in, get all permissions he has, then based on these permissions and the mapping, we can get all menus he can see.\n\nThere is a special handling for **IsPageButton**, sometimes in a page, there are buttons which can perform some action (e.g. link to another page, make a POST request).\n\nIt is special because we won't display these menus on top menu bar. So this flag is useful when process render menu.\n\n## 3.2 Why Control Resource Permission by Group?\n\nWhen number of operators grow, it is useful to assign them into different groups, each group perform certain tasks.\n\nTo achieve this, during operator creation, will force the creator to map this operator to a group. Then, in the future, this operator's permission will just follow his group's permission.\n\n```sql\nCREATE TABLE GroupResourcePermission(\n    [GroupId] INT NOT NULL,\n    [ResourceId] INT NULL, \n    [IsAllowed] BIT NOT NULL,\n)\n```\n\n\n## 3.3 Manage Resource Permission in most straight-forward way!\n\nBelow is the update resource permission process:\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-22_171605.jpg)\n\n\nTo make it simple to use, we use the same design as the menu bar, just add checkbox for operator to `tick / untick` to `GRANT / DENY` resource permissions.\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-22_172337.jpg)\n\nAfter user submit, backend receive the new menu set, then generate corresponding permissions needed for this new menu set, then compare new permissions with old permissions and find the difference, then update the difference to DB.\n\n\n# 4. Summary\nBy reading this blog, you should have a better idea of how to do permission control under MVC framework. Hope it can help in future work!\n\n\n","source":"_posts/implement-permission-control-for-mvc5-project.md","raw":"title: Implement Permission Control for MVC5 Project\ndate: 2015-07-21 23:55:00\nauthor: Ji Zhoubo\ntags: [C#, MVC]\n---\n\nWhen building backend system for a website, like member management system or accounting system, permission control has always been a must-have feature, so that different staffs or operators can be assigned just enough permissions to perform tasks.\n\nFor example, in an accouting system, some operators may only focus on doing money transfer, while some operators only handle reports. There will be information leakage and risks if just grant all permissions for all operators blindly.\n\n\n# 1. Requirements\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-21_013438.jpg)\n\nWe start from requirement analysis first.  Assume we have following requirements need to fulfill:\n- When an operator log in to system, render menu for him based on his permissions. \n    + for example, if he has permission to view member list, but no permission to view report, then only show member list menu for him\n\n- As long as an operator has permission to view the page, he should has permissions to perform any action available on the page\n    + for example, if he has permission to view member list, he can use the update status function provided on the page\n\n- If he try to access pages which he doesn't have permission, should be blocked\n\n- Boss can easily assign permission to an operator, or a group of operators\n\n# 2. General Design\n\n## 2.1 Resource Permission on Controller -> Action\nTo have control over all pages, we use permission control over all `Actions`.\n\nWhy? Because in MVC framework, all requests are passed to `Controller` and processed by `Action`, it makes sense to consider each action as a resource that an unique permission is assigned to.\n\n```SQL\nCREATE TABLE [dbo].[Resource]\n(\n    [ResourceId] INT NOT NULL IDENTITY(1, 1), \n    [ResourceName] VARCHAR(200) NOT NULL,   -- e.g. CreateMember\n    [ResourceType] TINYINT NOT NULL, \n    [ParentId] INT NULL, \n    [IsDefault] BIT NULL\n    CONSTRAINT [PK_Resource] PRIMARY KEY CLUSTERED\n    (\n        ResourceId ASC\n    )WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY],\n)\n```\n\nIn application, since every action need to have a permission checking, to generalize it, we can put it in `BaseController` (base controller inherits MVC `Controller`):\n\n```csharp\nprotected override void OnActionExecuting(ActionExecutingContext context)\n{\n    if (!IsAllowedAction(context))\n        {\n            context.Result = new HttpUnauthorizedResult();\n        }\n    \n    base.OnActionExecuting(context);\n}\n\nprivate bool IsAllowedAction(ActionExecutingContext context)\n{\n    var controller = context.RouteData.Values[\"controller\"].ToString();\n    var action = context.RouteData.Values[\"action\"].ToString();\n    if (AppSession.HasPermission(controller, action))\n    {\n        return true;\n    }\n    return false;\n}\n```\n\n## 2.2 Process flow\n\nThe process for display menu by permission is as below\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-21_020525.jpg)\n\n\n# 3. Technical Details\n\n## 3.1 Map Menu with Resource\n\nEach leaf menu node correspond to an `Action`. So we need to have a mapping of Menu with Resource\n\n```sql\nCREATE TABLE [dbo].[MenuConfig]\n(\n    [Key] VARCHAR(200) NOT NULL, \n    [ParentKey] VARCHAR(200) NULL, \n    [ResourceId] INT NULL,\n    [IsPageButton] BIT\n)\n\n```\nAfter user log in, get all permissions he has, then based on these permissions and the mapping, we can get all menus he can see.\n\nThere is a special handling for **IsPageButton**, sometimes in a page, there are buttons which can perform some action (e.g. link to another page, make a POST request).\n\nIt is special because we won't display these menus on top menu bar. So this flag is useful when process render menu.\n\n## 3.2 Why Control Resource Permission by Group?\n\nWhen number of operators grow, it is useful to assign them into different groups, each group perform certain tasks.\n\nTo achieve this, during operator creation, will force the creator to map this operator to a group. Then, in the future, this operator's permission will just follow his group's permission.\n\n```sql\nCREATE TABLE GroupResourcePermission(\n    [GroupId] INT NOT NULL,\n    [ResourceId] INT NULL, \n    [IsAllowed] BIT NOT NULL,\n)\n```\n\n\n## 3.3 Manage Resource Permission in most straight-forward way!\n\nBelow is the update resource permission process:\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-22_171605.jpg)\n\n\nTo make it simple to use, we use the same design as the menu bar, just add checkbox for operator to `tick / untick` to `GRANT / DENY` resource permissions.\n\n![alt text](http://7qn89w.com1.z0.glb.clouddn.com/2015-07-22_172337.jpg)\n\nAfter user submit, backend receive the new menu set, then generate corresponding permissions needed for this new menu set, then compare new permissions with old permissions and find the difference, then update the difference to DB.\n\n\n# 4. Summary\nBy reading this blog, you should have a better idea of how to do permission control under MVC framework. Hope it can help in future work!\n\n\n","slug":"implement-permission-control-for-mvc5-project","published":1,"updated":"2015-07-22T10:32:27.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvp0001bxcf6qt5g6k6w"},{"title":"How to set up and configure hexo to write posts on this blog","subtitle":"By Ji Zhoubo","date":"2015-06-19T00:39:15.000Z","_content":"## About\nThis blog mainly focuses on technical sharings and discussions, and any interesting topics related with Agile or Scrum may also appear.\n\nIn this post, I will show how to set up the environment and configure, and how to write posts and publish.\n\n## Set up and Configure\n- **Set up Git**\n This blog on GitHub has 2 repositories: \n    - noahteam.github.io: the repository contains compiled blog    \n    - Blog: the source repository\n I have added all our team members as collaborator, so you only need to clone Blog repository to your local, then you will be good to contribute\n ```bash\n git clone https://github.com/noahteam/Blog.git\n ```\n The blog repository now alreayd has everything inside, including hexo, hexo thems, and some posts\n\n- **Set up Hexo**\n Open git or powershell\n ```bash\n npm install -g hexo\n ```\n after installing hexo, need to init Hexo\n ```bash\n hexo init\n ```\n I have configured the _config.yml file and it supports deployment to our github.io page, in case you have error when publishing due to deployer issue, can try this:\n ```bash\n npm install hexo-deployer-git --save\n ```\n\n## Writing and Publishing\nNow you have everything ready, it is writting time! \nBefore you proceed, get latest from Blog repository\n```bash\ngit pull\n```\n- To create a new post, just use\n \n ```bash\n hexo n post [Title of the post]\n ```\n- To generate and publish\n \n ```bash\n hexo g #compile and generate\n hexo s #open local server and view, not necessary\n hexo d #publish\n ```\n\nAfter all that, you need to commit and push all your sources into Blog repository\n\n```bash\ngit add -A\ngit commit -m 'your comment'\ngit push\n```\n \n## Trouble Shooting\n![image is died](https://lh3.googleusercontent.com/PzU-BJ6Y-carpM6hp8COX3uxWMEfAo5LRCmn1mzj1g=w482-h304-no \"Error one\")\n\n> Delete **.deploy_git** folder and run **hexo clean**\n","source":"_posts/first-blog.md","raw":"title: How to set up and configure hexo to write posts on this blog\nsubtitle: By Ji Zhoubo\ndate: 2015-06-19 08:39:15\ntags: [git,hexo]\n---\n## About\nThis blog mainly focuses on technical sharings and discussions, and any interesting topics related with Agile or Scrum may also appear.\n\nIn this post, I will show how to set up the environment and configure, and how to write posts and publish.\n\n## Set up and Configure\n- **Set up Git**\n This blog on GitHub has 2 repositories: \n    - noahteam.github.io: the repository contains compiled blog    \n    - Blog: the source repository\n I have added all our team members as collaborator, so you only need to clone Blog repository to your local, then you will be good to contribute\n ```bash\n git clone https://github.com/noahteam/Blog.git\n ```\n The blog repository now alreayd has everything inside, including hexo, hexo thems, and some posts\n\n- **Set up Hexo**\n Open git or powershell\n ```bash\n npm install -g hexo\n ```\n after installing hexo, need to init Hexo\n ```bash\n hexo init\n ```\n I have configured the _config.yml file and it supports deployment to our github.io page, in case you have error when publishing due to deployer issue, can try this:\n ```bash\n npm install hexo-deployer-git --save\n ```\n\n## Writing and Publishing\nNow you have everything ready, it is writting time! \nBefore you proceed, get latest from Blog repository\n```bash\ngit pull\n```\n- To create a new post, just use\n \n ```bash\n hexo n post [Title of the post]\n ```\n- To generate and publish\n \n ```bash\n hexo g #compile and generate\n hexo s #open local server and view, not necessary\n hexo d #publish\n ```\n\nAfter all that, you need to commit and push all your sources into Blog repository\n\n```bash\ngit add -A\ngit commit -m 'your comment'\ngit push\n```\n \n## Trouble Shooting\n![image is died](https://lh3.googleusercontent.com/PzU-BJ6Y-carpM6hp8COX3uxWMEfAo5LRCmn1mzj1g=w482-h304-no \"Error one\")\n\n> Delete **.deploy_git** folder and run **hexo clean**\n","slug":"first-blog","published":1,"updated":"2015-07-22T10:32:27.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvp5001gxcf6o1h3une0"},{"title":"How to filter a IP from a IP range","author":"Toh Leng Wee","date":"2015-06-29T06:25:47.000Z","_content":"## About\nIn this post, we will show you how to filter a IP from a IP range in tsql.\n\n## Example\nWe would like to know whether a IP is between **64.233.160.0** and **64.233.191.255**.\nWe could use <a href=\"http://www.sqlteam.com/article/using-the-parsename-function-to-split-delimited-data\" target=\"_blank\" >PARSENAME function to split delimited data</a> such as IP. After that we add them together by multiplying each part of the IP with 2<sup>0</sup>, 2<sup>8</sup>, 2<sup>16</sup> and 2<sup>32</sup>.\n\n```sql\nDECLARE @beginInt bigint\nDECLARE @endInt bigint\n\nSET @beginInt = CONVERT(bigint, PARSENAME('64.233.160.0', 4)) * 16777216\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 3)) * 65536\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 2)) * 256\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 1))\nSET @endInt = CONVERT(bigint, PARSENAME('64.233.191.255', 4)) * 16777216\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 3)) * 65536\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 2)) * 256\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 1))\n\nSELECT [IP]\nFROM [YourTableName]\nWHERE CONVERT(bigint, PARSENAME(t.ip, 4)) * 16777216\n    + CONVERT(bigint, PARSENAME(t.ip, 3)) * 65536\n    + CONVERT(bigint, PARSENAME(t.ip, 2)) * 256\n    + CONVERT(bigint, PARSENAME(t.ip, 1)) between @beginInt and @endInt\n```","source":"_posts/filter-ip-in-a-ip-range.md","raw":"title: How to filter a IP from a IP range\nauthor: Toh Leng Wee\ndate: 2015-06-29 14:25:47\ntags: tsql\n---\n## About\nIn this post, we will show you how to filter a IP from a IP range in tsql.\n\n## Example\nWe would like to know whether a IP is between **64.233.160.0** and **64.233.191.255**.\nWe could use <a href=\"http://www.sqlteam.com/article/using-the-parsename-function-to-split-delimited-data\" target=\"_blank\" >PARSENAME function to split delimited data</a> such as IP. After that we add them together by multiplying each part of the IP with 2<sup>0</sup>, 2<sup>8</sup>, 2<sup>16</sup> and 2<sup>32</sup>.\n\n```sql\nDECLARE @beginInt bigint\nDECLARE @endInt bigint\n\nSET @beginInt = CONVERT(bigint, PARSENAME('64.233.160.0', 4)) * 16777216\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 3)) * 65536\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 2)) * 256\n              + CONVERT(bigint, PARSENAME('64.233.160.0', 1))\nSET @endInt = CONVERT(bigint, PARSENAME('64.233.191.255', 4)) * 16777216\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 3)) * 65536\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 2)) * 256\n            + CONVERT(bigint, PARSENAME('64.233.191.255', 1))\n\nSELECT [IP]\nFROM [YourTableName]\nWHERE CONVERT(bigint, PARSENAME(t.ip, 4)) * 16777216\n    + CONVERT(bigint, PARSENAME(t.ip, 3)) * 65536\n    + CONVERT(bigint, PARSENAME(t.ip, 2)) * 256\n    + CONVERT(bigint, PARSENAME(t.ip, 1)) between @beginInt and @endInt\n```","slug":"filter-ip-in-a-ip-range","published":1,"updated":"2015-07-22T10:32:27.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvpb001lxcf6282n3vrf"},{"title":"Introduction to CSS3 @media query","subtitle":"By Zhang Guoqiang","date":"2015-06-29T13:59:15.000Z","_content":"## About\nFor responsive design, sometimes we need to apply different style for specific media device or screen size.\nBy using CSS3 @media query, the mission will be quite easy to accomplish.\n\n## Syntax\nFirst let's have a look at where media query can be applied.\n\n```css\n<!-- CSS media query on a link element -->\n<link rel=\"stylesheet\" media=\"(max-width: 800px)\" href=\"example.css\" />\n\n<!-- CSS media query within a stylesheet -->\n<style>\n@media (max-width: 600px) {\n  .facet_sidebar {\n    display: none;\n  }\n}\n</style>\n```\nWhen the media attribute query in <link> tag is false, the stylesheet will not be applied to the document.(But it will still be downloaded.)\n\nIn the stylesheet we can also put css style under @media query to determine when should be applied.\n\nThe detailed syntax can be expressed as below\n\n```\nmedia_query_list: <media_query> [, <media_query> ]*\nmedia_query: [[only | not]? <media_type> [ and <expression> ]*]\n  | <expression> [ and <expression> ]*\nexpression: ( <media_feature> [: <value>]? )\nmedia_type: all | aural | braille | handheld | print |\n  projection | screen | tty | tv | embossed\nmedia_feature: width | min-width | max-width\n  | height | min-height | max-height\n  | device-width | min-device-width | max-device-width\n  | device-height | min-device-height | max-device-height\n  | aspect-ratio | min-aspect-ratio | max-aspect-ratio\n  | device-aspect-ratio | min-device-aspect-ratio | max-device-aspect-ratio\n  | color | min-color | max-color\n  | color-index | min-color-index | max-color-index\n  | monochrome | min-monochrome | max-monochrome\n  | resolution | min-resolution | max-resolution\n  | scan | grid\n ```\n \n@media should follow by a list of media queries seperated by comma. Each media query contains logic operator, media type and expression. Media expression consists of meida feature and it's value.\nMedia feature usually starts with min or max to indicate greater than or less than. The purpose is replacing < or > to avoid confussion in html. All parts bracketed with [] is optional.\n\nWe take below media query as example.\n```\n@media (min-width: 700px), handheld and (orientation: landscape) { ... }\n```\n\nThe above statement contains two media queries **(min-width:700px)** and **handheld and (orientation: landscape)**\nThe first query **min-width:700px** consists of media feature and its value. Because media type is not specified. So it applies to all media types. \nMedia feature uses min as greater than. So the whole query means for any media type if the viewport width is greater than 700px then it is true.\n\nFor the second query **handheld and (orientation: landscape)**, **handheld** is the media type for handheld devices. **and** is the logic operator which connects its before and after conditions.\n**orientation: landscape** indicates whether the viewport is landcape (width is bigger than height).\n\nSo the whole query list means for all devices if viewport width is larger than 700px or for handheld devices the orientation is landscape the style will be applied.\n\n## References\n[https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries)\n[https://developer.mozilla.org/en-US/docs/Web/CSS/@media](https://developer.mozilla.org/en-US/docs/Web/CSS/@media)\n\n\n\n\n \n\n\n\n\n","source":"_posts/css @media query.md","raw":"title: Introduction to CSS3 @media query\nsubtitle: By Zhang Guoqiang\ndate: 2015-06-29 21:59:15\ntags: css\n---\n## About\nFor responsive design, sometimes we need to apply different style for specific media device or screen size.\nBy using CSS3 @media query, the mission will be quite easy to accomplish.\n\n## Syntax\nFirst let's have a look at where media query can be applied.\n\n```css\n<!-- CSS media query on a link element -->\n<link rel=\"stylesheet\" media=\"(max-width: 800px)\" href=\"example.css\" />\n\n<!-- CSS media query within a stylesheet -->\n<style>\n@media (max-width: 600px) {\n  .facet_sidebar {\n    display: none;\n  }\n}\n</style>\n```\nWhen the media attribute query in <link> tag is false, the stylesheet will not be applied to the document.(But it will still be downloaded.)\n\nIn the stylesheet we can also put css style under @media query to determine when should be applied.\n\nThe detailed syntax can be expressed as below\n\n```\nmedia_query_list: <media_query> [, <media_query> ]*\nmedia_query: [[only | not]? <media_type> [ and <expression> ]*]\n  | <expression> [ and <expression> ]*\nexpression: ( <media_feature> [: <value>]? )\nmedia_type: all | aural | braille | handheld | print |\n  projection | screen | tty | tv | embossed\nmedia_feature: width | min-width | max-width\n  | height | min-height | max-height\n  | device-width | min-device-width | max-device-width\n  | device-height | min-device-height | max-device-height\n  | aspect-ratio | min-aspect-ratio | max-aspect-ratio\n  | device-aspect-ratio | min-device-aspect-ratio | max-device-aspect-ratio\n  | color | min-color | max-color\n  | color-index | min-color-index | max-color-index\n  | monochrome | min-monochrome | max-monochrome\n  | resolution | min-resolution | max-resolution\n  | scan | grid\n ```\n \n@media should follow by a list of media queries seperated by comma. Each media query contains logic operator, media type and expression. Media expression consists of meida feature and it's value.\nMedia feature usually starts with min or max to indicate greater than or less than. The purpose is replacing < or > to avoid confussion in html. All parts bracketed with [] is optional.\n\nWe take below media query as example.\n```\n@media (min-width: 700px), handheld and (orientation: landscape) { ... }\n```\n\nThe above statement contains two media queries **(min-width:700px)** and **handheld and (orientation: landscape)**\nThe first query **min-width:700px** consists of media feature and its value. Because media type is not specified. So it applies to all media types. \nMedia feature uses min as greater than. So the whole query means for any media type if the viewport width is greater than 700px then it is true.\n\nFor the second query **handheld and (orientation: landscape)**, **handheld** is the media type for handheld devices. **and** is the logic operator which connects its before and after conditions.\n**orientation: landscape** indicates whether the viewport is landcape (width is bigger than height).\n\nSo the whole query list means for all devices if viewport width is larger than 700px or for handheld devices the orientation is landscape the style will be applied.\n\n## References\n[https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries)\n[https://developer.mozilla.org/en-US/docs/Web/CSS/@media](https://developer.mozilla.org/en-US/docs/Web/CSS/@media)\n\n\n\n\n \n\n\n\n\n","slug":"css @media query","published":1,"updated":"2015-07-22T10:32:27.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvpe001oxcf6nrz2uqgu"},{"title":"Connection Timeout Issue for MSSQL","author":"chen chao","_content":"\nThis post is to address connection fast timeout issue for MSSQL when using default connection timeout.\n\n## Content\nThe default value for MSSQL timeout of connection is 15sec. However, sometimes application connecting to a SQL Server Database may timeout within milliseconds \n```\nSystem.Data.SqlClient.SqlException: Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.\n    at System.Data.ProviderBase.DbConnectionPool.GetConnection(DbConnection owningObject)\n    at System.Data.ProviderBase.DbConnectionFactory.GetConnection(DbConnection owningConnection)\n    at System.Data.ProviderBase.DbConnectionPool.GetConnection(DbConnection owningObject)\n    at System.Data.ProviderBase.DbConnectionFactory.GetConnection(DbConnection owningConnection)\n    at   System.Data.ProviderBase.DbConnectionClosed.OpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory)\n    at System.Data.SqlClient.SqlConnection.Open()\n```\n\nThe issue happens, because, SQLClient uses the connection retry algorithm (for TCP/IP Connections), and sets the initial connection timeout value as 15*0.08 = 1.2s and first tries to connect to the principal SQL server and if fails, then, tries to connect to mirrored SQL Server (the fact that the database is mirrored, may come from the connection string or SQLClient may collect this information, the first time it connects to the database). If this connection attempt also fails due to timeout (because of slow response from SQL Server or due to network delays), the SQLClient incorrectly sets the connection to doomed state, giving the connection timeout exception, without further connection retry attempt to principal.\n\nMicrosoft has confirmed that this is a problem in the current release of ADO.NET. This issue will be fixed in ADO.NET version, ships with Visual Studio 2011.\n\nIn the meantime, we request to use the following workarounds:\n1. Increase the connection string timeout to 150 sec. This will give the first attempt enough time to connect( 150* .08=12 sec)\n2. Add MinPool Size=20 in the connection string. This will always maintain a minimum of 20 connections in the pool and there will be less chances of creating new connection, thus reducing the chance of this error.\n3. Improve the network performance. Update your NIC drivers to the latest firmware version. We have seen network latency when your NIC card is not compatible with certain Scalable Networking Pack settings. If you are on Windows Vista SP1 or above you may also consider disabling Receive Window Auto-Tuning. If you have NIC teaming enabled, disabling it would be a good option.","source":"_posts/connection-timeout-issue-for-mssql.md","raw":"title: Connection Timeout Issue for MSSQL\nauthor: chen chao\ntags: mssql\n---\n\nThis post is to address connection fast timeout issue for MSSQL when using default connection timeout.\n\n## Content\nThe default value for MSSQL timeout of connection is 15sec. However, sometimes application connecting to a SQL Server Database may timeout within milliseconds \n```\nSystem.Data.SqlClient.SqlException: Timeout expired. The timeout period elapsed prior to completion of the operation or the server is not responding.\n    at System.Data.ProviderBase.DbConnectionPool.GetConnection(DbConnection owningObject)\n    at System.Data.ProviderBase.DbConnectionFactory.GetConnection(DbConnection owningConnection)\n    at System.Data.ProviderBase.DbConnectionPool.GetConnection(DbConnection owningObject)\n    at System.Data.ProviderBase.DbConnectionFactory.GetConnection(DbConnection owningConnection)\n    at   System.Data.ProviderBase.DbConnectionClosed.OpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory)\n    at System.Data.SqlClient.SqlConnection.Open()\n```\n\nThe issue happens, because, SQLClient uses the connection retry algorithm (for TCP/IP Connections), and sets the initial connection timeout value as 15*0.08 = 1.2s and first tries to connect to the principal SQL server and if fails, then, tries to connect to mirrored SQL Server (the fact that the database is mirrored, may come from the connection string or SQLClient may collect this information, the first time it connects to the database). If this connection attempt also fails due to timeout (because of slow response from SQL Server or due to network delays), the SQLClient incorrectly sets the connection to doomed state, giving the connection timeout exception, without further connection retry attempt to principal.\n\nMicrosoft has confirmed that this is a problem in the current release of ADO.NET. This issue will be fixed in ADO.NET version, ships with Visual Studio 2011.\n\nIn the meantime, we request to use the following workarounds:\n1. Increase the connection string timeout to 150 sec. This will give the first attempt enough time to connect( 150* .08=12 sec)\n2. Add MinPool Size=20 in the connection string. This will always maintain a minimum of 20 connections in the pool and there will be less chances of creating new connection, thus reducing the chance of this error.\n3. Improve the network performance. Update your NIC drivers to the latest firmware version. We have seen network latency when your NIC card is not compatible with certain Scalable Networking Pack settings. If you are on Windows Vista SP1 or above you may also consider disabling Receive Window Auto-Tuning. If you have NIC teaming enabled, disabling it would be a good option.","slug":"connection-timeout-issue-for-mssql","published":1,"date":"2015-07-22T10:32:27.762Z","updated":"2015-07-22T10:32:27.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvpj001rxcf6nw00p55r"},{"title":"Remote usability testing tool: Click Heat Map","date":"2015-07-19T04:04:07.000Z","_content":"## About\nWanting to know the behaviour of users using a site, many will think of Click Heat Map.\nClick Heat Map is a visualised click action of user done in a page with different colors.\n![Click Heat Map](http://blog.corunet.com/uploads/final.png \"Click Heat Map\")\n\nThe basic idea of the implementation:\n1. Record all the coordinates of any click action using javascript onclick event handler/ mouseclick event handler.\n2. Then sending the information like coordinates, url to server and stored those information.\n3. Display those stored information in heat map style.\n\nSample code from [stackoverflow](http://stackoverflow.com/questions/2496267/recording-user-data-for-heatmap-with-javascript)\n```bash\ndocument.onclick = function(e){\n  var trackImg = new Image();\n  trackImg.src = 'http://tracking.server/img.gif?x='+e.clientX+'&y='+e.clientY;\n}\n ```\n \nTechnical difficulties:\n1. Different screen size and resolution\n2. Dynamic layout like comments,  pop up alert.\n3. Optimise performance of recording click actions to avoid extra loading to website\n4. Need to support cross-browser compatibility\n\nIf writing one is too much of work, [here](http://www.paulolyslager.com/heatmap-hot-or-not/) has a list of 3rd party application on click heat map.\n\nOther alternative:\nIn-Page Analytics\n![In-Page_Analytics](https://lh3.googleusercontent.com/-Qx4GZbibbtY/Va0wbWoazJI/AAAAAAAAAUc/kwzlqAJSYEo/w1009-h520-no/In-Page_Analytics.png \"In-Page_Analytics\")\n\n\n\n","source":"_posts/Map.md","raw":"title: 'Remote usability testing tool: Click Heat Map'\ndate: 2015-07-19 12:04:07\ntags: [Remote usability testing tool, Heat Map]\n---\n## About\nWanting to know the behaviour of users using a site, many will think of Click Heat Map.\nClick Heat Map is a visualised click action of user done in a page with different colors.\n![Click Heat Map](http://blog.corunet.com/uploads/final.png \"Click Heat Map\")\n\nThe basic idea of the implementation:\n1. Record all the coordinates of any click action using javascript onclick event handler/ mouseclick event handler.\n2. Then sending the information like coordinates, url to server and stored those information.\n3. Display those stored information in heat map style.\n\nSample code from [stackoverflow](http://stackoverflow.com/questions/2496267/recording-user-data-for-heatmap-with-javascript)\n```bash\ndocument.onclick = function(e){\n  var trackImg = new Image();\n  trackImg.src = 'http://tracking.server/img.gif?x='+e.clientX+'&y='+e.clientY;\n}\n ```\n \nTechnical difficulties:\n1. Different screen size and resolution\n2. Dynamic layout like comments,  pop up alert.\n3. Optimise performance of recording click actions to avoid extra loading to website\n4. Need to support cross-browser compatibility\n\nIf writing one is too much of work, [here](http://www.paulolyslager.com/heatmap-hot-or-not/) has a list of 3rd party application on click heat map.\n\nOther alternative:\nIn-Page Analytics\n![In-Page_Analytics](https://lh3.googleusercontent.com/-Qx4GZbibbtY/Va0wbWoazJI/AAAAAAAAAUc/kwzlqAJSYEo/w1009-h520-no/In-Page_Analytics.png \"In-Page_Analytics\")\n\n\n\n","slug":"Map","published":1,"updated":"2015-07-22T10:32:27.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvpq001uxcf621tksj5o"},{"title":"JMeter from Scratch - Step by Step Tutorial","author":"chen chao","_content":"\n\n[Apache JMeter](http://jmeter.apache.org/) is a very famours open source software to perform load testing for web application. This post is to demo how to build a Jmeter load testing for a website from scratch.\n\n\n# Table of Contents\n1. [Preparation](#1-_Preparation)\n  1.1. [System to be tested](#1-1-_System_to_be_tested)\n  1.2. [Loading testing design](#1-2-_Loading_testing_design)\n  1.3. [Install JMeter](#1-3-_Install_JMeter)\n2. [Login with one user](#2-_Login_with_one_user)\n  2.1. [Create Test Plan](#2-1-_Create_Test_Plan)\n  2.2. [Create Thread Group](#2-2-_Create_Thread_Group)\n  2.3. [Login](#2-3-_Login)\n  2.4. [Add Results Tree](#2-4-_Add_Results_Tree)\n  2.5. [Cookie Manager](#2-5-_Cookie_Manager)\n3. [Login With 100 Users](#3-_Login_With_100_Users)\n  3.1. [Define Variables](#3-1-_Define_Variables)\n  3.2. [CSV Data Set Config](#3-2-_CSV_Data_Set_Config)\n  3.3. [Change to 100 Threads](#3-3-_Change_to_100_Threads)\n  3.4. [More Listeners](#3-4-_More_Listeners)\n4. [Update Book](#4-_Update_Book)\n  4.1. [Create HTTP Request to Update Book](#4-1-_Create_HTTP_Request_to_Update_Book)\n  4.2. [Response Assertion](#4-2-_Response_Assertion)\n  4.3. [Extract Data From Response](#4-3-_Extract_Data_From_Response)\n5. [Logout](#5-_Logout)\n6. [Conclusion](#6-_Conclusion)\n  \n  \n  \n# 1. Preparation\n\n## 1.1. System to be tested\n\nWe have a simple system for this tutorial, referring to the following flow:\n![System Overview](http://drive.google.com/uc?export=view&id=1jzHj4Ah4PzspppW2EbdLOvDDUgebP6CC9g \"system overview\")\n\nUser is required to login first. After succesfully login, a list of books will be shown. User is able to choose any of the book to update it.\n\n\n## 1.2. Loading testing design\nTo do testing with this simple system, we are going to follow the flow:\n1. Login\n2. Update the book\n3. Logout\n\nAnd to add on loading, we are going to create 100 users to do above steps simultaneously.\n\n## 1.3. Install JMeter\nWe need to have Java runtime environment in order to run JMeter. JMeter is downloaded from [Download Link](http://jmeter.apache.org/download_jmeter.cgi). When this tutorial is written, the latest version is 2.13. And the tutorial is using windows system. There is no much difference from operation system used.\n\nAfter downloaded JMeter, there is a jmeter.bat file after un-archive. Double click jmeter.bat, the JMeter will be opened\n![JMeter-empty](http://drive.google.com/uc?export=view&id=1Jm3y4dQl6rPp2GUn94h-Nj-0Fu5oKPxWzQ \"jmeter empty\")\n\n\n# 2. Login with one user\n\n## 2.1. Create Test Plan\nOnce open JMeter, we could edit the name of test plan. \n![edit test plan name](http://drive.google.com/uc?export=view&id=1zKqcq7xTqZy1AHt4Vg3m92UvSh_Kg5tuxQ \"edit test plan name\")\nAfter edit the name, do not forget to save it. By default, the test plan is saved as .jmx file and you could load this .jmx file next time if you want to re-execute the testing.\n![save test plan](http://drive.google.com/uc?export=view&id=1wAuOH-CphMYnQCGCm9yEe5X2SViW1fi_bg \"save test plan\")\n\n## 2.2. Create Thread Group\nNormally we need at least one thread group to perform load testing. To create the thread group, right click on the test plan name in right menu, then from popup menu, choose `Add`->`Threads (Users)`->`Thread Group`\n![Create thread group](http://drive.google.com/uc?export=view&id=1-0pyui9nvP2loCOYur5-SLrQPjmaItArEg \"create thread group\")\nYou can rename the thread group name as your favor\n![Edit thread group name](http://drive.google.com/uc?export=view&id=18XdGjgH4CetAIohwIgM8isjgXuuO4HYMSg \"edit thread group name\")\n\nThere are few settings on the thread group, we leave it right now and look back later.\n\n## 2.3. Login\nNow let's proceed to our first HTTP request to login to the system. \n\nTo create a HTTP request, right click on the thread group, from the popup menu, choose `Add`->`Sampler`->`HTTP Request`\n![Add Login HTTP Request](http://drive.google.com/uc?export=view&id=125S7Xybb8SkQkqsP5jh1VzwiRw_7dcgViA \"Add Login HTTP Request\")\n\nWe need to edit settings of this login request. In order to know the settings, normally we need to use tool to help us to identity with a trial on the system. If you are using Chrome, you could press F12 to open developer tools. Lastest version of Firefox and IE are have similar feature. We need to utilize this tool to capture the post paramters for login process. To do this, let's open our testing site.\n![login page](http://drive.google.com/uc?export=view&id=1kyHMrGHAMYo8R0qEMLTQF8Zwwy3fMJkkug  \"login page\")\nFill in username and password, click [_Login_]. You should able to see following information in F12.\n- Request URL\n- Form Data\n\n![login request capture](http://drive.google.com/uc?export=view&id=1rNLpfLzFocr302N-aZC4L5i0mJqC7jMG1A \"login request capture\")\n\nAfter collecting the information by manully trial, we could edit the settings of Login HTTP request.\n- *Name*: change it \"Login\".\n- *Server Name or IP* : this is the domain of [_Request URL_] captured. \n- *Port Number*: if leave empty, default to 80.\n- *Implementation*: you could choose one version of HttpClient.\n- *Protocal*: in this tutorial, it is HTTP. Therefore, you could leave it empty.\n- *Method*: in this case, it is POST\n- *Path*: this is the path part of [_Request URL_] captured\n- *Parameters*: you could fined them in form data captured. By clicking [_Add_] button to add in paratmers in form post. In this example, we need two paramters\n  + Username : user1\n  + Password : password1\n\nWe could leave other settings as default so far. The final settings should be as following\n![Login HTTP Request Setting](http://drive.google.com/uc?export=view&id=1IY73YtWyzfO4g8weejyYkoed-WqKKNMryw \"Login HTTP Request Setting\")\n\nRight now we already have a Http request setup. We could press [*Crtl+R*] or click [_Start_] Button on top menu to run our test.\n![Start Button](http://drive.google.com/uc?export=view&id=1udJs_pi9j9f-2S4DA3BsqGVB0bPveeaFlA \"Start Button\")\n\nActually we can not see anything from running our test. In order to view some output, let's proced to next step.\n\n## 2.4. Add Results Tree\nIn order for us to see the output of the excution of the test, we could add a listener to thread group. To do this, right click on thread group, from the popup menu, choose `Add`->`Listener`->`View Results Tree`\n![add results tree](http://drive.google.com/uc?export=view&id=1rVVM2-d8Da8rSRf0zhF5pGMj05mquIb4Dw \"add results tree\")\n\nLet's run the test again by pressing [_Crtl+R_]. Once done, clicking on [View Results Tree] in left menu, we could see there are outputs show in right panel. You may able to expand the request if there are redirects happended. In our case, once successfully login, it is supposed to go to [_Book List Page_]. However, from the screenshot below, we are seeing that it redicted to [_Book List Page_], and then redirected again to error page with message \"_Invalid Session_\". \n![View Results Tree 1](http://drive.google.com/uc?export=view&id=1qt1gajb03DZXxW153Zu0EjiKg-tiy-EkpQ \"View Results Tree 1\")\n\nThis is due to our test does not maintain the session information. Therefore, after successfully login, it fails on session checking when redirect to [_Book List Page_]. So it redicts to [_Error Page_]. We are going to resolve it in next step.\n\n## 2.5. Cookie Manager\nMost of website keeps session Id in cookie. Therefore, to keep our session valid, we just need to maintain cookie. JMemter provides [*HTTP Cookie Manager*] for this purpose. Right click thread group, in the popup menu, choose `Add`->`Config Element`->`HTTP Cookie Manager`\n![Cookie Manager](http://drive.google.com/uc?export=view&id=1vTJLqHHm77WqCY2O-DpRf5KzIb7izsMRKQ \"Cookie Manager\")\n\n\nWe could drag and drop the [_HTTP Cookie Manager_] on top of [_Login_] Http request. It is my favor style but not neccessary. Now we are going to run the test again. And we will not be redirected to [_Error Page_] any more.\n![View Results Tree 2](http://drive.google.com/uc?export=view&id=1ObavXN354y59_Ny8CKYKKiadNbICm60WpQ \"View Results Tree 2\")\n\n\n# 3. Login With 100 Users\n\nIn above section, we have created a test plan for 1 user. However, load testing requires **LOAD** to the system. Therefore, we are creating load in this section.\n\n## 3.1. Define Variables\nFirst of all, in order to create 100 users, we have to change the *username* and *password* for login request from hardcode value to dynamic variables. In JMeter, the variable is referred by format `${variable_name}`\n\nTo define variables, we could right click on thread group, choose `Add`->`Config Element`->`User Defined Variables` in popup menu. Drag and drop it on top of [*Cookie Manager*].\n![Add User Defined Variables](http://drive.google.com/uc?export=view&id=1pWHYXXQKTVtA-zk-vVvXn4VBG46PAHqOEQ \"Add User Defined Variables\")\n\nIn right panel of [*User Defined Variables*], click [*Add*] button in bottom. Set as following\n- Name : Server Name\n- Value : blog.localdev.net\n\n![User Defined Variables Setting](http://drive.google.com/uc?export=view&id=15RPosRRVFYaVMxd59ChPOedCFCNWMUCiFA \"User Defined Variables Setting\")\n\nTo use the variable we just set, click on [*Login*] in left menu. Change [*Server Name or IP*] to `${Server Name}`. Then press [*Ctrl+R*], we would see it is successfully run in [*View Results Tree*]\n![Login with variable](http://drive.google.com/uc?export=view&id=12KNz0VMWuN2OgBxy9KG1YgYv5GoaOJSAjw \"Login with variable\")\n\nWe could utilize this feature to make our test plan more reusable. However, to create 100 users, it is better to user another way to do it.\n\n## 3.2. CSV Data Set Config\n\nWe could create a separated `d:\\accounts.csv` file to store all the accounts used for load testing. \n```\nuser1,password1\nuser2,password2\nuser3,password3\nuser4,password4\nuser5,password5\nuser6,password6\nuser7,password7\nuser8,password8\nuser9,password9\nuser10,password10\nuser11,password11\n...\n...\n```\n\nIn order to load this .csv file into JMeter test plan, right click on thread group, choose `Add`->`Config Element`->`CSV Data Set Config` from popup menu.\n![add csv data set config](http://drive.google.com/uc?export=view&id=1zl82kxtfjGiUbmGDNy2ihRPsv8fmvRrcOg)\n\nWe need to edit settings:\n- Name: `User Accounts`\n- Filename: absolute/relative path to the .csv file\n- Variable Names(comma-delimited): `Username,Password`\n\nLeave other as default. The final setting will be as following:\n![settings of csv data set config](http://drive.google.com/uc?export=view&id=13TPcqrYIJQ-MQJNeB19FQH-wdykpm-P3nQ)\n\nAfter setup [*csv data set config*], we already have *Username* and *Password* loaded from .csv file. To use these variables in our test plan, click on [*Login*] in left menu, change the value of *Username* to `${Username}`, and value of *Password* to `${Password}`\n![Login Setting](http://drive.google.com/uc?export=view&id=1k9uf02PhZpHNl6mpgL_zG7eW8M0Rp0jLTg)\n\nNow we could press [*Ctrl+R*] to run our test again. In [*View Results Tree*], we could see there is 1 request send to login page succesfully with the 1st credential in accounts.csv file.\n![Results](http://drive.google.com/uc?export=view&id=1ynq81KfhEQszMRNZfArVsrYkCPNf4EwcRQ)\n\n\n## 3.3. Change to 100 Threads\nClick on thread group, change [*Number of Threads (users)*] from 1 to 100. \n![100 Threads](http://drive.google.com/uc?export=view&id=13L-R3khC68TPvbPe_6Cj4hovT9RZU_YGiA)\n\nLet's run the test again. Click on [*View Results Tree*] we could see 100 requests are sent to login. We could exam the last request. The parameter sent should be `username100` and `password100` which is the last record in `accounts.csv`\n![Results Tree](http://drive.google.com/uc?export=view&id=12Epsoh8vGOGQDDZ7hLC66yzjTaalpk2TJw)\n\nIt does not matter if we have less or more credentials in accounts.csv compare to number of threads we configured. JMeter will use round-robin algorithm to pick up data from the data set. If finished last line, it will pick from the starting again.\n\n## 3.4. More Listeners\nIn load testing, we may more care about server response time or throughput. There are many listeners supported in JMeter. We could add few more to test.\n- Graph Results: `Add`->`Listener`->`Graph Results`\n  ![Graph Results](http://drive.google.com/uc?export=view&id=11bqdjKJRQ6bfoiIUjo97Yvm5JUdLUssM1w)\n- Aggregate Graph: `Add`->`Listener`->`Aggregate Graph`\n  ![Aggregate Graph](http://drive.google.com/uc?export=view&id=1rKh6jv6WV3K80e5dVr-ZR54JM6nzt4wfhQ)\n\nWe also could save the test results in another file. It could be done by specify filename in any one of listeners.\n![output result](http://drive.google.com/uc?export=view&id=1JANGf2yg4p0rca7WdV92YoFmFOvjvMR7vg)\n\nThe results saved will be looked like following:\n```\n1436468823479,82,Login,200,OK,JMeter Tutorial Thread Group 1-3,text,true,4359,28,28,12\n1436468823477,107,Login,200,OK,JMeter Tutorial Thread Group 1-2,text,true,4359,36,36,14\n1436468823499,150,Login,200,OK,JMeter Tutorial Thread Group 1-18,text,true,4359,81,81,66\n1436468823487,129,Login,200,OK,JMeter Tutorial Thread Group 1-10,text,true,4359,64,64,57\n1436468823482,81,Login,200,OK,JMeter Tutorial Thread Group 1-4,text,true,4359,31,31,12\n1436468823476,70,Login,200,OK,JMeter Tutorial Thread Group 1-1,text,true,4359,25,25,9\n1436468823482,184,Login,200,OK,JMeter Tutorial Thread Group 1-5,text,true,4359,87,87,78\n1436468823488,164,Login,200,OK,JMeter Tutorial Thread Group 1-9,text,true,4359,83,83,56\n1436468823489,365,Login,200,OK,JMeter Tutorial Thread Group 1-11,text,true,4359,180,180,95\n1436468823484,168,Login,200,OK,JMeter Tutorial Thread Group 1-7,text,true,4359,83,83,78\n1436468823499,172,Login,200,OK,JMeter Tutorial Thread Group 1-13,text,true,4359,89,89,62\n1436468823494,219,Login,200,OK,JMeter Tutorial Thread Group 1-15,text,true,4359,142,142,94\n1436468823491,181,Login,200,OK,JMeter Tutorial Thread Group 1-14,text,true,4359,89,89,72\n.....\n.....\n```\n\n\n# 4. Update Book\n\nRight now we have already login to the system, let's proceed to next step [**Update Book**]. In order to make test simple, we temperially change the number of thread back to 1.\n\n## 4.1. Create HTTP Request to Update Book\nSimilar as creating [*HTTP Request*] of [*Login*] by `Add`->`Sampler`->`HTTP Request`. Rename it to `Update Book`.\n\nWe need to do a manually trial in the system in order to get all parameters required to update a book. We capture the network traffic again.\n![Update book network traffic capture](http://drive.google.com/uc?export=view&id=1gaFJUF0eEMY3CglqFFsMIhhabRXfv8mPOA)\n\nAccording to the traffic captured, we configure the setting of [*Update Book*].\n- Server Name or IP: `${Server Name}`\n- Implementation: `HttpClient3.1`\n- Method: `POST`\n- Path: `/JmeterTutorial/Book/Edit/1`\n- Parameters:\n  + \\_\\_RequestVerificationToken: `PDCC7CppV-wSE51IFuPuOfKpQdo64t-8gt72qmo5zp6SYlwXTlDtOzRLLFsG3N24DHGQtAY43jeaGFeGnJsW7a_WBXgHfzx7E4Za_0PnjcQ1`\n  + Id: `1` \n  + SerialNumber: `37218739821`\n  + Title: `Circling the Sun`\n  + Author: `Paula McLain`\n  + Price: `12.90`\n  \nThe final setting will look like following\n![Setting of Update Book](http://drive.google.com/uc?export=view&id=1DSPu1Gg4fTwkRQlGFLhDYPBrNuqT0gwhIg)\n\nwe run the test again with 1 thread, we could see that [*Error Page*] is shown after requesting to [*Edit Book Page*]. The error message shows that \"*Anti-forgery checking failed*\".\n![Results Tree](http://drive.google.com/uc?export=view&id=1la6pbA3mXvDobtRj3KUav1jwrQKhckz9LQ)\n\nThe error is because of *\\_\\_RequestVerificationToken* we sent is dynamically changed whenever we visit [*Edit Book Page*]. We need to extract the correct value of *\\_\\_RequestVerificationToken* before sending request to update. We are going to resolve it soon.\n\n## 4.2. Response Assertion\n\nBefore we resolve the anti-forgery request parameter, we look at one more issue. Right now in [*View Results Tree*], although it fails on updating book, it shows green icon which suggests '*Success*'. It will bring trouble if we have thousands of threads since we could not exam the details for every request to know which one has error. We could do this automatically by add [*Response Assertion*].\n\nRight click on [*Update Book*] in left menu, choose `Add`->`Assertions`->`Response Assertion` in popup menu. \n![Add Response Assertion](http://drive.google.com/uc?export=view&id=1z3oJrpbbDR6BPD1TY85nrnCURF0et1u4yw)\n\nIf we update book successfully, it should go back to book listing page. Therefore, we could validate the body of response should have `Book List` text. The setting page should be as following\n![Response Assert Setting](http://drive.google.com/uc?export=view&id=1cokbEH5hHIiS9NU1UKOJwBKK4DxpZ1asyg)\n\nNow we run the test again, we could see there is a red icon before [*Update book*] which suggests there is an error happened.\n![Results Tree](http://drive.google.com/uc?export=view&id=1eOEmQ1_6SWEFMidQS9GE2dIOdFIw2fXgNQ)\n\nSometimes it is meaningless to continue execute the test if there is an error happened, there is a setting that could stop proceeding if error detected. Click on thread group, and select option when sample error happened. In this tutorial, we choose `Stop Thread`.\n![Stop Thread When Sample Error](http://drive.google.com/uc?export=view&id=1E1k8gUqAJCWri_LmrM5vQimjWj5fRXUx3A)\n\n\n## 4.3. Extract Data From Response\n\nTo resolve the anti-forgery issue, we need to visit [*Edit Book Page*] and extract *\\_\\_RequestVerificationToken* from the response.\n\n### 4.3.1. Add HTTP Request To Show Edit Form\n\nAdd a [*HTTP Request*] between [*Login*] and [*Update Book*]. This request to `/JMeterTutorial/Book/Edit/1`. Name this request to `Show Edit Form`.\n![show edit form](http://drive.google.com/uc?export=view&id=1wwMlivJ2mYs5nYPPl1jh5zGDmM5dhAAivw)\n\n### 4.3.2. Extract Response\n\nRight click on [*Show Edit Form*], choose `Add`->`Post Processors`->`Regular Expression Extractor` in popup menu. \n![Add regular expression extractor](http://drive.google.com/uc?export=view&id=1Vu_P-yeuzRDo4jtNj26r_Mj4JG0bCr4VPg)\n\nChange the name to `Extract Anti-Forgery Token`. And edit the setting:\n- Field to check: `Body`. \n  The *\\_\\_RequestVerificationToken* is in response body. \n- Reference Name: `token`. \n  This is the variable name for the value after extraction.\n- Regular Expression: `<input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"(.*)\" />`.\n  The regular expression to match the value. The value will be retrieved inside `()`\n- Template: `$1$`\n  *$1$* refers to the value inside first *\\(\\)*\n\nThe final setting will look like following:\n![regular expression extractor setting](http://drive.google.com/uc?export=view&id=1_EvOcSgsFnIiojagBbBRPiVCDc-A6rmoSw)\n\n### 4.3.3. Apply Token extracted to Update Book Request\n\nWe have extracted token from [*Show Edit Form*]. Click on [*Update Book*], change value of *\\_\\_RequestVerificationToken* to `${token}`. \n![update book setting](http://drive.google.com/uc?export=view&id=1qTdEeus2hlfHVUjR7E23jNNu4g8_sYdAdQ)\n\nWe run the test again, we should see all requests are success.\n![Results Tree](http://drive.google.com/uc?export=view&id=1W6_-aDIrjL5ePAW3SzOw13SJb3ehqCzk5g)\n\n\n# 5. Logout\n\nLast step is to add logout request. \n![logout request](http://drive.google.com/uc?export=view&id=1G1WeSpqQCpGp3E7HVrQMhZDsmdGRQFNikw)\n\nAfter logout, it should redirect to login form. therefore, we could add a response assertion.\n![logout response assertion](http://drive.google.com/uc?export=view&id=1FqTzahYHgK0JIvGO4bdB6IUAYAZRPf__qw)\n\nWe run the test now should see following in [*Results Tree*]\n![Results Tree](http://drive.google.com/uc?export=view&id=15W6JUWE3ZbFwTCBaVbWnZs3MCLausdoXfA)\n\nChange back the number of thread to 100. We could see result in listeners.\n\n\n# 6. Conclusion\n\nBy follow this tutorial, you could be able to complete the simple load testing from scratch. There are much more functions available in JMeter. This post only covers basic but useful scenarios.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Jmeter-step-by-step.md","raw":"title: JMeter from Scratch - Step by Step Tutorial\nauthor: chen chao\ntags: [JMeter, Load testing]\n---\n\n\n[Apache JMeter](http://jmeter.apache.org/) is a very famours open source software to perform load testing for web application. This post is to demo how to build a Jmeter load testing for a website from scratch.\n\n\n# Table of Contents\n1. [Preparation](#1-_Preparation)\n  1.1. [System to be tested](#1-1-_System_to_be_tested)\n  1.2. [Loading testing design](#1-2-_Loading_testing_design)\n  1.3. [Install JMeter](#1-3-_Install_JMeter)\n2. [Login with one user](#2-_Login_with_one_user)\n  2.1. [Create Test Plan](#2-1-_Create_Test_Plan)\n  2.2. [Create Thread Group](#2-2-_Create_Thread_Group)\n  2.3. [Login](#2-3-_Login)\n  2.4. [Add Results Tree](#2-4-_Add_Results_Tree)\n  2.5. [Cookie Manager](#2-5-_Cookie_Manager)\n3. [Login With 100 Users](#3-_Login_With_100_Users)\n  3.1. [Define Variables](#3-1-_Define_Variables)\n  3.2. [CSV Data Set Config](#3-2-_CSV_Data_Set_Config)\n  3.3. [Change to 100 Threads](#3-3-_Change_to_100_Threads)\n  3.4. [More Listeners](#3-4-_More_Listeners)\n4. [Update Book](#4-_Update_Book)\n  4.1. [Create HTTP Request to Update Book](#4-1-_Create_HTTP_Request_to_Update_Book)\n  4.2. [Response Assertion](#4-2-_Response_Assertion)\n  4.3. [Extract Data From Response](#4-3-_Extract_Data_From_Response)\n5. [Logout](#5-_Logout)\n6. [Conclusion](#6-_Conclusion)\n  \n  \n  \n# 1. Preparation\n\n## 1.1. System to be tested\n\nWe have a simple system for this tutorial, referring to the following flow:\n![System Overview](http://drive.google.com/uc?export=view&id=1jzHj4Ah4PzspppW2EbdLOvDDUgebP6CC9g \"system overview\")\n\nUser is required to login first. After succesfully login, a list of books will be shown. User is able to choose any of the book to update it.\n\n\n## 1.2. Loading testing design\nTo do testing with this simple system, we are going to follow the flow:\n1. Login\n2. Update the book\n3. Logout\n\nAnd to add on loading, we are going to create 100 users to do above steps simultaneously.\n\n## 1.3. Install JMeter\nWe need to have Java runtime environment in order to run JMeter. JMeter is downloaded from [Download Link](http://jmeter.apache.org/download_jmeter.cgi). When this tutorial is written, the latest version is 2.13. And the tutorial is using windows system. There is no much difference from operation system used.\n\nAfter downloaded JMeter, there is a jmeter.bat file after un-archive. Double click jmeter.bat, the JMeter will be opened\n![JMeter-empty](http://drive.google.com/uc?export=view&id=1Jm3y4dQl6rPp2GUn94h-Nj-0Fu5oKPxWzQ \"jmeter empty\")\n\n\n# 2. Login with one user\n\n## 2.1. Create Test Plan\nOnce open JMeter, we could edit the name of test plan. \n![edit test plan name](http://drive.google.com/uc?export=view&id=1zKqcq7xTqZy1AHt4Vg3m92UvSh_Kg5tuxQ \"edit test plan name\")\nAfter edit the name, do not forget to save it. By default, the test plan is saved as .jmx file and you could load this .jmx file next time if you want to re-execute the testing.\n![save test plan](http://drive.google.com/uc?export=view&id=1wAuOH-CphMYnQCGCm9yEe5X2SViW1fi_bg \"save test plan\")\n\n## 2.2. Create Thread Group\nNormally we need at least one thread group to perform load testing. To create the thread group, right click on the test plan name in right menu, then from popup menu, choose `Add`->`Threads (Users)`->`Thread Group`\n![Create thread group](http://drive.google.com/uc?export=view&id=1-0pyui9nvP2loCOYur5-SLrQPjmaItArEg \"create thread group\")\nYou can rename the thread group name as your favor\n![Edit thread group name](http://drive.google.com/uc?export=view&id=18XdGjgH4CetAIohwIgM8isjgXuuO4HYMSg \"edit thread group name\")\n\nThere are few settings on the thread group, we leave it right now and look back later.\n\n## 2.3. Login\nNow let's proceed to our first HTTP request to login to the system. \n\nTo create a HTTP request, right click on the thread group, from the popup menu, choose `Add`->`Sampler`->`HTTP Request`\n![Add Login HTTP Request](http://drive.google.com/uc?export=view&id=125S7Xybb8SkQkqsP5jh1VzwiRw_7dcgViA \"Add Login HTTP Request\")\n\nWe need to edit settings of this login request. In order to know the settings, normally we need to use tool to help us to identity with a trial on the system. If you are using Chrome, you could press F12 to open developer tools. Lastest version of Firefox and IE are have similar feature. We need to utilize this tool to capture the post paramters for login process. To do this, let's open our testing site.\n![login page](http://drive.google.com/uc?export=view&id=1kyHMrGHAMYo8R0qEMLTQF8Zwwy3fMJkkug  \"login page\")\nFill in username and password, click [_Login_]. You should able to see following information in F12.\n- Request URL\n- Form Data\n\n![login request capture](http://drive.google.com/uc?export=view&id=1rNLpfLzFocr302N-aZC4L5i0mJqC7jMG1A \"login request capture\")\n\nAfter collecting the information by manully trial, we could edit the settings of Login HTTP request.\n- *Name*: change it \"Login\".\n- *Server Name or IP* : this is the domain of [_Request URL_] captured. \n- *Port Number*: if leave empty, default to 80.\n- *Implementation*: you could choose one version of HttpClient.\n- *Protocal*: in this tutorial, it is HTTP. Therefore, you could leave it empty.\n- *Method*: in this case, it is POST\n- *Path*: this is the path part of [_Request URL_] captured\n- *Parameters*: you could fined them in form data captured. By clicking [_Add_] button to add in paratmers in form post. In this example, we need two paramters\n  + Username : user1\n  + Password : password1\n\nWe could leave other settings as default so far. The final settings should be as following\n![Login HTTP Request Setting](http://drive.google.com/uc?export=view&id=1IY73YtWyzfO4g8weejyYkoed-WqKKNMryw \"Login HTTP Request Setting\")\n\nRight now we already have a Http request setup. We could press [*Crtl+R*] or click [_Start_] Button on top menu to run our test.\n![Start Button](http://drive.google.com/uc?export=view&id=1udJs_pi9j9f-2S4DA3BsqGVB0bPveeaFlA \"Start Button\")\n\nActually we can not see anything from running our test. In order to view some output, let's proced to next step.\n\n## 2.4. Add Results Tree\nIn order for us to see the output of the excution of the test, we could add a listener to thread group. To do this, right click on thread group, from the popup menu, choose `Add`->`Listener`->`View Results Tree`\n![add results tree](http://drive.google.com/uc?export=view&id=1rVVM2-d8Da8rSRf0zhF5pGMj05mquIb4Dw \"add results tree\")\n\nLet's run the test again by pressing [_Crtl+R_]. Once done, clicking on [View Results Tree] in left menu, we could see there are outputs show in right panel. You may able to expand the request if there are redirects happended. In our case, once successfully login, it is supposed to go to [_Book List Page_]. However, from the screenshot below, we are seeing that it redicted to [_Book List Page_], and then redirected again to error page with message \"_Invalid Session_\". \n![View Results Tree 1](http://drive.google.com/uc?export=view&id=1qt1gajb03DZXxW153Zu0EjiKg-tiy-EkpQ \"View Results Tree 1\")\n\nThis is due to our test does not maintain the session information. Therefore, after successfully login, it fails on session checking when redirect to [_Book List Page_]. So it redicts to [_Error Page_]. We are going to resolve it in next step.\n\n## 2.5. Cookie Manager\nMost of website keeps session Id in cookie. Therefore, to keep our session valid, we just need to maintain cookie. JMemter provides [*HTTP Cookie Manager*] for this purpose. Right click thread group, in the popup menu, choose `Add`->`Config Element`->`HTTP Cookie Manager`\n![Cookie Manager](http://drive.google.com/uc?export=view&id=1vTJLqHHm77WqCY2O-DpRf5KzIb7izsMRKQ \"Cookie Manager\")\n\n\nWe could drag and drop the [_HTTP Cookie Manager_] on top of [_Login_] Http request. It is my favor style but not neccessary. Now we are going to run the test again. And we will not be redirected to [_Error Page_] any more.\n![View Results Tree 2](http://drive.google.com/uc?export=view&id=1ObavXN354y59_Ny8CKYKKiadNbICm60WpQ \"View Results Tree 2\")\n\n\n# 3. Login With 100 Users\n\nIn above section, we have created a test plan for 1 user. However, load testing requires **LOAD** to the system. Therefore, we are creating load in this section.\n\n## 3.1. Define Variables\nFirst of all, in order to create 100 users, we have to change the *username* and *password* for login request from hardcode value to dynamic variables. In JMeter, the variable is referred by format `${variable_name}`\n\nTo define variables, we could right click on thread group, choose `Add`->`Config Element`->`User Defined Variables` in popup menu. Drag and drop it on top of [*Cookie Manager*].\n![Add User Defined Variables](http://drive.google.com/uc?export=view&id=1pWHYXXQKTVtA-zk-vVvXn4VBG46PAHqOEQ \"Add User Defined Variables\")\n\nIn right panel of [*User Defined Variables*], click [*Add*] button in bottom. Set as following\n- Name : Server Name\n- Value : blog.localdev.net\n\n![User Defined Variables Setting](http://drive.google.com/uc?export=view&id=15RPosRRVFYaVMxd59ChPOedCFCNWMUCiFA \"User Defined Variables Setting\")\n\nTo use the variable we just set, click on [*Login*] in left menu. Change [*Server Name or IP*] to `${Server Name}`. Then press [*Ctrl+R*], we would see it is successfully run in [*View Results Tree*]\n![Login with variable](http://drive.google.com/uc?export=view&id=12KNz0VMWuN2OgBxy9KG1YgYv5GoaOJSAjw \"Login with variable\")\n\nWe could utilize this feature to make our test plan more reusable. However, to create 100 users, it is better to user another way to do it.\n\n## 3.2. CSV Data Set Config\n\nWe could create a separated `d:\\accounts.csv` file to store all the accounts used for load testing. \n```\nuser1,password1\nuser2,password2\nuser3,password3\nuser4,password4\nuser5,password5\nuser6,password6\nuser7,password7\nuser8,password8\nuser9,password9\nuser10,password10\nuser11,password11\n...\n...\n```\n\nIn order to load this .csv file into JMeter test plan, right click on thread group, choose `Add`->`Config Element`->`CSV Data Set Config` from popup menu.\n![add csv data set config](http://drive.google.com/uc?export=view&id=1zl82kxtfjGiUbmGDNy2ihRPsv8fmvRrcOg)\n\nWe need to edit settings:\n- Name: `User Accounts`\n- Filename: absolute/relative path to the .csv file\n- Variable Names(comma-delimited): `Username,Password`\n\nLeave other as default. The final setting will be as following:\n![settings of csv data set config](http://drive.google.com/uc?export=view&id=13TPcqrYIJQ-MQJNeB19FQH-wdykpm-P3nQ)\n\nAfter setup [*csv data set config*], we already have *Username* and *Password* loaded from .csv file. To use these variables in our test plan, click on [*Login*] in left menu, change the value of *Username* to `${Username}`, and value of *Password* to `${Password}`\n![Login Setting](http://drive.google.com/uc?export=view&id=1k9uf02PhZpHNl6mpgL_zG7eW8M0Rp0jLTg)\n\nNow we could press [*Ctrl+R*] to run our test again. In [*View Results Tree*], we could see there is 1 request send to login page succesfully with the 1st credential in accounts.csv file.\n![Results](http://drive.google.com/uc?export=view&id=1ynq81KfhEQszMRNZfArVsrYkCPNf4EwcRQ)\n\n\n## 3.3. Change to 100 Threads\nClick on thread group, change [*Number of Threads (users)*] from 1 to 100. \n![100 Threads](http://drive.google.com/uc?export=view&id=13L-R3khC68TPvbPe_6Cj4hovT9RZU_YGiA)\n\nLet's run the test again. Click on [*View Results Tree*] we could see 100 requests are sent to login. We could exam the last request. The parameter sent should be `username100` and `password100` which is the last record in `accounts.csv`\n![Results Tree](http://drive.google.com/uc?export=view&id=12Epsoh8vGOGQDDZ7hLC66yzjTaalpk2TJw)\n\nIt does not matter if we have less or more credentials in accounts.csv compare to number of threads we configured. JMeter will use round-robin algorithm to pick up data from the data set. If finished last line, it will pick from the starting again.\n\n## 3.4. More Listeners\nIn load testing, we may more care about server response time or throughput. There are many listeners supported in JMeter. We could add few more to test.\n- Graph Results: `Add`->`Listener`->`Graph Results`\n  ![Graph Results](http://drive.google.com/uc?export=view&id=11bqdjKJRQ6bfoiIUjo97Yvm5JUdLUssM1w)\n- Aggregate Graph: `Add`->`Listener`->`Aggregate Graph`\n  ![Aggregate Graph](http://drive.google.com/uc?export=view&id=1rKh6jv6WV3K80e5dVr-ZR54JM6nzt4wfhQ)\n\nWe also could save the test results in another file. It could be done by specify filename in any one of listeners.\n![output result](http://drive.google.com/uc?export=view&id=1JANGf2yg4p0rca7WdV92YoFmFOvjvMR7vg)\n\nThe results saved will be looked like following:\n```\n1436468823479,82,Login,200,OK,JMeter Tutorial Thread Group 1-3,text,true,4359,28,28,12\n1436468823477,107,Login,200,OK,JMeter Tutorial Thread Group 1-2,text,true,4359,36,36,14\n1436468823499,150,Login,200,OK,JMeter Tutorial Thread Group 1-18,text,true,4359,81,81,66\n1436468823487,129,Login,200,OK,JMeter Tutorial Thread Group 1-10,text,true,4359,64,64,57\n1436468823482,81,Login,200,OK,JMeter Tutorial Thread Group 1-4,text,true,4359,31,31,12\n1436468823476,70,Login,200,OK,JMeter Tutorial Thread Group 1-1,text,true,4359,25,25,9\n1436468823482,184,Login,200,OK,JMeter Tutorial Thread Group 1-5,text,true,4359,87,87,78\n1436468823488,164,Login,200,OK,JMeter Tutorial Thread Group 1-9,text,true,4359,83,83,56\n1436468823489,365,Login,200,OK,JMeter Tutorial Thread Group 1-11,text,true,4359,180,180,95\n1436468823484,168,Login,200,OK,JMeter Tutorial Thread Group 1-7,text,true,4359,83,83,78\n1436468823499,172,Login,200,OK,JMeter Tutorial Thread Group 1-13,text,true,4359,89,89,62\n1436468823494,219,Login,200,OK,JMeter Tutorial Thread Group 1-15,text,true,4359,142,142,94\n1436468823491,181,Login,200,OK,JMeter Tutorial Thread Group 1-14,text,true,4359,89,89,72\n.....\n.....\n```\n\n\n# 4. Update Book\n\nRight now we have already login to the system, let's proceed to next step [**Update Book**]. In order to make test simple, we temperially change the number of thread back to 1.\n\n## 4.1. Create HTTP Request to Update Book\nSimilar as creating [*HTTP Request*] of [*Login*] by `Add`->`Sampler`->`HTTP Request`. Rename it to `Update Book`.\n\nWe need to do a manually trial in the system in order to get all parameters required to update a book. We capture the network traffic again.\n![Update book network traffic capture](http://drive.google.com/uc?export=view&id=1gaFJUF0eEMY3CglqFFsMIhhabRXfv8mPOA)\n\nAccording to the traffic captured, we configure the setting of [*Update Book*].\n- Server Name or IP: `${Server Name}`\n- Implementation: `HttpClient3.1`\n- Method: `POST`\n- Path: `/JmeterTutorial/Book/Edit/1`\n- Parameters:\n  + \\_\\_RequestVerificationToken: `PDCC7CppV-wSE51IFuPuOfKpQdo64t-8gt72qmo5zp6SYlwXTlDtOzRLLFsG3N24DHGQtAY43jeaGFeGnJsW7a_WBXgHfzx7E4Za_0PnjcQ1`\n  + Id: `1` \n  + SerialNumber: `37218739821`\n  + Title: `Circling the Sun`\n  + Author: `Paula McLain`\n  + Price: `12.90`\n  \nThe final setting will look like following\n![Setting of Update Book](http://drive.google.com/uc?export=view&id=1DSPu1Gg4fTwkRQlGFLhDYPBrNuqT0gwhIg)\n\nwe run the test again with 1 thread, we could see that [*Error Page*] is shown after requesting to [*Edit Book Page*]. The error message shows that \"*Anti-forgery checking failed*\".\n![Results Tree](http://drive.google.com/uc?export=view&id=1la6pbA3mXvDobtRj3KUav1jwrQKhckz9LQ)\n\nThe error is because of *\\_\\_RequestVerificationToken* we sent is dynamically changed whenever we visit [*Edit Book Page*]. We need to extract the correct value of *\\_\\_RequestVerificationToken* before sending request to update. We are going to resolve it soon.\n\n## 4.2. Response Assertion\n\nBefore we resolve the anti-forgery request parameter, we look at one more issue. Right now in [*View Results Tree*], although it fails on updating book, it shows green icon which suggests '*Success*'. It will bring trouble if we have thousands of threads since we could not exam the details for every request to know which one has error. We could do this automatically by add [*Response Assertion*].\n\nRight click on [*Update Book*] in left menu, choose `Add`->`Assertions`->`Response Assertion` in popup menu. \n![Add Response Assertion](http://drive.google.com/uc?export=view&id=1z3oJrpbbDR6BPD1TY85nrnCURF0et1u4yw)\n\nIf we update book successfully, it should go back to book listing page. Therefore, we could validate the body of response should have `Book List` text. The setting page should be as following\n![Response Assert Setting](http://drive.google.com/uc?export=view&id=1cokbEH5hHIiS9NU1UKOJwBKK4DxpZ1asyg)\n\nNow we run the test again, we could see there is a red icon before [*Update book*] which suggests there is an error happened.\n![Results Tree](http://drive.google.com/uc?export=view&id=1eOEmQ1_6SWEFMidQS9GE2dIOdFIw2fXgNQ)\n\nSometimes it is meaningless to continue execute the test if there is an error happened, there is a setting that could stop proceeding if error detected. Click on thread group, and select option when sample error happened. In this tutorial, we choose `Stop Thread`.\n![Stop Thread When Sample Error](http://drive.google.com/uc?export=view&id=1E1k8gUqAJCWri_LmrM5vQimjWj5fRXUx3A)\n\n\n## 4.3. Extract Data From Response\n\nTo resolve the anti-forgery issue, we need to visit [*Edit Book Page*] and extract *\\_\\_RequestVerificationToken* from the response.\n\n### 4.3.1. Add HTTP Request To Show Edit Form\n\nAdd a [*HTTP Request*] between [*Login*] and [*Update Book*]. This request to `/JMeterTutorial/Book/Edit/1`. Name this request to `Show Edit Form`.\n![show edit form](http://drive.google.com/uc?export=view&id=1wwMlivJ2mYs5nYPPl1jh5zGDmM5dhAAivw)\n\n### 4.3.2. Extract Response\n\nRight click on [*Show Edit Form*], choose `Add`->`Post Processors`->`Regular Expression Extractor` in popup menu. \n![Add regular expression extractor](http://drive.google.com/uc?export=view&id=1Vu_P-yeuzRDo4jtNj26r_Mj4JG0bCr4VPg)\n\nChange the name to `Extract Anti-Forgery Token`. And edit the setting:\n- Field to check: `Body`. \n  The *\\_\\_RequestVerificationToken* is in response body. \n- Reference Name: `token`. \n  This is the variable name for the value after extraction.\n- Regular Expression: `<input name=\"__RequestVerificationToken\" type=\"hidden\" value=\"(.*)\" />`.\n  The regular expression to match the value. The value will be retrieved inside `()`\n- Template: `$1$`\n  *$1$* refers to the value inside first *\\(\\)*\n\nThe final setting will look like following:\n![regular expression extractor setting](http://drive.google.com/uc?export=view&id=1_EvOcSgsFnIiojagBbBRPiVCDc-A6rmoSw)\n\n### 4.3.3. Apply Token extracted to Update Book Request\n\nWe have extracted token from [*Show Edit Form*]. Click on [*Update Book*], change value of *\\_\\_RequestVerificationToken* to `${token}`. \n![update book setting](http://drive.google.com/uc?export=view&id=1qTdEeus2hlfHVUjR7E23jNNu4g8_sYdAdQ)\n\nWe run the test again, we should see all requests are success.\n![Results Tree](http://drive.google.com/uc?export=view&id=1W6_-aDIrjL5ePAW3SzOw13SJb3ehqCzk5g)\n\n\n# 5. Logout\n\nLast step is to add logout request. \n![logout request](http://drive.google.com/uc?export=view&id=1G1WeSpqQCpGp3E7HVrQMhZDsmdGRQFNikw)\n\nAfter logout, it should redirect to login form. therefore, we could add a response assertion.\n![logout response assertion](http://drive.google.com/uc?export=view&id=1FqTzahYHgK0JIvGO4bdB6IUAYAZRPf__qw)\n\nWe run the test now should see following in [*Results Tree*]\n![Results Tree](http://drive.google.com/uc?export=view&id=15W6JUWE3ZbFwTCBaVbWnZs3MCLausdoXfA)\n\nChange back the number of thread to 100. We could see result in listeners.\n\n\n# 6. Conclusion\n\nBy follow this tutorial, you could be able to complete the simple load testing from scratch. There are much more functions available in JMeter. This post only covers basic but useful scenarios.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Jmeter-step-by-step","published":1,"date":"2015-07-22T10:32:27.758Z","updated":"2015-07-22T10:32:27.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvpy001zxcf6z17qf5tf"},{"title":"Introduction to Zen Coding","author":"Zhang Guoqiang","date":"2015-07-06T14:27:22.000Z","_content":"\n##About\nDuring web development, it is very often we come up with an html skeleton with some css class decoration first as a template. You may find it be very tedious typing all those html tags and classes. Even though some editors provide a little helper functions like auto html tag closing, it is still a lot of typing expecially when using some predefined classes like bootstrap. By using Zen Coding tool, the process can become much easier and have a lot of fun as well.\n\n##Syntax\nFor creating a navigation menu, we need to generate html like below.\n```html\n<div id=\"page\">\n        <div class=\"logo\"></div>\n        <ul id=\"navigation\">\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n        </ul>\n</div>\n```\nOf course, you can type all the tags and class, copy paste the duplicated part several times and feel the effort spent is still fine. But if using Zen syntax, one line will do the trick.\n```css\ndiv#page>div.logo+ul#navigation>li*5>a\n```\nBy using the css selector we could simply generate the same well formated html with much less typing. And the syntax is also quite straight forward.\n\n##Zen Coding in Visual Studio\nZen Coding is shipped together with visual studio Web Essential plugin. This plugin also contains many other helpful functions which is not the focus of this article. If you have interest, could have a further reading [here](http://vswebessentials.com/).\n\n##References\n[https://code.google.com/p/zen-coding/](https://code.google.com/p/zen-coding/)\n[http://docs.emmet.io/cheat-sheet/](http://docs.emmet.io/cheat-sheet/)\n[http://emmet.io/](http://emmet.io/)\n","source":"_posts/Introduction-to-Zen-Coding.md","raw":"title: Introduction to Zen Coding\nauthor: Zhang Guoqiang\ndate: 2015-07-06 22:27:22\ntags: html,css\n---\n\n##About\nDuring web development, it is very often we come up with an html skeleton with some css class decoration first as a template. You may find it be very tedious typing all those html tags and classes. Even though some editors provide a little helper functions like auto html tag closing, it is still a lot of typing expecially when using some predefined classes like bootstrap. By using Zen Coding tool, the process can become much easier and have a lot of fun as well.\n\n##Syntax\nFor creating a navigation menu, we need to generate html like below.\n```html\n<div id=\"page\">\n        <div class=\"logo\"></div>\n        <ul id=\"navigation\">\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n                <li><a href=\"\"></a></li>\n        </ul>\n</div>\n```\nOf course, you can type all the tags and class, copy paste the duplicated part several times and feel the effort spent is still fine. But if using Zen syntax, one line will do the trick.\n```css\ndiv#page>div.logo+ul#navigation>li*5>a\n```\nBy using the css selector we could simply generate the same well formated html with much less typing. And the syntax is also quite straight forward.\n\n##Zen Coding in Visual Studio\nZen Coding is shipped together with visual studio Web Essential plugin. This plugin also contains many other helpful functions which is not the focus of this article. If you have interest, could have a further reading [here](http://vswebessentials.com/).\n\n##References\n[https://code.google.com/p/zen-coding/](https://code.google.com/p/zen-coding/)\n[http://docs.emmet.io/cheat-sheet/](http://docs.emmet.io/cheat-sheet/)\n[http://emmet.io/](http://emmet.io/)\n","slug":"Introduction-to-Zen-Coding","published":1,"updated":"2015-07-22T10:32:27.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvq30024xcf63ow0ia9l"},{"title":"Continuos Improvement and Respect for People","date":"2015-06-29T14:27:10.000Z","author":"sam huang","_content":"\nTOYOTA Senior Advisor Katsuaki Watanabe:\nThe Toyota Way has two main pillars:continuos improvement and respect for people. \nRespect is necessary to work with people. By \"People\" we mean employees, supply partners, and customers.\n... We don't mean just the end customer; on the assembly line the person at the next workstation is also your \ncustomer. That leads to teamwork.  If you adopt that principle, you'll also keep analyzing what you do \nin order to see if you're doing things perfectly, so you're not troubling your customer.\nThat nutures your ability to idnetify problems, and if you closely observe things, it will lead to \nkaizen-continuos improvement. The root of the Toyota Way is to be dissatisfied with the status quo; you have \nto ask constantly, \"Why are we doing this?\"\n\nIt reminds me of sprint retrospective in scrum. During retrospective, we stop and review what can be done better to deliver the value of the story. \n<Agile Retrospectives: Making Good Teams Great> indicates gathering data, generating insight, and deciding what to do for improvement unfolds retrospective.\nIt's the kaizen-continuos improvement lead by close observation during the sprint. Team also thanks each other in retrospective for the assistence received, which is the action of respect for people. \nWe appreaciate everyone's effort to deliver story value through teamwork.      \n\n","source":"_posts/Continuos-Improvement-and-Respect-for-People.md","raw":"title: Continuos Improvement and Respect for People\ndate: 2015-06-29 22:27:10\nauthor: sam huang\ntags: [lean, scrum, agile]\n---\n\nTOYOTA Senior Advisor Katsuaki Watanabe:\nThe Toyota Way has two main pillars:continuos improvement and respect for people. \nRespect is necessary to work with people. By \"People\" we mean employees, supply partners, and customers.\n... We don't mean just the end customer; on the assembly line the person at the next workstation is also your \ncustomer. That leads to teamwork.  If you adopt that principle, you'll also keep analyzing what you do \nin order to see if you're doing things perfectly, so you're not troubling your customer.\nThat nutures your ability to idnetify problems, and if you closely observe things, it will lead to \nkaizen-continuos improvement. The root of the Toyota Way is to be dissatisfied with the status quo; you have \nto ask constantly, \"Why are we doing this?\"\n\nIt reminds me of sprint retrospective in scrum. During retrospective, we stop and review what can be done better to deliver the value of the story. \n<Agile Retrospectives: Making Good Teams Great> indicates gathering data, generating insight, and deciding what to do for improvement unfolds retrospective.\nIt's the kaizen-continuos improvement lead by close observation during the sprint. Team also thanks each other in retrospective for the assistence received, which is the action of respect for people. \nWe appreaciate everyone's effort to deliver story value through teamwork.      \n\n","slug":"Continuos-Improvement-and-Respect-for-People","published":1,"updated":"2015-07-22T10:32:27.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvq70027xcf6fcu1iz04"},{"title":"Binding Event on Datatables","author":"chen chao","_content":"\n[Datatables](https://www.datatables.net/) is an excellent jquery plug-in that generated flexible and useful table(s). It has lots of build-in function for tables generated, such as ordering, searching, pagination. However, when binding an event to a element inside the table generated by Datatables, it will be disappear after the tables redrawn. This post is to resolve this issue.\n\n\n#Example\n\nSuppose we have following table in Html\n\n```html\n<table id=\"example\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Office</th>\n            <th>Age</th>\n            <th>Start date</th>\n            <th>Salary</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Tiger Nixon</td>\n            <td>System Architect</td>\n            <td>Edinburgh</td>\n            <td>61</td>\n            <td>2011/04/25</td>\n            <td>$320,800</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n        <tr>\n            <td>Garrett Winters</td>\n            <td>Accountant</td>\n            <td>Tokyo</td>\n            <td>63</td>\n            <td>2011/07/25</td>\n            <td>$170,750</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n        <tr>\n            <td>Ashton Cox</td>\n            <td>Junior Technical Author</td>\n            <td>San Francisco</td>\n            <td>66</td>\n            <td>2009/01/12</td>\n            <td>$86,000</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n    <tbody>\n<table>\n```\n\nAnd javascript is as following\n```javascript\n$().ready(function () {\n    var t = $('#example').DataTable();\n    $(\"[name=btnEdit]\").click(function(e) {\n        // do edit function \n    });\n});\n```\n\n# Problem\nThe **Edit** button will be working when this table is shown. However, if we using the search function to filter the content of table, we will find that the **Edit** button is not functioning. \n\n\n# Solutions\nTo resolve this issue, there are two solutions:\n1. put the javascript function inside html, for example:\n    ```html\n    <button name=\"btnEdit\" onclick=\"edit(this)\">edit<button>\n    ```\n2. rebinding the event on **Edit** button when search event fired. We also could rebind event after table redrawn since after search, draw event is fired as well. Example is\n    ```javascript\n    $().ready(function () {\n        $('#example').on('draw.dt', function(){        \n            $(\"[name=btnEdit]\").unbind(\"click\").click(function(e) {\n                // do edit function \n            });\n        ).DataTable();\n    });\n    ```\n    There is a `Unbind(\"click\")` is called to avoid keeping binding same event on the **Edit** button since the tables is redrawn on every *keypress* event on the *search* input box. \n    \n    \n\n\n\n\n\n\n\n","source":"_posts/Binding Event on Datatables.md","raw":"title: Binding Event on Datatables\nauthor: chen chao\ntags: javascript\n---\n\n[Datatables](https://www.datatables.net/) is an excellent jquery plug-in that generated flexible and useful table(s). It has lots of build-in function for tables generated, such as ordering, searching, pagination. However, when binding an event to a element inside the table generated by Datatables, it will be disappear after the tables redrawn. This post is to resolve this issue.\n\n\n#Example\n\nSuppose we have following table in Html\n\n```html\n<table id=\"example\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Office</th>\n            <th>Age</th>\n            <th>Start date</th>\n            <th>Salary</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Tiger Nixon</td>\n            <td>System Architect</td>\n            <td>Edinburgh</td>\n            <td>61</td>\n            <td>2011/04/25</td>\n            <td>$320,800</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n        <tr>\n            <td>Garrett Winters</td>\n            <td>Accountant</td>\n            <td>Tokyo</td>\n            <td>63</td>\n            <td>2011/07/25</td>\n            <td>$170,750</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n        <tr>\n            <td>Ashton Cox</td>\n            <td>Junior Technical Author</td>\n            <td>San Francisco</td>\n            <td>66</td>\n            <td>2009/01/12</td>\n            <td>$86,000</td>\n            <th><button name=\"btnEdit\">edit<button></th>\n        </tr>\n    <tbody>\n<table>\n```\n\nAnd javascript is as following\n```javascript\n$().ready(function () {\n    var t = $('#example').DataTable();\n    $(\"[name=btnEdit]\").click(function(e) {\n        // do edit function \n    });\n});\n```\n\n# Problem\nThe **Edit** button will be working when this table is shown. However, if we using the search function to filter the content of table, we will find that the **Edit** button is not functioning. \n\n\n# Solutions\nTo resolve this issue, there are two solutions:\n1. put the javascript function inside html, for example:\n    ```html\n    <button name=\"btnEdit\" onclick=\"edit(this)\">edit<button>\n    ```\n2. rebinding the event on **Edit** button when search event fired. We also could rebind event after table redrawn since after search, draw event is fired as well. Example is\n    ```javascript\n    $().ready(function () {\n        $('#example').on('draw.dt', function(){        \n            $(\"[name=btnEdit]\").unbind(\"click\").click(function(e) {\n                // do edit function \n            });\n        ).DataTable();\n    });\n    ```\n    There is a `Unbind(\"click\")` is called to avoid keeping binding same event on the **Edit** button since the tables is redrawn on every *keypress* event on the *search* input box. \n    \n    \n\n\n\n\n\n\n\n","slug":"Binding Event on Datatables","published":1,"date":"2015-07-22T10:32:27.754Z","updated":"2015-07-22T10:32:27.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemsvqd002excf639ei4w2w"},{"title":"How to store performance monitor data in SQL server database","date":"2015-07-20T16:37:17.000Z","author":"Toh Leng Wee","_content":"\n## About\n![Performance Monitor](https://lh3.googleusercontent.com/OX_1xPFlXWJt-QYiB9FuAN7AhQy0QT4-EceNIUf-W8g=w1024-h764-no \"Performance Monitor\")\nPerformance monitor is a very good tool for us to monitor real time SQL Server performance data, such as **CPU usage**, **memory usage**, **batch request/sec** and so on. But the question is, could we store these information into database to do offline analysis ? The answer is yes ! And we are going to show you how.\n\n## Create system Data Source Name (DSN)\nFirst of all, you have to create an empty database, in this case, my database is created in my local laptop called **PerformanceMonitor**\n![PerformanceMonitorDatabase](https://lh3.googleusercontent.com/pOusKB28E6pKMKHiAba7uzw-w9UiTf79kmyOqa8Mdd0=w345-h225-no \"PerformanceMonitor Database\")\n\nRun **odbcad32.exe** in Start > Run. To open **ODBC Data Source Administrator**.\n![odbcad32.exe](https://lh3.googleusercontent.com/1kJHjdUUWXKZMygiIy9umChB_hY5M00-Di3wffMxRtE=w413-h212-no \"odbcad32.exe\")\n\nThen goes to **System DSN** and select **Add**.\n![System DSN](https://lh3.googleusercontent.com/daDlscLuV_9OJZH2bFY4O7cIKVtFwTk607gK249LydA=w471-h390-no \"System DSN\")\n\nSelect a driver\n![Select a driver for which you want to set up a data source](https://lh3.googleusercontent.com/SXkrQxSDo3_jNmpbcDlG_M-xIZlWKtKvOEJzmrpmbjk=w478-h358-no \"Select a driver for which you want to set up a data source\")\n\nEnter any name, and your database location (in this case it's localhost \".\\\")\n![Create a new data source to SQL Server](https://lh3.googleusercontent.com/5ujQBMr8xntptoQ_JMzK_2E6PiQRcGRi_-TF9f7bVtY=w520-h368-no \"Create a new data source to SQL Server\")\n\nSet up authentication\n![Set up authentication](https://lh3.googleusercontent.com/aMv0WnBlC2XsHrrfeAOXrfy4C1aFSBw37r3tVibqeN4=w520-h368-no \"Set up authentication\")\n\nChange the default database to **PerformanceMonitor**\n![Change the default database to PerformanceMonitor](https://lh3.googleusercontent.com/ChzZ60EhEmMyBpFejVyK9ns2qvR8icfO8qjN5yjgwqI=w520-h368-no \"Change the default database to PerformanceMonitor\")\n\nNext and click Finish\n![Next and click Finish](https://lh3.googleusercontent.com/wOtmF3V_dEeFG8xrbjAoRtex2FJnhmrG6bCthsuxy4A=w520-h368-no \"Next and click Finish\")\n\nYou could test data source connection\n![Test data source](https://lh3.googleusercontent.com/BRuclBri51QPYh3p3owc1mex-NPqw0OC4HZaiq2YUZU=w378-h392-no \"Test data source\")\n\n## Reliability and Performance Monitor\nRun **perfmon.exe** in Start > Run. To open **Performance Monitor**.\n![perfmon.exe](https://lh3.googleusercontent.com/jULpc3x-fKikOBdzjCv6qsQFLXoP4iY2_ky_AcYsLnc=w413-h212-no \"perfmon.exe\")\n\nCreate a new data collector set\n![Create a new data collector set](https://lh3.googleusercontent.com/1hWNNB0SXoi5670gX9U6YGP0l69GIoWx97sCxPooUas=w547-h355-no \"Create a new data collector set\")\n\nCreate manually (Advanced)\n![Create manually (Advanced)](https://lh3.googleusercontent.com/oTlYRpSiK5dMGeCrGqpJKJCZfEkvIQXzN7u4-52Igvc=w549-h424-no \"Create manually (Advanced)\")\n\nCreate data logs, select Performance counter\n![Select performance counter](https://lh3.googleusercontent.com/1aU5q1SKtPX0QsYcWD9w3r18NJfaOIO0dQw4EZyrGJU=w549-h424-no \"Select performance counter\")\n\nAdd performance counters and choose Data Source Name (DSN)\n![Add performance counters](https://lh3.googleusercontent.com/Mpzd1rV4C6GLrAHfhV3We2fk-vDAGgrTN1fQr9uTtT0=w414-h461-no \"Add performance counters\")\n\n**Start**\n![Start by hitting green arrow](https://lh3.googleusercontent.com/krl2Xz3gLzselFD_dQAJyXHtJnRfPFbIQceaL4yWwlA=w534-h274-no \"Start by hitting green arrow\")\n\nYou Shall see there are some tables being created in **PerformanceMonitor** database.\n![Database](https://lh3.googleusercontent.com/YHS3Jc257-MvYGlq10Ps-zcK27vApaLcQf3inpfOVC4=w345-h438-no \"Database\")\n\n\n## Trouble Shooting\nYou might get errors such as \"Call to SQLExecDirect failed with %1\", this is most likely since the \"PerformanceMonitor\" is set to run as System or any\nother account that doesn't have access to the SQL Server. \nIf this is the case, then right click \"PerformanceMonitor\" and select properties.\n\nThis will give you the option to change the Run As account, do this and use an account that has the proper rights, for example your windows account.\n\n## Reference\n\n[How to store performance monitor data into SQL Server using Reliability and Performance Monitor](http://blogs.msdn.com/b/spike/archive/2009/08/27/how-to-store-performance-monitor-data-into-sql-server-using-reliability-and-performance-monitor.aspx)","source":"_posts/how-to-store-performance-monitor-data-in-sql-server.md","raw":"title: How to store performance monitor data in SQL server database\ndate: 2015-07-21 00:37:17\nauthor: Toh Leng Wee\ntags: [sql, performance monitor, database]\n---\n\n## About\n![Performance Monitor](https://lh3.googleusercontent.com/OX_1xPFlXWJt-QYiB9FuAN7AhQy0QT4-EceNIUf-W8g=w1024-h764-no \"Performance Monitor\")\nPerformance monitor is a very good tool for us to monitor real time SQL Server performance data, such as **CPU usage**, **memory usage**, **batch request/sec** and so on. But the question is, could we store these information into database to do offline analysis ? The answer is yes ! And we are going to show you how.\n\n## Create system Data Source Name (DSN)\nFirst of all, you have to create an empty database, in this case, my database is created in my local laptop called **PerformanceMonitor**\n![PerformanceMonitorDatabase](https://lh3.googleusercontent.com/pOusKB28E6pKMKHiAba7uzw-w9UiTf79kmyOqa8Mdd0=w345-h225-no \"PerformanceMonitor Database\")\n\nRun **odbcad32.exe** in Start > Run. To open **ODBC Data Source Administrator**.\n![odbcad32.exe](https://lh3.googleusercontent.com/1kJHjdUUWXKZMygiIy9umChB_hY5M00-Di3wffMxRtE=w413-h212-no \"odbcad32.exe\")\n\nThen goes to **System DSN** and select **Add**.\n![System DSN](https://lh3.googleusercontent.com/daDlscLuV_9OJZH2bFY4O7cIKVtFwTk607gK249LydA=w471-h390-no \"System DSN\")\n\nSelect a driver\n![Select a driver for which you want to set up a data source](https://lh3.googleusercontent.com/SXkrQxSDo3_jNmpbcDlG_M-xIZlWKtKvOEJzmrpmbjk=w478-h358-no \"Select a driver for which you want to set up a data source\")\n\nEnter any name, and your database location (in this case it's localhost \".\\\")\n![Create a new data source to SQL Server](https://lh3.googleusercontent.com/5ujQBMr8xntptoQ_JMzK_2E6PiQRcGRi_-TF9f7bVtY=w520-h368-no \"Create a new data source to SQL Server\")\n\nSet up authentication\n![Set up authentication](https://lh3.googleusercontent.com/aMv0WnBlC2XsHrrfeAOXrfy4C1aFSBw37r3tVibqeN4=w520-h368-no \"Set up authentication\")\n\nChange the default database to **PerformanceMonitor**\n![Change the default database to PerformanceMonitor](https://lh3.googleusercontent.com/ChzZ60EhEmMyBpFejVyK9ns2qvR8icfO8qjN5yjgwqI=w520-h368-no \"Change the default database to PerformanceMonitor\")\n\nNext and click Finish\n![Next and click Finish](https://lh3.googleusercontent.com/wOtmF3V_dEeFG8xrbjAoRtex2FJnhmrG6bCthsuxy4A=w520-h368-no \"Next and click Finish\")\n\nYou could test data source connection\n![Test data source](https://lh3.googleusercontent.com/BRuclBri51QPYh3p3owc1mex-NPqw0OC4HZaiq2YUZU=w378-h392-no \"Test data source\")\n\n## Reliability and Performance Monitor\nRun **perfmon.exe** in Start > Run. To open **Performance Monitor**.\n![perfmon.exe](https://lh3.googleusercontent.com/jULpc3x-fKikOBdzjCv6qsQFLXoP4iY2_ky_AcYsLnc=w413-h212-no \"perfmon.exe\")\n\nCreate a new data collector set\n![Create a new data collector set](https://lh3.googleusercontent.com/1hWNNB0SXoi5670gX9U6YGP0l69GIoWx97sCxPooUas=w547-h355-no \"Create a new data collector set\")\n\nCreate manually (Advanced)\n![Create manually (Advanced)](https://lh3.googleusercontent.com/oTlYRpSiK5dMGeCrGqpJKJCZfEkvIQXzN7u4-52Igvc=w549-h424-no \"Create manually (Advanced)\")\n\nCreate data logs, select Performance counter\n![Select performance counter](https://lh3.googleusercontent.com/1aU5q1SKtPX0QsYcWD9w3r18NJfaOIO0dQw4EZyrGJU=w549-h424-no \"Select performance counter\")\n\nAdd performance counters and choose Data Source Name (DSN)\n![Add performance counters](https://lh3.googleusercontent.com/Mpzd1rV4C6GLrAHfhV3We2fk-vDAGgrTN1fQr9uTtT0=w414-h461-no \"Add performance counters\")\n\n**Start**\n![Start by hitting green arrow](https://lh3.googleusercontent.com/krl2Xz3gLzselFD_dQAJyXHtJnRfPFbIQceaL4yWwlA=w534-h274-no \"Start by hitting green arrow\")\n\nYou Shall see there are some tables being created in **PerformanceMonitor** database.\n![Database](https://lh3.googleusercontent.com/YHS3Jc257-MvYGlq10Ps-zcK27vApaLcQf3inpfOVC4=w345-h438-no \"Database\")\n\n\n## Trouble Shooting\nYou might get errors such as \"Call to SQLExecDirect failed with %1\", this is most likely since the \"PerformanceMonitor\" is set to run as System or any\nother account that doesn't have access to the SQL Server. \nIf this is the case, then right click \"PerformanceMonitor\" and select properties.\n\nThis will give you the option to change the Run As account, do this and use an account that has the proper rights, for example your windows account.\n\n## Reference\n\n[How to store performance monitor data into SQL Server using Reliability and Performance Monitor](http://blogs.msdn.com/b/spike/archive/2009/08/27/how-to-store-performance-monitor-data-into-sql-server-using-reliability-and-performance-monitor.aspx)","slug":"how-to-store-performance-monitor-data-in-sql-server","published":1,"updated":"2015-07-21T16:10:35.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicemterf0000fcf64gmiuduw"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cicemsvnd0003xcf6o55bfty8","tag_id":"cicemsvnh0004xcf663bvk359","_id":"cicemsvnj0005xcf6srhz7isz"},{"post_id":"cicemsvnm0006xcf6fpuxbnvd","tag_id":"cicemsvno0007xcf63y9ty632","_id":"cicemsvnp000axcf6o88scagc"},{"post_id":"cicemsvnm0006xcf6fpuxbnvd","tag_id":"cicemsvno0008xcf6fjphtdq0","_id":"cicemsvnp000bxcf6bakcfnh9"},{"post_id":"cicemsvnm0006xcf6fpuxbnvd","tag_id":"cicemsvno0009xcf6ajpwx9yf","_id":"cicemsvnp000cxcf6m5oi1ehn"},{"post_id":"cicemsvns000dxcf60bk3udtm","tag_id":"cicemsvnv000excf6b2eif56e","_id":"cicemsvny000hxcf6dn0y9llc"},{"post_id":"cicemsvns000dxcf60bk3udtm","tag_id":"cicemsvnw000fxcf6p9dntygl","_id":"cicemsvny000ixcf6jw0365al"},{"post_id":"cicemsvns000dxcf60bk3udtm","tag_id":"cicemsvnx000gxcf6urct936x","_id":"cicemsvny000jxcf66y2qrwot"},{"post_id":"cicemsvo2000kxcf6p6phafk2","tag_id":"cicemsvo4000lxcf6c75zx70z","_id":"cicemsvo5000nxcf67xiyu9s2"},{"post_id":"cicemsvo2000kxcf6p6phafk2","tag_id":"cicemsvo4000mxcf6f45rnicp","_id":"cicemsvo5000oxcf67gvl4g4w"},{"post_id":"cicemsvob000pxcf6p06x3gp9","tag_id":"cicemsvof000qxcf66ermmeky","_id":"cicemsvof000rxcf6frsyri4s"},{"post_id":"cicemsvoi000sxcf69w5gjv3n","tag_id":"cicemsvoj000txcf6mj8h2dfl","_id":"cicemsvol000vxcf6zoohf82q"},{"post_id":"cicemsvoi000sxcf69w5gjv3n","tag_id":"cicemsvok000uxcf6oyvzoeec","_id":"cicemsvom000wxcf6vns2eqod"},{"post_id":"cicemsvoo000xxcf6hectavgm","tag_id":"cicemsvop000yxcf6gaz44tfb","_id":"cicemsvoq0010xcf6yoeo3x1j"},{"post_id":"cicemsvoo000xxcf6hectavgm","tag_id":"cicemsvoq000zxcf64rx9upkd","_id":"cicemsvoq0011xcf6u916uyf9"},{"post_id":"cicemsvos0012xcf62nhjeg4b","tag_id":"cicemsvou0013xcf6d78cj05t","_id":"cicemsvow0017xcf61anuxmul"},{"post_id":"cicemsvos0012xcf62nhjeg4b","tag_id":"cicemsvov0014xcf6air86jdr","_id":"cicemsvow0018xcf6e7b791ky"},{"post_id":"cicemsvos0012xcf62nhjeg4b","tag_id":"cicemsvov0015xcf6n5az4onp","_id":"cicemsvow0019xcf6dxo99uid"},{"post_id":"cicemsvos0012xcf62nhjeg4b","tag_id":"cicemsvov0016xcf6zlv0odoo","_id":"cicemsvow001axcf6ayednrtu"},{"post_id":"cicemsvp0001bxcf6qt5g6k6w","tag_id":"cicemsvp1001cxcf678dsboiz","_id":"cicemsvp2001excf6lwuadoxo"},{"post_id":"cicemsvp0001bxcf6qt5g6k6w","tag_id":"cicemsvp2001dxcf68ttzci9t","_id":"cicemsvp2001fxcf64sg4g799"},{"post_id":"cicemsvp5001gxcf6o1h3une0","tag_id":"cicemsvp6001hxcf6fwoaf2e8","_id":"cicemsvp8001jxcf63kiduort"},{"post_id":"cicemsvp5001gxcf6o1h3une0","tag_id":"cicemsvp7001ixcf6fatf73wc","_id":"cicemsvp8001kxcf6su36jdgx"},{"post_id":"cicemsvpb001lxcf6282n3vrf","tag_id":"cicemsvpc001mxcf6gr5k5o7o","_id":"cicemsvpc001nxcf69j9sv9em"},{"post_id":"cicemsvpe001oxcf6nrz2uqgu","tag_id":"cicemsvpf001pxcf6no5a1bj4","_id":"cicemsvpg001qxcf673dtqoxe"},{"post_id":"cicemsvpj001rxcf6nw00p55r","tag_id":"cicemsvpm001sxcf6idhiknmp","_id":"cicemsvpn001txcf6r7azsnld"},{"post_id":"cicemsvpq001uxcf621tksj5o","tag_id":"cicemsvpt001vxcf6elntmylv","_id":"cicemsvpu001xxcf68l1140zp"},{"post_id":"cicemsvpq001uxcf621tksj5o","tag_id":"cicemsvpt001wxcf6o60nr5pc","_id":"cicemsvpu001yxcf64gw8jii3"},{"post_id":"cicemsvpy001zxcf6z17qf5tf","tag_id":"cicemsvpz0020xcf6t5c92h0e","_id":"cicemsvq00022xcf6drmv93lo"},{"post_id":"cicemsvpy001zxcf6z17qf5tf","tag_id":"cicemsvq00021xcf67mn7boys","_id":"cicemsvq00023xcf63oy4bogk"},{"post_id":"cicemsvq30024xcf63ow0ia9l","tag_id":"cicemsvq50025xcf68knx0vi5","_id":"cicemsvq50026xcf68dps0swr"},{"post_id":"cicemsvq70027xcf6fcu1iz04","tag_id":"cicemsvq80028xcf64xqw7rlj","_id":"cicemsvq9002bxcf6iit7qp9e"},{"post_id":"cicemsvq70027xcf6fcu1iz04","tag_id":"cicemsvq80029xcf61sn398fj","_id":"cicemsvqa002cxcf67oembstk"},{"post_id":"cicemsvq70027xcf6fcu1iz04","tag_id":"cicemsvq9002axcf61jjwacwj","_id":"cicemsvqa002dxcf6r4hy4u6t"},{"post_id":"cicemsvqd002excf639ei4w2w","tag_id":"cicemsvou0013xcf6d78cj05t","_id":"cicemsvqf002fxcf6o7zyrx97"},{"post_id":"cicemterf0000fcf64gmiuduw","tag_id":"cicemsvo4000lxcf6c75zx70z","_id":"cicemterv0003fcf6icsguoei"},{"post_id":"cicemterf0000fcf64gmiuduw","tag_id":"cicemterl0001fcf6waobekrw","_id":"cicemterv0004fcf6m8qi3e3k"},{"post_id":"cicemterf0000fcf64gmiuduw","tag_id":"cicemteru0002fcf64bdmty5t","_id":"cicemterv0005fcf6mpg3hlsa"}],"Tag":[{"name":"Agile, User Story Mapping","_id":"cicemsvnh0004xcf663bvk359"},{"name":"csharp","_id":"cicemsvno0007xcf63y9ty632"},{"name":".Net","_id":"cicemsvno0008xcf6fjphtdq0"},{"name":"Test","_id":"cicemsvno0009xcf6ajpwx9yf"},{"name":"Jenkins","_id":"cicemsvnv000excf6b2eif56e"},{"name":"msdeploy","_id":"cicemsvnw000fxcf6p9dntygl"},{"name":"CI","_id":"cicemsvnx000gxcf6urct936x"},{"name":"sql","_id":"cicemsvo4000lxcf6c75zx70z"},{"name":"query","_id":"cicemsvo4000mxcf6f45rnicp"},{"name":"Management","_id":"cicemsvof000qxcf66ermmeky"},{"name":"team","_id":"cicemsvoj000txcf6mj8h2dfl"},{"name":"Scrum Master","_id":"cicemsvok000uxcf6oyvzoeec"},{"name":"mvc5","_id":"cicemsvop000yxcf6gaz44tfb"},{"name":"asp.net","_id":"cicemsvoq000zxcf64rx9upkd"},{"name":"javascript","_id":"cicemsvou0013xcf6d78cj05t"},{"name":"unit test","_id":"cicemsvov0014xcf6air86jdr"},{"name":"jasmine","_id":"cicemsvov0015xcf6n5az4onp"},{"name":"karma","_id":"cicemsvov0016xcf6zlv0odoo"},{"name":"C#","_id":"cicemsvp1001cxcf678dsboiz"},{"name":"MVC","_id":"cicemsvp2001dxcf68ttzci9t"},{"name":"git","_id":"cicemsvp6001hxcf6fwoaf2e8"},{"name":"hexo","_id":"cicemsvp7001ixcf6fatf73wc"},{"name":"tsql","_id":"cicemsvpc001mxcf6gr5k5o7o"},{"name":"css","_id":"cicemsvpf001pxcf6no5a1bj4"},{"name":"mssql","_id":"cicemsvpm001sxcf6idhiknmp"},{"name":"Remote usability testing tool","_id":"cicemsvpt001vxcf6elntmylv"},{"name":"Heat Map","_id":"cicemsvpt001wxcf6o60nr5pc"},{"name":"JMeter","_id":"cicemsvpz0020xcf6t5c92h0e"},{"name":"Load testing","_id":"cicemsvq00021xcf67mn7boys"},{"name":"html,css","_id":"cicemsvq50025xcf68knx0vi5"},{"name":"lean","_id":"cicemsvq80028xcf64xqw7rlj"},{"name":"scrum","_id":"cicemsvq80029xcf61sn398fj"},{"name":"agile","_id":"cicemsvq9002axcf61jjwacwj"},{"name":"performance monitor","_id":"cicemterl0001fcf6waobekrw"},{"name":"database","_id":"cicemteru0002fcf64bdmty5t"}]}}